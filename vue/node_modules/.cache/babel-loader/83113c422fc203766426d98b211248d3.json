{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"irishub.guardian\";\nconst baseMsgAddSuper = {\n  description: \"\",\n  address: \"\",\n  addedBy: \"\"\n};\nexport const MsgAddSuper = {\n  encode(message, writer = Writer.create()) {\n    if (message.description !== \"\") {\n      writer.uint32(10).string(message.description);\n    }\n\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n\n    if (message.addedBy !== \"\") {\n      writer.uint32(26).string(message.addedBy);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgAddSuper\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.description = reader.string();\n          break;\n\n        case 2:\n          message.address = reader.string();\n          break;\n\n        case 3:\n          message.addedBy = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgAddSuper\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.addedBy !== undefined && object.addedBy !== null) {\n      message.addedBy = String(object.addedBy);\n    } else {\n      message.addedBy = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.description !== undefined && (obj.description = message.description);\n    message.address !== undefined && (obj.address = message.address);\n    message.addedBy !== undefined && (obj.addedBy = message.addedBy);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgAddSuper\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = object.description;\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.addedBy !== undefined && object.addedBy !== null) {\n      message.addedBy = object.addedBy;\n    } else {\n      message.addedBy = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgAddSuperResponse = {};\nexport const MsgAddSuperResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgAddSuperResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgAddSuperResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgAddSuperResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgDeleteSuper = {\n  address: \"\",\n  deletedBy: \"\"\n};\nexport const MsgDeleteSuper = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n\n    if (message.deletedBy !== \"\") {\n      writer.uint32(26).string(message.deletedBy);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgDeleteSuper\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 2:\n          message.address = reader.string();\n          break;\n\n        case 3:\n          message.deletedBy = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgDeleteSuper\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.deletedBy !== undefined && object.deletedBy !== null) {\n      message.deletedBy = String(object.deletedBy);\n    } else {\n      message.deletedBy = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.deletedBy !== undefined && (obj.deletedBy = message.deletedBy);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgDeleteSuper\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.deletedBy !== undefined && object.deletedBy !== null) {\n      message.deletedBy = object.deletedBy;\n    } else {\n      message.deletedBy = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgDeleteSuperResponse = {};\nexport const MsgDeleteSuperResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgDeleteSuperResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgDeleteSuperResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgDeleteSuperResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  AddSuper(request) {\n    const data = MsgAddSuper.encode(request).finish();\n    const promise = this.rpc.request(\"irishub.guardian.Msg\", \"AddSuper\", data);\n    return promise.then(data => MsgAddSuperResponse.decode(new Reader(data)));\n  }\n\n  DeleteSuper(request) {\n    const data = MsgDeleteSuper.encode(request).finish();\n    const promise = this.rpc.request(\"irishub.guardian.Msg\", \"DeleteSuper\", data);\n    return promise.then(data => MsgDeleteSuperResponse.decode(new Reader(data)));\n  }\n\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/irisnet/irishub/irishub.guardian/module/types/guardian/tx.js"],"names":["Reader","Writer","protobufPackage","baseMsgAddSuper","description","address","addedBy","MsgAddSuper","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgAddSuperResponse","MsgAddSuperResponse","_","baseMsgDeleteSuper","deletedBy","MsgDeleteSuper","baseMsgDeleteSuperResponse","MsgDeleteSuperResponse","MsgClientImpl","constructor","rpc","AddSuper","request","data","finish","promise","then","DeleteSuper"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"irishub.guardian\";\nconst baseMsgAddSuper = { description: \"\", address: \"\", addedBy: \"\" };\nexport const MsgAddSuper = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.addedBy !== \"\") {\n            writer.uint32(26).string(message.addedBy);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddSuper };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.addedBy = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddSuper };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.addedBy !== undefined && object.addedBy !== null) {\n            message.addedBy = String(object.addedBy);\n        }\n        else {\n            message.addedBy = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.address !== undefined && (obj.address = message.address);\n        message.addedBy !== undefined && (obj.addedBy = message.addedBy);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddSuper };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.addedBy !== undefined && object.addedBy !== null) {\n            message.addedBy = object.addedBy;\n        }\n        else {\n            message.addedBy = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAddSuperResponse = {};\nexport const MsgAddSuperResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddSuperResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgAddSuperResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgAddSuperResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteSuper = { address: \"\", deletedBy: \"\" };\nexport const MsgDeleteSuper = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.deletedBy !== \"\") {\n            writer.uint32(26).string(message.deletedBy);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSuper };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.deletedBy = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteSuper };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.deletedBy !== undefined && object.deletedBy !== null) {\n            message.deletedBy = String(object.deletedBy);\n        }\n        else {\n            message.deletedBy = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.deletedBy !== undefined && (obj.deletedBy = message.deletedBy);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteSuper };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.deletedBy !== undefined && object.deletedBy !== null) {\n            message.deletedBy = object.deletedBy;\n        }\n        else {\n            message.deletedBy = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteSuperResponse = {};\nexport const MsgDeleteSuperResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSuperResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteSuperResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteSuperResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    AddSuper(request) {\n        const data = MsgAddSuper.encode(request).finish();\n        const promise = this.rpc.request(\"irishub.guardian.Msg\", \"AddSuper\", data);\n        return promise.then((data) => MsgAddSuperResponse.decode(new Reader(data)));\n    }\n    DeleteSuper(request) {\n        const data = MsgDeleteSuper.encode(request).finish();\n        const promise = this.rpc.request(\"irishub.guardian.Msg\", \"DeleteSuper\", data);\n        return promise.then((data) => MsgDeleteSuperResponse.decode(new Reader(data)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}