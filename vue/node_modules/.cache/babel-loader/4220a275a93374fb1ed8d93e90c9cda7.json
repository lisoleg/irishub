{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n  address: \"\",\n  startHeight: 0,\n  indexOffset: 0,\n  tombstoned: false,\n  missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    if (message.startHeight !== 0) {\n      writer.uint32(16).int64(message.startHeight);\n    }\n\n    if (message.indexOffset !== 0) {\n      writer.uint32(24).int64(message.indexOffset);\n    }\n\n    if (message.jailedUntil !== undefined) {\n      Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.tombstoned === true) {\n      writer.uint32(40).bool(message.tombstoned);\n    }\n\n    if (message.missedBlocksCounter !== 0) {\n      writer.uint32(48).int64(message.missedBlocksCounter);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorSigningInfo\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.startHeight = longToNumber(reader.int64());\n          break;\n\n        case 3:\n          message.indexOffset = longToNumber(reader.int64());\n          break;\n\n        case 4:\n          message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        case 5:\n          message.tombstoned = reader.bool();\n          break;\n\n        case 6:\n          message.missedBlocksCounter = longToNumber(reader.int64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorSigningInfo\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.startHeight !== undefined && object.startHeight !== null) {\n      message.startHeight = Number(object.startHeight);\n    } else {\n      message.startHeight = 0;\n    }\n\n    if (object.indexOffset !== undefined && object.indexOffset !== null) {\n      message.indexOffset = Number(object.indexOffset);\n    } else {\n      message.indexOffset = 0;\n    }\n\n    if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n      message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n    } else {\n      message.jailedUntil = undefined;\n    }\n\n    if (object.tombstoned !== undefined && object.tombstoned !== null) {\n      message.tombstoned = Boolean(object.tombstoned);\n    } else {\n      message.tombstoned = false;\n    }\n\n    if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n      message.missedBlocksCounter = Number(object.missedBlocksCounter);\n    } else {\n      message.missedBlocksCounter = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n    message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n    message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n    message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n    message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorSigningInfo\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.startHeight !== undefined && object.startHeight !== null) {\n      message.startHeight = object.startHeight;\n    } else {\n      message.startHeight = 0;\n    }\n\n    if (object.indexOffset !== undefined && object.indexOffset !== null) {\n      message.indexOffset = object.indexOffset;\n    } else {\n      message.indexOffset = 0;\n    }\n\n    if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n      message.jailedUntil = object.jailedUntil;\n    } else {\n      message.jailedUntil = undefined;\n    }\n\n    if (object.tombstoned !== undefined && object.tombstoned !== null) {\n      message.tombstoned = object.tombstoned;\n    } else {\n      message.tombstoned = false;\n    }\n\n    if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n      message.missedBlocksCounter = object.missedBlocksCounter;\n    } else {\n      message.missedBlocksCounter = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseParams = {\n  signedBlocksWindow: 0\n};\nexport const Params = {\n  encode(message, writer = Writer.create()) {\n    if (message.signedBlocksWindow !== 0) {\n      writer.uint32(8).int64(message.signedBlocksWindow);\n    }\n\n    if (message.minSignedPerWindow.length !== 0) {\n      writer.uint32(18).bytes(message.minSignedPerWindow);\n    }\n\n    if (message.downtimeJailDuration !== undefined) {\n      Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.slashFractionDoubleSign.length !== 0) {\n      writer.uint32(34).bytes(message.slashFractionDoubleSign);\n    }\n\n    if (message.slashFractionDowntime.length !== 0) {\n      writer.uint32(42).bytes(message.slashFractionDowntime);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseParams\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signedBlocksWindow = longToNumber(reader.int64());\n          break;\n\n        case 2:\n          message.minSignedPerWindow = reader.bytes();\n          break;\n\n        case 3:\n          message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.slashFractionDoubleSign = reader.bytes();\n          break;\n\n        case 5:\n          message.slashFractionDowntime = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseParams\n    };\n\n    if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n      message.signedBlocksWindow = Number(object.signedBlocksWindow);\n    } else {\n      message.signedBlocksWindow = 0;\n    }\n\n    if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n      message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n    }\n\n    if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n      message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n    } else {\n      message.downtimeJailDuration = undefined;\n    }\n\n    if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n      message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n    }\n\n    if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n      message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n    message.minSignedPerWindow !== undefined && (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n    message.downtimeJailDuration !== undefined && (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n    message.slashFractionDoubleSign !== undefined && (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n    message.slashFractionDowntime !== undefined && (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseParams\n    };\n\n    if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n      message.signedBlocksWindow = object.signedBlocksWindow;\n    } else {\n      message.signedBlocksWindow = 0;\n    }\n\n    if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n      message.minSignedPerWindow = object.minSignedPerWindow;\n    } else {\n      message.minSignedPerWindow = new Uint8Array();\n    }\n\n    if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n      message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n    } else {\n      message.downtimeJailDuration = undefined;\n    }\n\n    if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n      message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n    } else {\n      message.slashFractionDoubleSign = new Uint8Array();\n    }\n\n    if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n      message.slashFractionDowntime = object.slashFractionDowntime;\n    } else {\n      message.slashFractionDowntime = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction toTimestamp(date) {\n  const seconds = date.getTime() / 1000;\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  let millis = t.seconds * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js"],"names":["Timestamp","Long","util","configure","Writer","Reader","Duration","protobufPackage","baseValidatorSigningInfo","address","startHeight","indexOffset","tombstoned","missedBlocksCounter","ValidatorSigningInfo","encode","message","writer","create","uint32","string","int64","jailedUntil","undefined","toTimestamp","fork","ldelim","bool","decode","input","length","reader","Uint8Array","end","len","pos","tag","longToNumber","fromTimestamp","skipType","fromJSON","object","String","Number","fromJsonTimestamp","Boolean","toJSON","obj","toISOString","fromPartial","baseParams","signedBlocksWindow","Params","minSignedPerWindow","bytes","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","bytesFromBase64","base64FromBytes","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","fromCharCode","join","date","seconds","getTime","nanos","t","millis","Date","o","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}