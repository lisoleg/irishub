{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../coinswap/coinswap\";\nexport const protobufPackage = \"irismod.coinswap\";\nconst baseMsgAddLiquidity = {\n  exactStandardAmt: \"\",\n  minLiquidity: \"\",\n  deadline: 0,\n  sender: \"\"\n};\nexport const MsgAddLiquidity = {\n  encode(message, writer = Writer.create()) {\n    if (message.maxToken !== undefined) {\n      Coin.encode(message.maxToken, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.exactStandardAmt !== \"\") {\n      writer.uint32(18).string(message.exactStandardAmt);\n    }\n\n    if (message.minLiquidity !== \"\") {\n      writer.uint32(26).string(message.minLiquidity);\n    }\n\n    if (message.deadline !== 0) {\n      writer.uint32(32).int64(message.deadline);\n    }\n\n    if (message.sender !== \"\") {\n      writer.uint32(42).string(message.sender);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgAddLiquidity\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.maxToken = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.exactStandardAmt = reader.string();\n          break;\n\n        case 3:\n          message.minLiquidity = reader.string();\n          break;\n\n        case 4:\n          message.deadline = longToNumber(reader.int64());\n          break;\n\n        case 5:\n          message.sender = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgAddLiquidity\n    };\n\n    if (object.maxToken !== undefined && object.maxToken !== null) {\n      message.maxToken = Coin.fromJSON(object.maxToken);\n    } else {\n      message.maxToken = undefined;\n    }\n\n    if (object.exactStandardAmt !== undefined && object.exactStandardAmt !== null) {\n      message.exactStandardAmt = String(object.exactStandardAmt);\n    } else {\n      message.exactStandardAmt = \"\";\n    }\n\n    if (object.minLiquidity !== undefined && object.minLiquidity !== null) {\n      message.minLiquidity = String(object.minLiquidity);\n    } else {\n      message.minLiquidity = \"\";\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = Number(object.deadline);\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.maxToken !== undefined && (obj.maxToken = message.maxToken ? Coin.toJSON(message.maxToken) : undefined);\n    message.exactStandardAmt !== undefined && (obj.exactStandardAmt = message.exactStandardAmt);\n    message.minLiquidity !== undefined && (obj.minLiquidity = message.minLiquidity);\n    message.deadline !== undefined && (obj.deadline = message.deadline);\n    message.sender !== undefined && (obj.sender = message.sender);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgAddLiquidity\n    };\n\n    if (object.maxToken !== undefined && object.maxToken !== null) {\n      message.maxToken = Coin.fromPartial(object.maxToken);\n    } else {\n      message.maxToken = undefined;\n    }\n\n    if (object.exactStandardAmt !== undefined && object.exactStandardAmt !== null) {\n      message.exactStandardAmt = object.exactStandardAmt;\n    } else {\n      message.exactStandardAmt = \"\";\n    }\n\n    if (object.minLiquidity !== undefined && object.minLiquidity !== null) {\n      message.minLiquidity = object.minLiquidity;\n    } else {\n      message.minLiquidity = \"\";\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = object.deadline;\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgAddLiquidityResponse = {};\nexport const MsgAddLiquidityResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.mintToken !== undefined) {\n      Coin.encode(message.mintToken, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgAddLiquidityResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.mintToken = Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgAddLiquidityResponse\n    };\n\n    if (object.mintToken !== undefined && object.mintToken !== null) {\n      message.mintToken = Coin.fromJSON(object.mintToken);\n    } else {\n      message.mintToken = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.mintToken !== undefined && (obj.mintToken = message.mintToken ? Coin.toJSON(message.mintToken) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgAddLiquidityResponse\n    };\n\n    if (object.mintToken !== undefined && object.mintToken !== null) {\n      message.mintToken = Coin.fromPartial(object.mintToken);\n    } else {\n      message.mintToken = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgRemoveLiquidity = {\n  minToken: \"\",\n  minStandardAmt: \"\",\n  deadline: 0,\n  sender: \"\"\n};\nexport const MsgRemoveLiquidity = {\n  encode(message, writer = Writer.create()) {\n    if (message.withdrawLiquidity !== undefined) {\n      Coin.encode(message.withdrawLiquidity, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.minToken !== \"\") {\n      writer.uint32(18).string(message.minToken);\n    }\n\n    if (message.minStandardAmt !== \"\") {\n      writer.uint32(26).string(message.minStandardAmt);\n    }\n\n    if (message.deadline !== 0) {\n      writer.uint32(32).int64(message.deadline);\n    }\n\n    if (message.sender !== \"\") {\n      writer.uint32(42).string(message.sender);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRemoveLiquidity\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.withdrawLiquidity = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.minToken = reader.string();\n          break;\n\n        case 3:\n          message.minStandardAmt = reader.string();\n          break;\n\n        case 4:\n          message.deadline = longToNumber(reader.int64());\n          break;\n\n        case 5:\n          message.sender = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgRemoveLiquidity\n    };\n\n    if (object.withdrawLiquidity !== undefined && object.withdrawLiquidity !== null) {\n      message.withdrawLiquidity = Coin.fromJSON(object.withdrawLiquidity);\n    } else {\n      message.withdrawLiquidity = undefined;\n    }\n\n    if (object.minToken !== undefined && object.minToken !== null) {\n      message.minToken = String(object.minToken);\n    } else {\n      message.minToken = \"\";\n    }\n\n    if (object.minStandardAmt !== undefined && object.minStandardAmt !== null) {\n      message.minStandardAmt = String(object.minStandardAmt);\n    } else {\n      message.minStandardAmt = \"\";\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = Number(object.deadline);\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.withdrawLiquidity !== undefined && (obj.withdrawLiquidity = message.withdrawLiquidity ? Coin.toJSON(message.withdrawLiquidity) : undefined);\n    message.minToken !== undefined && (obj.minToken = message.minToken);\n    message.minStandardAmt !== undefined && (obj.minStandardAmt = message.minStandardAmt);\n    message.deadline !== undefined && (obj.deadline = message.deadline);\n    message.sender !== undefined && (obj.sender = message.sender);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgRemoveLiquidity\n    };\n\n    if (object.withdrawLiquidity !== undefined && object.withdrawLiquidity !== null) {\n      message.withdrawLiquidity = Coin.fromPartial(object.withdrawLiquidity);\n    } else {\n      message.withdrawLiquidity = undefined;\n    }\n\n    if (object.minToken !== undefined && object.minToken !== null) {\n      message.minToken = object.minToken;\n    } else {\n      message.minToken = \"\";\n    }\n\n    if (object.minStandardAmt !== undefined && object.minStandardAmt !== null) {\n      message.minStandardAmt = object.minStandardAmt;\n    } else {\n      message.minStandardAmt = \"\";\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = object.deadline;\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgRemoveLiquidityResponse = {};\nexport const MsgRemoveLiquidityResponse = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.withdrawCoins) {\n      Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRemoveLiquidityResponse\n    };\n    message.withdrawCoins = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.withdrawCoins.push(Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgRemoveLiquidityResponse\n    };\n    message.withdrawCoins = [];\n\n    if (object.withdrawCoins !== undefined && object.withdrawCoins !== null) {\n      for (const e of object.withdrawCoins) {\n        message.withdrawCoins.push(Coin.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.withdrawCoins) {\n      obj.withdrawCoins = message.withdrawCoins.map(e => e ? Coin.toJSON(e) : undefined);\n    } else {\n      obj.withdrawCoins = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgRemoveLiquidityResponse\n    };\n    message.withdrawCoins = [];\n\n    if (object.withdrawCoins !== undefined && object.withdrawCoins !== null) {\n      for (const e of object.withdrawCoins) {\n        message.withdrawCoins.push(Coin.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSwapOrder = {\n  deadline: 0,\n  isBuyOrder: false\n};\nexport const MsgSwapOrder = {\n  encode(message, writer = Writer.create()) {\n    if (message.input !== undefined) {\n      Input.encode(message.input, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.output !== undefined) {\n      Output.encode(message.output, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.deadline !== 0) {\n      writer.uint32(24).int64(message.deadline);\n    }\n\n    if (message.isBuyOrder === true) {\n      writer.uint32(32).bool(message.isBuyOrder);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgSwapOrder\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.input = Input.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.output = Output.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.deadline = longToNumber(reader.int64());\n          break;\n\n        case 4:\n          message.isBuyOrder = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgSwapOrder\n    };\n\n    if (object.input !== undefined && object.input !== null) {\n      message.input = Input.fromJSON(object.input);\n    } else {\n      message.input = undefined;\n    }\n\n    if (object.output !== undefined && object.output !== null) {\n      message.output = Output.fromJSON(object.output);\n    } else {\n      message.output = undefined;\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = Number(object.deadline);\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.isBuyOrder !== undefined && object.isBuyOrder !== null) {\n      message.isBuyOrder = Boolean(object.isBuyOrder);\n    } else {\n      message.isBuyOrder = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.input !== undefined && (obj.input = message.input ? Input.toJSON(message.input) : undefined);\n    message.output !== undefined && (obj.output = message.output ? Output.toJSON(message.output) : undefined);\n    message.deadline !== undefined && (obj.deadline = message.deadline);\n    message.isBuyOrder !== undefined && (obj.isBuyOrder = message.isBuyOrder);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgSwapOrder\n    };\n\n    if (object.input !== undefined && object.input !== null) {\n      message.input = Input.fromPartial(object.input);\n    } else {\n      message.input = undefined;\n    }\n\n    if (object.output !== undefined && object.output !== null) {\n      message.output = Output.fromPartial(object.output);\n    } else {\n      message.output = undefined;\n    }\n\n    if (object.deadline !== undefined && object.deadline !== null) {\n      message.deadline = object.deadline;\n    } else {\n      message.deadline = 0;\n    }\n\n    if (object.isBuyOrder !== undefined && object.isBuyOrder !== null) {\n      message.isBuyOrder = object.isBuyOrder;\n    } else {\n      message.isBuyOrder = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSwapCoinResponse = {};\nexport const MsgSwapCoinResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgSwapCoinResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgSwapCoinResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgSwapCoinResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  AddLiquidity(request) {\n    const data = MsgAddLiquidity.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"AddLiquidity\", data);\n    return promise.then(data => MsgAddLiquidityResponse.decode(new Reader(data)));\n  }\n\n  RemoveLiquidity(request) {\n    const data = MsgRemoveLiquidity.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"RemoveLiquidity\", data);\n    return promise.then(data => MsgRemoveLiquidityResponse.decode(new Reader(data)));\n  }\n\n  SwapCoin(request) {\n    const data = MsgSwapOrder.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"SwapCoin\", data);\n    return promise.then(data => MsgSwapCoinResponse.decode(new Reader(data)));\n  }\n\n}\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/alice/checkers/irismod.coinswap/module/types/coinswap/tx.js"],"names":["Reader","util","configure","Writer","Long","Coin","Input","Output","protobufPackage","baseMsgAddLiquidity","exactStandardAmt","minLiquidity","deadline","sender","MsgAddLiquidity","encode","message","writer","create","maxToken","undefined","uint32","fork","ldelim","string","int64","decode","input","length","reader","Uint8Array","end","len","pos","tag","longToNumber","skipType","fromJSON","object","String","Number","toJSON","obj","fromPartial","baseMsgAddLiquidityResponse","MsgAddLiquidityResponse","mintToken","baseMsgRemoveLiquidity","minToken","minStandardAmt","MsgRemoveLiquidity","withdrawLiquidity","baseMsgRemoveLiquidityResponse","MsgRemoveLiquidityResponse","v","withdrawCoins","push","e","map","baseMsgSwapOrder","isBuyOrder","MsgSwapOrder","output","bool","Boolean","baseMsgSwapCoinResponse","MsgSwapCoinResponse","_","MsgClientImpl","constructor","rpc","AddLiquidity","request","data","finish","promise","then","RemoveLiquidity","SwapCoin","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../coinswap/coinswap\";\nexport const protobufPackage = \"irismod.coinswap\";\nconst baseMsgAddLiquidity = {\n    exactStandardAmt: \"\",\n    minLiquidity: \"\",\n    deadline: 0,\n    sender: \"\",\n};\nexport const MsgAddLiquidity = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxToken !== undefined) {\n            Coin.encode(message.maxToken, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.exactStandardAmt !== \"\") {\n            writer.uint32(18).string(message.exactStandardAmt);\n        }\n        if (message.minLiquidity !== \"\") {\n            writer.uint32(26).string(message.minLiquidity);\n        }\n        if (message.deadline !== 0) {\n            writer.uint32(32).int64(message.deadline);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(42).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddLiquidity };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxToken = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.exactStandardAmt = reader.string();\n                    break;\n                case 3:\n                    message.minLiquidity = reader.string();\n                    break;\n                case 4:\n                    message.deadline = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddLiquidity };\n        if (object.maxToken !== undefined && object.maxToken !== null) {\n            message.maxToken = Coin.fromJSON(object.maxToken);\n        }\n        else {\n            message.maxToken = undefined;\n        }\n        if (object.exactStandardAmt !== undefined &&\n            object.exactStandardAmt !== null) {\n            message.exactStandardAmt = String(object.exactStandardAmt);\n        }\n        else {\n            message.exactStandardAmt = \"\";\n        }\n        if (object.minLiquidity !== undefined && object.minLiquidity !== null) {\n            message.minLiquidity = String(object.minLiquidity);\n        }\n        else {\n            message.minLiquidity = \"\";\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = Number(object.deadline);\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxToken !== undefined &&\n            (obj.maxToken = message.maxToken\n                ? Coin.toJSON(message.maxToken)\n                : undefined);\n        message.exactStandardAmt !== undefined &&\n            (obj.exactStandardAmt = message.exactStandardAmt);\n        message.minLiquidity !== undefined &&\n            (obj.minLiquidity = message.minLiquidity);\n        message.deadline !== undefined && (obj.deadline = message.deadline);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddLiquidity };\n        if (object.maxToken !== undefined && object.maxToken !== null) {\n            message.maxToken = Coin.fromPartial(object.maxToken);\n        }\n        else {\n            message.maxToken = undefined;\n        }\n        if (object.exactStandardAmt !== undefined &&\n            object.exactStandardAmt !== null) {\n            message.exactStandardAmt = object.exactStandardAmt;\n        }\n        else {\n            message.exactStandardAmt = \"\";\n        }\n        if (object.minLiquidity !== undefined && object.minLiquidity !== null) {\n            message.minLiquidity = object.minLiquidity;\n        }\n        else {\n            message.minLiquidity = \"\";\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = object.deadline;\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAddLiquidityResponse = {};\nexport const MsgAddLiquidityResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.mintToken !== undefined) {\n            Coin.encode(message.mintToken, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAddLiquidityResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.mintToken = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgAddLiquidityResponse,\n        };\n        if (object.mintToken !== undefined && object.mintToken !== null) {\n            message.mintToken = Coin.fromJSON(object.mintToken);\n        }\n        else {\n            message.mintToken = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.mintToken !== undefined &&\n            (obj.mintToken = message.mintToken\n                ? Coin.toJSON(message.mintToken)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgAddLiquidityResponse,\n        };\n        if (object.mintToken !== undefined && object.mintToken !== null) {\n            message.mintToken = Coin.fromPartial(object.mintToken);\n        }\n        else {\n            message.mintToken = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgRemoveLiquidity = {\n    minToken: \"\",\n    minStandardAmt: \"\",\n    deadline: 0,\n    sender: \"\",\n};\nexport const MsgRemoveLiquidity = {\n    encode(message, writer = Writer.create()) {\n        if (message.withdrawLiquidity !== undefined) {\n            Coin.encode(message.withdrawLiquidity, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.minToken !== \"\") {\n            writer.uint32(18).string(message.minToken);\n        }\n        if (message.minStandardAmt !== \"\") {\n            writer.uint32(26).string(message.minStandardAmt);\n        }\n        if (message.deadline !== 0) {\n            writer.uint32(32).int64(message.deadline);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(42).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRemoveLiquidity };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.withdrawLiquidity = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.minToken = reader.string();\n                    break;\n                case 3:\n                    message.minStandardAmt = reader.string();\n                    break;\n                case 4:\n                    message.deadline = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRemoveLiquidity };\n        if (object.withdrawLiquidity !== undefined &&\n            object.withdrawLiquidity !== null) {\n            message.withdrawLiquidity = Coin.fromJSON(object.withdrawLiquidity);\n        }\n        else {\n            message.withdrawLiquidity = undefined;\n        }\n        if (object.minToken !== undefined && object.minToken !== null) {\n            message.minToken = String(object.minToken);\n        }\n        else {\n            message.minToken = \"\";\n        }\n        if (object.minStandardAmt !== undefined && object.minStandardAmt !== null) {\n            message.minStandardAmt = String(object.minStandardAmt);\n        }\n        else {\n            message.minStandardAmt = \"\";\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = Number(object.deadline);\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.withdrawLiquidity !== undefined &&\n            (obj.withdrawLiquidity = message.withdrawLiquidity\n                ? Coin.toJSON(message.withdrawLiquidity)\n                : undefined);\n        message.minToken !== undefined && (obj.minToken = message.minToken);\n        message.minStandardAmt !== undefined &&\n            (obj.minStandardAmt = message.minStandardAmt);\n        message.deadline !== undefined && (obj.deadline = message.deadline);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRemoveLiquidity };\n        if (object.withdrawLiquidity !== undefined &&\n            object.withdrawLiquidity !== null) {\n            message.withdrawLiquidity = Coin.fromPartial(object.withdrawLiquidity);\n        }\n        else {\n            message.withdrawLiquidity = undefined;\n        }\n        if (object.minToken !== undefined && object.minToken !== null) {\n            message.minToken = object.minToken;\n        }\n        else {\n            message.minToken = \"\";\n        }\n        if (object.minStandardAmt !== undefined && object.minStandardAmt !== null) {\n            message.minStandardAmt = object.minStandardAmt;\n        }\n        else {\n            message.minStandardAmt = \"\";\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = object.deadline;\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRemoveLiquidityResponse = {};\nexport const MsgRemoveLiquidityResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.withdrawCoins) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgRemoveLiquidityResponse,\n        };\n        message.withdrawCoins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.withdrawCoins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgRemoveLiquidityResponse,\n        };\n        message.withdrawCoins = [];\n        if (object.withdrawCoins !== undefined && object.withdrawCoins !== null) {\n            for (const e of object.withdrawCoins) {\n                message.withdrawCoins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.withdrawCoins) {\n            obj.withdrawCoins = message.withdrawCoins.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.withdrawCoins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgRemoveLiquidityResponse,\n        };\n        message.withdrawCoins = [];\n        if (object.withdrawCoins !== undefined && object.withdrawCoins !== null) {\n            for (const e of object.withdrawCoins) {\n                message.withdrawCoins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSwapOrder = { deadline: 0, isBuyOrder: false };\nexport const MsgSwapOrder = {\n    encode(message, writer = Writer.create()) {\n        if (message.input !== undefined) {\n            Input.encode(message.input, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.output !== undefined) {\n            Output.encode(message.output, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.deadline !== 0) {\n            writer.uint32(24).int64(message.deadline);\n        }\n        if (message.isBuyOrder === true) {\n            writer.uint32(32).bool(message.isBuyOrder);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSwapOrder };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.input = Input.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.output = Output.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.deadline = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.isBuyOrder = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSwapOrder };\n        if (object.input !== undefined && object.input !== null) {\n            message.input = Input.fromJSON(object.input);\n        }\n        else {\n            message.input = undefined;\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = Output.fromJSON(object.output);\n        }\n        else {\n            message.output = undefined;\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = Number(object.deadline);\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.isBuyOrder !== undefined && object.isBuyOrder !== null) {\n            message.isBuyOrder = Boolean(object.isBuyOrder);\n        }\n        else {\n            message.isBuyOrder = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.input !== undefined &&\n            (obj.input = message.input ? Input.toJSON(message.input) : undefined);\n        message.output !== undefined &&\n            (obj.output = message.output ? Output.toJSON(message.output) : undefined);\n        message.deadline !== undefined && (obj.deadline = message.deadline);\n        message.isBuyOrder !== undefined && (obj.isBuyOrder = message.isBuyOrder);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSwapOrder };\n        if (object.input !== undefined && object.input !== null) {\n            message.input = Input.fromPartial(object.input);\n        }\n        else {\n            message.input = undefined;\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = Output.fromPartial(object.output);\n        }\n        else {\n            message.output = undefined;\n        }\n        if (object.deadline !== undefined && object.deadline !== null) {\n            message.deadline = object.deadline;\n        }\n        else {\n            message.deadline = 0;\n        }\n        if (object.isBuyOrder !== undefined && object.isBuyOrder !== null) {\n            message.isBuyOrder = object.isBuyOrder;\n        }\n        else {\n            message.isBuyOrder = false;\n        }\n        return message;\n    },\n};\nconst baseMsgSwapCoinResponse = {};\nexport const MsgSwapCoinResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSwapCoinResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSwapCoinResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSwapCoinResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    AddLiquidity(request) {\n        const data = MsgAddLiquidity.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"AddLiquidity\", data);\n        return promise.then((data) => MsgAddLiquidityResponse.decode(new Reader(data)));\n    }\n    RemoveLiquidity(request) {\n        const data = MsgRemoveLiquidity.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"RemoveLiquidity\", data);\n        return promise.then((data) => MsgRemoveLiquidityResponse.decode(new Reader(data)));\n    }\n    SwapCoin(request) {\n        const data = MsgSwapOrder.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.coinswap.Msg\", \"SwapCoin\", data);\n        return promise.then((data) => MsgSwapCoinResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}