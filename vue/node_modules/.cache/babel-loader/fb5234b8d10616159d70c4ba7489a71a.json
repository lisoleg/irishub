{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n  delegatorAddress: \"\",\n  withdrawAddress: \"\"\n};\nexport const MsgSetWithdrawAddress = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.withdrawAddress !== \"\") {\n      writer.uint32(18).string(message.withdrawAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgSetWithdrawAddress\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.withdrawAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgSetWithdrawAddress\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n      message.withdrawAddress = String(object.withdrawAddress);\n    } else {\n      message.withdrawAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgSetWithdrawAddress\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n      message.withdrawAddress = object.withdrawAddress;\n    } else {\n      message.withdrawAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgSetWithdrawAddressResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgSetWithdrawAddressResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgSetWithdrawAddressResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgWithdrawDelegatorReward = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexport const MsgWithdrawDelegatorReward = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgWithdrawDelegatorReward\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgWithdrawDelegatorReward\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgWithdrawDelegatorReward\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgWithdrawDelegatorRewardResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgWithdrawDelegatorRewardResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgWithdrawDelegatorRewardResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgWithdrawValidatorCommission = {\n  validatorAddress: \"\"\n};\nexport const MsgWithdrawValidatorCommission = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgWithdrawValidatorCommission\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgWithdrawValidatorCommission\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgWithdrawValidatorCommission\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgWithdrawValidatorCommissionResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgWithdrawValidatorCommissionResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgWithdrawValidatorCommissionResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgFundCommunityPool = {\n  depositor: \"\"\n};\nexport const MsgFundCommunityPool = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.amount) {\n      Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.depositor !== \"\") {\n      writer.uint32(18).string(message.depositor);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgFundCommunityPool\n    };\n    message.amount = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(Coin.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.depositor = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgFundCommunityPool\n    };\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      for (const e of object.amount) {\n        message.amount.push(Coin.fromJSON(e));\n      }\n    }\n\n    if (object.depositor !== undefined && object.depositor !== null) {\n      message.depositor = String(object.depositor);\n    } else {\n      message.depositor = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.amount) {\n      obj.amount = message.amount.map(e => e ? Coin.toJSON(e) : undefined);\n    } else {\n      obj.amount = [];\n    }\n\n    message.depositor !== undefined && (obj.depositor = message.depositor);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgFundCommunityPool\n    };\n    message.amount = [];\n\n    if (object.amount !== undefined && object.amount !== null) {\n      for (const e of object.amount) {\n        message.amount.push(Coin.fromPartial(e));\n      }\n    }\n\n    if (object.depositor !== undefined && object.depositor !== null) {\n      message.depositor = object.depositor;\n    } else {\n      message.depositor = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgFundCommunityPoolResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgFundCommunityPoolResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgFundCommunityPoolResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  SetWithdrawAddress(request) {\n    const data = MsgSetWithdrawAddress.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n    return promise.then(data => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n  }\n\n  WithdrawDelegatorReward(request) {\n    const data = MsgWithdrawDelegatorReward.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n    return promise.then(data => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n  }\n\n  WithdrawValidatorCommission(request) {\n    const data = MsgWithdrawValidatorCommission.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n    return promise.then(data => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n  }\n\n  FundCommunityPool(request) {\n    const data = MsgFundCommunityPool.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n    return promise.then(data => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n  }\n\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js"],"names":["Reader","Writer","Coin","protobufPackage","baseMsgSetWithdrawAddress","delegatorAddress","withdrawAddress","MsgSetWithdrawAddress","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgSetWithdrawAddressResponse","MsgSetWithdrawAddressResponse","_","baseMsgWithdrawDelegatorReward","validatorAddress","MsgWithdrawDelegatorReward","baseMsgWithdrawDelegatorRewardResponse","MsgWithdrawDelegatorRewardResponse","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgWithdrawValidatorCommissionResponse","MsgWithdrawValidatorCommissionResponse","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","v","amount","fork","ldelim","push","e","map","baseMsgFundCommunityPoolResponse","MsgFundCommunityPoolResponse","MsgClientImpl","constructor","rpc","SetWithdrawAddress","request","data","finish","promise","then","WithdrawDelegatorReward","WithdrawValidatorCommission","FundCommunityPool"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}