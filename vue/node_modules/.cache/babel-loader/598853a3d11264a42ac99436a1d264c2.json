{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.query.v1beta1\";\nconst basePageRequest = {\n  offset: 0,\n  limit: 0,\n  countTotal: false,\n  reverse: false\n};\nexport const PageRequest = {\n  encode(message, writer = Writer.create()) {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.offset !== 0) {\n      writer.uint32(16).uint64(message.offset);\n    }\n\n    if (message.limit !== 0) {\n      writer.uint32(24).uint64(message.limit);\n    }\n\n    if (message.countTotal === true) {\n      writer.uint32(32).bool(message.countTotal);\n    }\n\n    if (message.reverse === true) {\n      writer.uint32(40).bool(message.reverse);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePageRequest\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.offset = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.limit = longToNumber(reader.uint64());\n          break;\n\n        case 4:\n          message.countTotal = reader.bool();\n          break;\n\n        case 5:\n          message.reverse = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...basePageRequest\n    };\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.offset !== undefined && object.offset !== null) {\n      message.offset = Number(object.offset);\n    } else {\n      message.offset = 0;\n    }\n\n    if (object.limit !== undefined && object.limit !== null) {\n      message.limit = Number(object.limit);\n    } else {\n      message.limit = 0;\n    }\n\n    if (object.countTotal !== undefined && object.countTotal !== null) {\n      message.countTotal = Boolean(object.countTotal);\n    } else {\n      message.countTotal = false;\n    }\n\n    if (object.reverse !== undefined && object.reverse !== null) {\n      message.reverse = Boolean(object.reverse);\n    } else {\n      message.reverse = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.offset !== undefined && (obj.offset = message.offset);\n    message.limit !== undefined && (obj.limit = message.limit);\n    message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n    message.reverse !== undefined && (obj.reverse = message.reverse);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...basePageRequest\n    };\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n\n    if (object.offset !== undefined && object.offset !== null) {\n      message.offset = object.offset;\n    } else {\n      message.offset = 0;\n    }\n\n    if (object.limit !== undefined && object.limit !== null) {\n      message.limit = object.limit;\n    } else {\n      message.limit = 0;\n    }\n\n    if (object.countTotal !== undefined && object.countTotal !== null) {\n      message.countTotal = object.countTotal;\n    } else {\n      message.countTotal = false;\n    }\n\n    if (object.reverse !== undefined && object.reverse !== null) {\n      message.reverse = object.reverse;\n    } else {\n      message.reverse = false;\n    }\n\n    return message;\n  }\n\n};\nconst basePageResponse = {\n  total: 0\n};\nexport const PageResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.nextKey.length !== 0) {\n      writer.uint32(10).bytes(message.nextKey);\n    }\n\n    if (message.total !== 0) {\n      writer.uint32(16).uint64(message.total);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePageResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nextKey = reader.bytes();\n          break;\n\n        case 2:\n          message.total = longToNumber(reader.uint64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...basePageResponse\n    };\n\n    if (object.nextKey !== undefined && object.nextKey !== null) {\n      message.nextKey = bytesFromBase64(object.nextKey);\n    }\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = Number(object.total);\n    } else {\n      message.total = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n    message.total !== undefined && (obj.total = message.total);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...basePageResponse\n    };\n\n    if (object.nextKey !== undefined && object.nextKey !== null) {\n      message.nextKey = object.nextKey;\n    } else {\n      message.nextKey = new Uint8Array();\n    }\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = object.total;\n    } else {\n      message.total = 0;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/alice/checkers/irismod.coinswap/module/types/cosmos/base/query/v1beta1/pagination.js"],"names":["Long","util","configure","Writer","Reader","protobufPackage","basePageRequest","offset","limit","countTotal","reverse","PageRequest","encode","message","writer","create","key","length","uint32","bytes","uint64","bool","decode","input","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","bytesFromBase64","Number","Boolean","toJSON","obj","base64FromBytes","fromPartial","basePageResponse","total","PageResponse","nextKey","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","String","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.query.v1beta1\";\nconst basePageRequest = {\n    offset: 0,\n    limit: 0,\n    countTotal: false,\n    reverse: false,\n};\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined &&\n            (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}