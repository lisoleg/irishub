{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/**\n * AuthorizationType defines the type of staking module authorization type\n *\n * Since: cosmos-sdk 0.43\n */\n\nexport var AuthorizationType;\n\n(function (AuthorizationType) {\n  /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n  /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n  /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n  /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n\n  AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n  AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\n\nexport function authorizationTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"AUTHORIZATION_TYPE_UNSPECIFIED\":\n      return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n\n    case 1:\n    case \"AUTHORIZATION_TYPE_DELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n\n    case 2:\n    case \"AUTHORIZATION_TYPE_UNDELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n\n    case 3:\n    case \"AUTHORIZATION_TYPE_REDELEGATE\":\n      return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return AuthorizationType.UNRECOGNIZED;\n  }\n}\nexport function authorizationTypeToJSON(object) {\n  switch (object) {\n    case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n      return \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n\n    case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n      return \"AUTHORIZATION_TYPE_DELEGATE\";\n\n    case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n      return \"AUTHORIZATION_TYPE_UNDELEGATE\";\n\n    case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n      return \"AUTHORIZATION_TYPE_REDELEGATE\";\n\n    default:\n      return \"UNKNOWN\";\n  }\n}\nconst baseStakeAuthorization = {\n  authorizationType: 0\n};\nexport const StakeAuthorization = {\n  encode(message, writer = Writer.create()) {\n    if (message.maxTokens !== undefined) {\n      Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.allowList !== undefined) {\n      StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.denyList !== undefined) {\n      StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.authorizationType !== 0) {\n      writer.uint32(32).int32(message.authorizationType);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStakeAuthorization\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.maxTokens = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.authorizationType = reader.int32();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseStakeAuthorization\n    };\n\n    if (object.maxTokens !== undefined && object.maxTokens !== null) {\n      message.maxTokens = Coin.fromJSON(object.maxTokens);\n    } else {\n      message.maxTokens = undefined;\n    }\n\n    if (object.allowList !== undefined && object.allowList !== null) {\n      message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n    } else {\n      message.allowList = undefined;\n    }\n\n    if (object.denyList !== undefined && object.denyList !== null) {\n      message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n    } else {\n      message.denyList = undefined;\n    }\n\n    if (object.authorizationType !== undefined && object.authorizationType !== null) {\n      message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n    } else {\n      message.authorizationType = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n    message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n    message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n    message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseStakeAuthorization\n    };\n\n    if (object.maxTokens !== undefined && object.maxTokens !== null) {\n      message.maxTokens = Coin.fromPartial(object.maxTokens);\n    } else {\n      message.maxTokens = undefined;\n    }\n\n    if (object.allowList !== undefined && object.allowList !== null) {\n      message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n    } else {\n      message.allowList = undefined;\n    }\n\n    if (object.denyList !== undefined && object.denyList !== null) {\n      message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n    } else {\n      message.denyList = undefined;\n    }\n\n    if (object.authorizationType !== undefined && object.authorizationType !== null) {\n      message.authorizationType = object.authorizationType;\n    } else {\n      message.authorizationType = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseStakeAuthorization_Validators = {\n  address: \"\"\n};\nexport const StakeAuthorization_Validators = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.address) {\n      writer.uint32(10).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseStakeAuthorization_Validators\n    };\n    message.address = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseStakeAuthorization_Validators\n    };\n    message.address = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      for (const e of object.address) {\n        message.address.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.address) {\n      obj.address = message.address.map(e => e);\n    } else {\n      obj.address = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseStakeAuthorization_Validators\n    };\n    message.address = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      for (const e of object.address) {\n        message.address.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js"],"names":["Coin","Writer","Reader","protobufPackage","AuthorizationType","authorizationTypeFromJSON","object","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","UNRECOGNIZED","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","encode","message","writer","create","maxTokens","undefined","uint32","fork","ldelim","allowList","StakeAuthorization_Validators","denyList","int32","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","toJSON","obj","fromPartial","baseStakeAuthorization_Validators","address","v","string","push","e","String","map"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/**\n * AuthorizationType defines the type of staking module authorization type\n *\n * Since: cosmos-sdk 0.43\n */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"AUTHORIZATION_TYPE_UNSPECIFIED\":\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case \"AUTHORIZATION_TYPE_DELEGATE\":\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case \"AUTHORIZATION_TYPE_UNDELEGATE\":\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case \"AUTHORIZATION_TYPE_REDELEGATE\":\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return \"AUTHORIZATION_TYPE_DELEGATE\";\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return \"AUTHORIZATION_TYPE_UNDELEGATE\";\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return \"AUTHORIZATION_TYPE_REDELEGATE\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined &&\n            object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined &&\n            (obj.maxTokens = message.maxTokens\n                ? Coin.toJSON(message.maxTokens)\n                : undefined);\n        message.allowList !== undefined &&\n            (obj.allowList = message.allowList\n                ? StakeAuthorization_Validators.toJSON(message.allowList)\n                : undefined);\n        message.denyList !== undefined &&\n            (obj.denyList = message.denyList\n                ? StakeAuthorization_Validators.toJSON(message.denyList)\n                : undefined);\n        message.authorizationType !== undefined &&\n            (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined &&\n            object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n};\nconst baseStakeAuthorization_Validators = { address: \"\" };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseStakeAuthorization_Validators,\n        };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseStakeAuthorization_Validators,\n        };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseStakeAuthorization_Validators,\n        };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}