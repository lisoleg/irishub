{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\nvar Event =\n/** @class */\nfunction () {\n  function Event(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n\n  return Event;\n}();\n\nvar ErrorEvent =\n/** @class */\nfunction (_super) {\n  __extends(ErrorEvent, _super);\n\n  function ErrorEvent(error, target) {\n    var _this = _super.call(this, 'error', target) || this;\n\n    _this.message = error.message;\n    _this.error = error;\n    return _this;\n  }\n\n  return ErrorEvent;\n}(Event);\n\nvar CloseEvent =\n/** @class */\nfunction (_super) {\n  __extends(CloseEvent, _super);\n\n  function CloseEvent(code, reason, target) {\n    if (code === void 0) {\n      code = 1000;\n    }\n\n    if (reason === void 0) {\n      reason = '';\n    }\n\n    var _this = _super.call(this, 'close', target) || this;\n\n    _this.wasClean = true;\n    _this.code = code;\n    _this.reason = reason;\n    return _this;\n  }\n\n  return CloseEvent;\n}(Event);\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\n\n\nvar getGlobalWebSocket = function () {\n  if (typeof WebSocket !== 'undefined') {\n    // @ts-ignore\n    return WebSocket;\n  }\n};\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\n\n\nvar isWebSocket = function (w) {\n  return typeof w !== 'undefined' && !!w && w.CLOSING === 2;\n};\n\nvar DEFAULT = {\n  maxReconnectionDelay: 10000,\n  minReconnectionDelay: 1000 + Math.random() * 4000,\n  minUptime: 5000,\n  reconnectionDelayGrowFactor: 1.3,\n  connectionTimeout: 4000,\n  maxRetries: Infinity,\n  maxEnqueuedMessages: Infinity,\n  startClosed: false,\n  debug: false\n};\n\nvar ReconnectingWebSocket =\n/** @class */\nfunction () {\n  function ReconnectingWebSocket(url, protocols, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._listeners = {\n      error: [],\n      message: [],\n      open: [],\n      close: []\n    };\n    this._retryCount = -1;\n    this._shouldReconnect = true;\n    this._connectLock = false;\n    this._binaryType = 'blob';\n    this._closeCalled = false;\n    this._messageQueue = [];\n    /**\r\n     * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n     */\n\n    this.onclose = null;\n    /**\r\n     * An event listener to be called when an error occurs\r\n     */\n\n    this.onerror = null;\n    /**\r\n     * An event listener to be called when a message is received from the server\r\n     */\n\n    this.onmessage = null;\n    /**\r\n     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n     * this indicates that the connection is ready to send and receive data\r\n     */\n\n    this.onopen = null;\n\n    this._handleOpen = function (event) {\n      _this._debug('open event');\n\n      var _a = _this._options.minUptime,\n          minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\n      clearTimeout(_this._connectTimeout);\n      _this._uptimeTimeout = setTimeout(function () {\n        return _this._acceptOpen();\n      }, minUptime);\n      _this._ws.binaryType = _this._binaryType; // send enqueued messages (messages sent before websocket open event)\n\n      _this._messageQueue.forEach(function (message) {\n        return _this._ws.send(message);\n      });\n\n      _this._messageQueue = [];\n\n      if (_this.onopen) {\n        _this.onopen(event);\n      }\n\n      _this._listeners.open.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n\n    this._handleMessage = function (event) {\n      _this._debug('message event');\n\n      if (_this.onmessage) {\n        _this.onmessage(event);\n      }\n\n      _this._listeners.message.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n\n    this._handleError = function (event) {\n      _this._debug('error event', event.message);\n\n      _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\n\n      if (_this.onerror) {\n        _this.onerror(event);\n      }\n\n      _this._debug('exec error listeners');\n\n      _this._listeners.error.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n\n      _this._connect();\n    };\n\n    this._handleClose = function (event) {\n      _this._debug('close event');\n\n      _this._clearTimeouts();\n\n      if (_this._shouldReconnect) {\n        _this._connect();\n      }\n\n      if (_this.onclose) {\n        _this.onclose(event);\n      }\n\n      _this._listeners.close.forEach(function (listener) {\n        return _this._callEventListener(event, listener);\n      });\n    };\n\n    this._url = url;\n    this._protocols = protocols;\n    this._options = options;\n\n    if (this._options.startClosed) {\n      this._shouldReconnect = false;\n    }\n\n    this._connect();\n  }\n\n  Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\n    get: function () {\n      return 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\n    get: function () {\n      return 3;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\n    get: function () {\n      return ReconnectingWebSocket.CONNECTING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\n    get: function () {\n      return ReconnectingWebSocket.OPEN;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\n    get: function () {\n      return ReconnectingWebSocket.CLOSING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\n    get: function () {\n      return ReconnectingWebSocket.CLOSED;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\n    get: function () {\n      return this._ws ? this._ws.binaryType : this._binaryType;\n    },\n    set: function (value) {\n      this._binaryType = value;\n\n      if (this._ws) {\n        this._ws.binaryType = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\n    /**\r\n     * Returns the number or connection retries\r\n     */\n    get: function () {\n      return Math.max(this._retryCount, 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\n    /**\r\n     * The number of bytes of data that have been queued using calls to send() but not yet\r\n     * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n     * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n     * this will continue to climb. Read only\r\n     */\n    get: function () {\n      var bytes = this._messageQueue.reduce(function (acc, message) {\n        if (typeof message === 'string') {\n          acc += message.length; // not byte size\n        } else if (message instanceof Blob) {\n          acc += message.size;\n        } else {\n          acc += message.byteLength;\n        }\n\n        return acc;\n      }, 0);\n\n      return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\n    /**\r\n     * The extensions selected by the server. This is currently only the empty string or a list of\r\n     * extensions as negotiated by the connection\r\n     */\n    get: function () {\n      return this._ws ? this._ws.extensions : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\n    /**\r\n     * A string indicating the name of the sub-protocol the server selected;\r\n     * this will be one of the strings specified in the protocols parameter when creating the\r\n     * WebSocket object\r\n     */\n    get: function () {\n      return this._ws ? this._ws.protocol : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\n    /**\r\n     * The current state of the connection; this is one of the Ready state constants\r\n     */\n    get: function () {\n      if (this._ws) {\n        return this._ws.readyState;\n      }\n\n      return this._options.startClosed ? ReconnectingWebSocket.CLOSED : ReconnectingWebSocket.CONNECTING;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\n    /**\r\n     * The URL as resolved by the constructor\r\n     */\n    get: function () {\n      return this._ws ? this._ws.url : '';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n   * CLOSED, this method does nothing\r\n   */\n\n  ReconnectingWebSocket.prototype.close = function (code, reason) {\n    if (code === void 0) {\n      code = 1000;\n    }\n\n    this._closeCalled = true;\n    this._shouldReconnect = false;\n\n    this._clearTimeouts();\n\n    if (!this._ws) {\n      this._debug('close enqueued: no ws instance');\n\n      return;\n    }\n\n    if (this._ws.readyState === this.CLOSED) {\n      this._debug('close: already closed');\n\n      return;\n    }\n\n    this._ws.close(code, reason);\n  };\n  /**\r\n   * Closes the WebSocket connection or connection attempt and connects again.\r\n   * Resets retry counter;\r\n   */\n\n\n  ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\n    this._shouldReconnect = true;\n    this._closeCalled = false;\n    this._retryCount = -1;\n\n    if (!this._ws || this._ws.readyState === this.CLOSED) {\n      this._connect();\n    } else {\n      this._disconnect(code, reason);\n\n      this._connect();\n    }\n  };\n  /**\r\n   * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n   */\n\n\n  ReconnectingWebSocket.prototype.send = function (data) {\n    if (this._ws && this._ws.readyState === this.OPEN) {\n      this._debug('send', data);\n\n      this._ws.send(data);\n    } else {\n      var _a = this._options.maxEnqueuedMessages,\n          maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\n\n      if (this._messageQueue.length < maxEnqueuedMessages) {\n        this._debug('enqueue', data);\n\n        this._messageQueue.push(data);\n      }\n    }\n  };\n  /**\r\n   * Register an event handler of a specific event type\r\n   */\n\n\n  ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\n    if (this._listeners[type]) {\n      // @ts-ignore\n      this._listeners[type].push(listener);\n    }\n  };\n\n  ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\n    var e_1, _a;\n\n    var listeners = this._listeners[event.type];\n\n    if (listeners) {\n      try {\n        for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\n          var listener = listeners_1_1.value;\n\n          this._callEventListener(event, listener);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * Removes an event listener\r\n   */\n\n\n  ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\n    if (this._listeners[type]) {\n      // @ts-ignore\n      this._listeners[type] = this._listeners[type].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  };\n\n  ReconnectingWebSocket.prototype._debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this._options.debug) {\n      // not using spread because compiled version uses Symbols\n      // tslint:disable-next-line\n      console.log.apply(console, __spread(['RWS>'], args));\n    }\n  };\n\n  ReconnectingWebSocket.prototype._getNextDelay = function () {\n    var _a = this._options,\n        _b = _a.reconnectionDelayGrowFactor,\n        reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b,\n        _c = _a.minReconnectionDelay,\n        minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c,\n        _d = _a.maxReconnectionDelay,\n        maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\n    var delay = 0;\n\n    if (this._retryCount > 0) {\n      delay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\n\n      if (delay > maxReconnectionDelay) {\n        delay = maxReconnectionDelay;\n      }\n    }\n\n    this._debug('next delay', delay);\n\n    return delay;\n  };\n\n  ReconnectingWebSocket.prototype._wait = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      setTimeout(resolve, _this._getNextDelay());\n    });\n  };\n\n  ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\n    if (typeof urlProvider === 'string') {\n      return Promise.resolve(urlProvider);\n    }\n\n    if (typeof urlProvider === 'function') {\n      var url = urlProvider();\n\n      if (typeof url === 'string') {\n        return Promise.resolve(url);\n      }\n\n      if (!!url.then) {\n        return url;\n      }\n    }\n\n    throw Error('Invalid URL');\n  };\n\n  ReconnectingWebSocket.prototype._connect = function () {\n    var _this = this;\n\n    if (this._connectLock || !this._shouldReconnect) {\n      return;\n    }\n\n    this._connectLock = true;\n    var _a = this._options,\n        _b = _a.maxRetries,\n        maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b,\n        _c = _a.connectionTimeout,\n        connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c,\n        _d = _a.WebSocket,\n        WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\n\n    if (this._retryCount >= maxRetries) {\n      this._debug('max retries reached', this._retryCount, '>=', maxRetries);\n\n      return;\n    }\n\n    this._retryCount++;\n\n    this._debug('connect', this._retryCount);\n\n    this._removeListeners();\n\n    if (!isWebSocket(WebSocket)) {\n      throw Error('No valid WebSocket class provided');\n    }\n\n    this._wait().then(function () {\n      return _this._getNextUrl(_this._url);\n    }).then(function (url) {\n      // close could be called before creating the ws\n      if (_this._closeCalled) {\n        return;\n      }\n\n      _this._debug('connect', {\n        url: url,\n        protocols: _this._protocols\n      });\n\n      _this._ws = _this._protocols ? new WebSocket(url, _this._protocols) : new WebSocket(url);\n      _this._ws.binaryType = _this._binaryType;\n      _this._connectLock = false;\n\n      _this._addListeners();\n\n      _this._connectTimeout = setTimeout(function () {\n        return _this._handleTimeout();\n      }, connectionTimeout);\n    });\n  };\n\n  ReconnectingWebSocket.prototype._handleTimeout = function () {\n    this._debug('timeout event');\n\n    this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\n  };\n\n  ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\n    if (code === void 0) {\n      code = 1000;\n    }\n\n    this._clearTimeouts();\n\n    if (!this._ws) {\n      return;\n    }\n\n    this._removeListeners();\n\n    try {\n      this._ws.close(code, reason);\n\n      this._handleClose(new CloseEvent(code, reason, this));\n    } catch (error) {// ignore\n    }\n  };\n\n  ReconnectingWebSocket.prototype._acceptOpen = function () {\n    this._debug('accept open');\n\n    this._retryCount = 0;\n  };\n\n  ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\n    if ('handleEvent' in listener) {\n      // @ts-ignore\n      listener.handleEvent(event);\n    } else {\n      // @ts-ignore\n      listener(event);\n    }\n  };\n\n  ReconnectingWebSocket.prototype._removeListeners = function () {\n    if (!this._ws) {\n      return;\n    }\n\n    this._debug('removeListeners');\n\n    this._ws.removeEventListener('open', this._handleOpen);\n\n    this._ws.removeEventListener('close', this._handleClose);\n\n    this._ws.removeEventListener('message', this._handleMessage); // @ts-ignore\n\n\n    this._ws.removeEventListener('error', this._handleError);\n  };\n\n  ReconnectingWebSocket.prototype._addListeners = function () {\n    if (!this._ws) {\n      return;\n    }\n\n    this._debug('addListeners');\n\n    this._ws.addEventListener('open', this._handleOpen);\n\n    this._ws.addEventListener('close', this._handleClose);\n\n    this._ws.addEventListener('message', this._handleMessage); // @ts-ignore\n\n\n    this._ws.addEventListener('error', this._handleError);\n  };\n\n  ReconnectingWebSocket.prototype._clearTimeouts = function () {\n    clearTimeout(this._connectTimeout);\n    clearTimeout(this._uptimeTimeout);\n  };\n\n  return ReconnectingWebSocket;\n}();\n\nexport default ReconnectingWebSocket;","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","ar","e","push","error","__spread","arguments","concat","Event","type","target","ErrorEvent","_super","_this","message","CloseEvent","code","reason","wasClean","getGlobalWebSocket","WebSocket","isWebSocket","w","CLOSING","DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","startClosed","debug","ReconnectingWebSocket","url","protocols","options","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","onclose","onerror","onmessage","onopen","_handleOpen","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","forEach","send","listener","_callEventListener","_handleMessage","_handleError","_disconnect","undefined","_connect","_handleClose","_clearTimeouts","_url","_protocols","defineProperty","get","enumerable","configurable","CONNECTING","OPEN","CLOSED","set","max","bytes","reduce","acc","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","reconnect","data","addEventListener","dispatchEvent","e_1","listeners","listeners_1","listeners_1_1","e_1_1","return","removeEventListener","filter","l","args","_i","console","log","apply","_getNextDelay","_b","_c","_d","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","_removeListeners","_addListeners","_handleTimeout","handleEvent"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n"]},"metadata":{},"sourceType":"module"}