{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Endpoint = void 0;\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst stargate_1 = require(\"@cosmjs/stargate\");\n\nconst utils_1 = require(\"./utils\");\n/**\n * Endpoint is a wrapper around SigningStargateClient as well as ClientID\n * and ConnectionID. Two Endpoints compose a Link and this should expose all the\n * methods you need to work on one half of an IBC Connection, the higher-level\n * orchestration is handled in Link.\n */\n\n\nclass Endpoint {\n  constructor(client, clientID, connectionID) {\n    this.client = client;\n    this.clientID = clientID;\n    this.connectionID = connectionID;\n  }\n\n  chainId() {\n    return this.client.chainId;\n  }\n\n  getLatestCommit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.client.getCommit();\n    });\n  }\n\n  getPacketsFromBlockEvents({\n    minHeight,\n    maxHeight\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let query = `send_packet.packet_connection='${this.connectionID}'`;\n\n      if (minHeight) {\n        query = `${query} AND block.height>=${minHeight}`;\n      }\n\n      if (maxHeight) {\n        query = `${query} AND block.height<=${maxHeight}`;\n      }\n\n      const search = yield this.client.tm.blockSearchAll({\n        query\n      });\n      const resultsNested = yield Promise.all(search.blocks.map(({\n        block\n      }) => __awaiter(this, void 0, void 0, function* () {\n        const height = block.header.height;\n        const result = yield this.client.tm.blockResults(height);\n        return utils_1.parsePacketsFromBlockResult(result).map(packet => ({\n          packet,\n          height,\n          sender: ''\n        }));\n      })));\n      return [].concat(...resultsNested);\n    });\n  }\n\n  getPacketsFromTxs({\n    minHeight,\n    maxHeight\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let query = `send_packet.packet_connection='${this.connectionID}'`;\n\n      if (minHeight) {\n        query = `${query} AND tx.height>=${minHeight}`;\n      }\n\n      if (maxHeight) {\n        query = `${query} AND tx.height<=${maxHeight}`;\n      }\n\n      const search = yield this.client.tm.txSearchAll({\n        query\n      });\n      const resultsNested = search.txs.map(({\n        hash,\n        height,\n        result\n      }) => {\n        const parsedLogs = stargate_1.logs.parseRawLog(result.log); // we accept message.sender (cosmos-sdk) and message.signer (x/wasm)\n\n        let sender = '';\n\n        try {\n          sender = stargate_1.logs.findAttribute(parsedLogs, 'message', 'sender').value;\n        } catch (_a) {\n          try {\n            sender = stargate_1.logs.findAttribute(parsedLogs, 'message', 'signer').value;\n          } catch (_b) {\n            this.client.logger.warn(`No message.sender nor message.signer in tx ${encoding_1.toHex(hash)}`);\n          }\n        }\n\n        return utils_1.parsePacketsFromLogs(parsedLogs).map(packet => ({\n          packet,\n          height,\n          sender\n        }));\n      });\n      return [].concat(...resultsNested);\n    });\n  } // returns all packets (auto-paginates, so be careful about not setting a minHeight)\n\n\n  querySentPackets({\n    minHeight,\n    maxHeight\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const txsPackets = yield this.getPacketsFromTxs({\n        minHeight,\n        maxHeight\n      });\n      const eventsPackets = yield this.getPacketsFromBlockEvents({\n        minHeight,\n        maxHeight\n      });\n      return [].concat(...txsPackets).concat(...eventsPackets);\n    });\n  } // returns all acks (auto-paginates, so be careful about not setting a minHeight)\n\n\n  queryWrittenAcks({\n    minHeight,\n    maxHeight\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let query = `write_acknowledgement.packet_connection='${this.connectionID}'`;\n\n      if (minHeight) {\n        query = `${query} AND tx.height>=${minHeight}`;\n      }\n\n      if (maxHeight) {\n        query = `${query} AND tx.height<=${maxHeight}`;\n      }\n\n      const search = yield this.client.tm.txSearchAll({\n        query\n      });\n      const resultsNested = search.txs.map(({\n        height,\n        result\n      }) => {\n        const parsedLogs = stargate_1.logs.parseRawLog(result.log); // const sender = logs.findAttribute(parsedLogs, 'message', 'sender').value;\n\n        return utils_1.parseAcksFromLogs(parsedLogs).map(ack => Object.assign({\n          height\n        }, ack));\n      });\n      return [].concat(...resultsNested);\n    });\n  }\n\n}\n\nexports.Endpoint = Endpoint;","map":{"version":3,"sources":["../../src/lib/endpoint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst stargate_1 = require(\"@cosmjs/stargate\");\nconst utils_1 = require(\"./utils\");\n/**\n * Endpoint is a wrapper around SigningStargateClient as well as ClientID\n * and ConnectionID. Two Endpoints compose a Link and this should expose all the\n * methods you need to work on one half of an IBC Connection, the higher-level\n * orchestration is handled in Link.\n */\nclass Endpoint {\n    constructor(client, clientID, connectionID) {\n        this.client = client;\n        this.clientID = clientID;\n        this.connectionID = connectionID;\n    }\n    chainId() {\n        return this.client.chainId;\n    }\n    getLatestCommit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.getCommit();\n        });\n    }\n    getPacketsFromBlockEvents({ minHeight, maxHeight, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = `send_packet.packet_connection='${this.connectionID}'`;\n            if (minHeight) {\n                query = `${query} AND block.height>=${minHeight}`;\n            }\n            if (maxHeight) {\n                query = `${query} AND block.height<=${maxHeight}`;\n            }\n            const search = yield this.client.tm.blockSearchAll({ query });\n            const resultsNested = yield Promise.all(search.blocks.map(({ block }) => __awaiter(this, void 0, void 0, function* () {\n                const height = block.header.height;\n                const result = yield this.client.tm.blockResults(height);\n                return utils_1.parsePacketsFromBlockResult(result).map((packet) => ({\n                    packet,\n                    height,\n                    sender: '',\n                }));\n            })));\n            return [].concat(...resultsNested);\n        });\n    }\n    getPacketsFromTxs({ minHeight, maxHeight, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = `send_packet.packet_connection='${this.connectionID}'`;\n            if (minHeight) {\n                query = `${query} AND tx.height>=${minHeight}`;\n            }\n            if (maxHeight) {\n                query = `${query} AND tx.height<=${maxHeight}`;\n            }\n            const search = yield this.client.tm.txSearchAll({ query });\n            const resultsNested = search.txs.map(({ hash, height, result }) => {\n                const parsedLogs = stargate_1.logs.parseRawLog(result.log);\n                // we accept message.sender (cosmos-sdk) and message.signer (x/wasm)\n                let sender = '';\n                try {\n                    sender = stargate_1.logs.findAttribute(parsedLogs, 'message', 'sender').value;\n                }\n                catch (_a) {\n                    try {\n                        sender = stargate_1.logs.findAttribute(parsedLogs, 'message', 'signer').value;\n                    }\n                    catch (_b) {\n                        this.client.logger.warn(`No message.sender nor message.signer in tx ${encoding_1.toHex(hash)}`);\n                    }\n                }\n                return utils_1.parsePacketsFromLogs(parsedLogs).map((packet) => ({\n                    packet,\n                    height,\n                    sender,\n                }));\n            });\n            return [].concat(...resultsNested);\n        });\n    }\n    // returns all packets (auto-paginates, so be careful about not setting a minHeight)\n    querySentPackets({ minHeight, maxHeight, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const txsPackets = yield this.getPacketsFromTxs({ minHeight, maxHeight });\n            const eventsPackets = yield this.getPacketsFromBlockEvents({\n                minHeight,\n                maxHeight,\n            });\n            return []\n                .concat(...txsPackets)\n                .concat(...eventsPackets);\n        });\n    }\n    // returns all acks (auto-paginates, so be careful about not setting a minHeight)\n    queryWrittenAcks({ minHeight, maxHeight, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let query = `write_acknowledgement.packet_connection='${this.connectionID}'`;\n            if (minHeight) {\n                query = `${query} AND tx.height>=${minHeight}`;\n            }\n            if (maxHeight) {\n                query = `${query} AND tx.height<=${maxHeight}`;\n            }\n            const search = yield this.client.tm.txSearchAll({ query });\n            const resultsNested = search.txs.map(({ height, result }) => {\n                const parsedLogs = stargate_1.logs.parseRawLog(result.log);\n                // const sender = logs.findAttribute(parsedLogs, 'message', 'sender').value;\n                return utils_1.parseAcksFromLogs(parsedLogs).map((ack) => (Object.assign({ height }, ack)));\n            });\n            return [].concat(...resultsNested);\n        });\n    }\n}\nexports.Endpoint = Endpoint;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5kcG9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL2VuZHBvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLCtDQUF5QztBQUN6QywrQ0FBd0M7QUFNeEMsbUNBS2lCO0FBb0JqQjs7Ozs7R0FLRztBQUNILE1BQWEsUUFBUTtJQUtuQixZQUNFLE1BQWlCLEVBQ2pCLFFBQWdCLEVBQ2hCLFlBQW9CO1FBRXBCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFTSxPQUFPO1FBQ1osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUM3QixDQUFDO0lBRVksZUFBZTs7WUFDMUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2pDLENBQUM7S0FBQTtJQUVhLHlCQUF5QixDQUFDLEVBQ3RDLFNBQVMsRUFDVCxTQUFTLE1BQ0ksRUFBRTs7WUFDZixJQUFJLEtBQUssR0FBRyxrQ0FBa0MsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDO1lBQ25FLElBQUksU0FBUyxFQUFFO2dCQUNiLEtBQUssR0FBRyxHQUFHLEtBQUssc0JBQXNCLFNBQVMsRUFBRSxDQUFDO2FBQ25EO1lBQ0QsSUFBSSxTQUFTLEVBQUU7Z0JBQ2IsS0FBSyxHQUFHLEdBQUcsS0FBSyxzQkFBc0IsU0FBUyxFQUFFLENBQUM7YUFDbkQ7WUFFRCxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7WUFDOUQsTUFBTSxhQUFhLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUNyQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcs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"]},"metadata":{},"sourceType":"script"}