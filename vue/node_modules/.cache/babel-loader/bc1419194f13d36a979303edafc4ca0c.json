{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n  encode(message, writer = Writer.create()) {\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n\n    for (const v of message.signingInfos) {\n      SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    for (const v of message.missedBlocks) {\n      ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGenesisState\n    };\n    message.signingInfos = [];\n    message.missedBlocks = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.params = Params.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseGenesisState\n    };\n    message.signingInfos = [];\n    message.missedBlocks = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromJSON(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.signingInfos !== undefined && object.signingInfos !== null) {\n      for (const e of object.signingInfos) {\n        message.signingInfos.push(SigningInfo.fromJSON(e));\n      }\n    }\n\n    if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n      for (const e of object.missedBlocks) {\n        message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n\n    if (message.signingInfos) {\n      obj.signingInfos = message.signingInfos.map(e => e ? SigningInfo.toJSON(e) : undefined);\n    } else {\n      obj.signingInfos = [];\n    }\n\n    if (message.missedBlocks) {\n      obj.missedBlocks = message.missedBlocks.map(e => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n    } else {\n      obj.missedBlocks = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseGenesisState\n    };\n    message.signingInfos = [];\n    message.missedBlocks = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromPartial(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.signingInfos !== undefined && object.signingInfos !== null) {\n      for (const e of object.signingInfos) {\n        message.signingInfos.push(SigningInfo.fromPartial(e));\n      }\n    }\n\n    if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n      for (const e of object.missedBlocks) {\n        message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseSigningInfo = {\n  address: \"\"\n};\nexport const SigningInfo = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    if (message.validatorSigningInfo !== undefined) {\n      ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseSigningInfo\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseSigningInfo\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n      message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n    } else {\n      message.validatorSigningInfo = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.validatorSigningInfo !== undefined && (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseSigningInfo\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n      message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n    } else {\n      message.validatorSigningInfo = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorMissedBlocks = {\n  address: \"\"\n};\nexport const ValidatorMissedBlocks = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    for (const v of message.missedBlocks) {\n      MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorMissedBlocks\n    };\n    message.missedBlocks = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorMissedBlocks\n    };\n    message.missedBlocks = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n      for (const e of object.missedBlocks) {\n        message.missedBlocks.push(MissedBlock.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n\n    if (message.missedBlocks) {\n      obj.missedBlocks = message.missedBlocks.map(e => e ? MissedBlock.toJSON(e) : undefined);\n    } else {\n      obj.missedBlocks = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorMissedBlocks\n    };\n    message.missedBlocks = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n      for (const e of object.missedBlocks) {\n        message.missedBlocks.push(MissedBlock.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMissedBlock = {\n  index: 0,\n  missed: false\n};\nexport const MissedBlock = {\n  encode(message, writer = Writer.create()) {\n    if (message.index !== 0) {\n      writer.uint32(8).int64(message.index);\n    }\n\n    if (message.missed === true) {\n      writer.uint32(16).bool(message.missed);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMissedBlock\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.index = longToNumber(reader.int64());\n          break;\n\n        case 2:\n          message.missed = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMissedBlock\n    };\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = Number(object.index);\n    } else {\n      message.index = 0;\n    }\n\n    if (object.missed !== undefined && object.missed !== null) {\n      message.missed = Boolean(object.missed);\n    } else {\n      message.missed = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.index !== undefined && (obj.index = message.index);\n    message.missed !== undefined && (obj.missed = message.missed);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMissedBlock\n    };\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = object.index;\n    } else {\n      message.index = 0;\n    }\n\n    if (object.missed !== undefined && object.missed !== null) {\n      message.missed = object.missed;\n    } else {\n      message.missed = false;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js"],"names":["Long","util","configure","Writer","Reader","Params","ValidatorSigningInfo","protobufPackage","baseGenesisState","GenesisState","encode","message","writer","create","params","undefined","uint32","fork","ldelim","v","signingInfos","SigningInfo","missedBlocks","ValidatorMissedBlocks","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","object","e","toJSON","obj","map","fromPartial","baseSigningInfo","address","string","validatorSigningInfo","String","baseValidatorMissedBlocks","MissedBlock","baseMissedBlock","index","missed","int64","bool","longToNumber","Number","Boolean","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}