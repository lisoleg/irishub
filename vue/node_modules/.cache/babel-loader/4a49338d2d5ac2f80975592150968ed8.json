{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n  minSelfDelegation: \"\",\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexport const MsgCreateValidator = {\n  encode(message, writer = Writer.create()) {\n    if (message.description !== undefined) {\n      Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.commission !== undefined) {\n      CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.minSelfDelegation !== \"\") {\n      writer.uint32(26).string(message.minSelfDelegation);\n    }\n\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(34).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(42).string(message.validatorAddress);\n    }\n\n    if (message.pubkey !== undefined) {\n      Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n    }\n\n    if (message.value !== undefined) {\n      Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgCreateValidator\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.description = Description.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.commission = CommissionRates.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.minSelfDelegation = reader.string();\n          break;\n\n        case 4:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 5:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 6:\n          message.pubkey = Any.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.value = Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgCreateValidator\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = Description.fromJSON(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = CommissionRates.fromJSON(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = String(object.minSelfDelegation);\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.pubkey !== undefined && object.pubkey !== null) {\n      message.pubkey = Any.fromJSON(object.pubkey);\n    } else {\n      message.pubkey = undefined;\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = Coin.fromJSON(object.value);\n    } else {\n      message.value = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n    message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n    message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n    message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgCreateValidator\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = Description.fromPartial(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.commission !== undefined && object.commission !== null) {\n      message.commission = CommissionRates.fromPartial(object.commission);\n    } else {\n      message.commission = undefined;\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = object.minSelfDelegation;\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.pubkey !== undefined && object.pubkey !== null) {\n      message.pubkey = Any.fromPartial(object.pubkey);\n    } else {\n      message.pubkey = undefined;\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = Coin.fromPartial(object.value);\n    } else {\n      message.value = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgCreateValidatorResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgCreateValidatorResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgCreateValidatorResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgEditValidator = {\n  validatorAddress: \"\",\n  commissionRate: \"\",\n  minSelfDelegation: \"\"\n};\nexport const MsgEditValidator = {\n  encode(message, writer = Writer.create()) {\n    if (message.description !== undefined) {\n      Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.commissionRate !== \"\") {\n      writer.uint32(26).string(message.commissionRate);\n    }\n\n    if (message.minSelfDelegation !== \"\") {\n      writer.uint32(34).string(message.minSelfDelegation);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgEditValidator\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.description = Description.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.commissionRate = reader.string();\n          break;\n\n        case 4:\n          message.minSelfDelegation = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgEditValidator\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = Description.fromJSON(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.commissionRate !== undefined && object.commissionRate !== null) {\n      message.commissionRate = String(object.commissionRate);\n    } else {\n      message.commissionRate = \"\";\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = String(object.minSelfDelegation);\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n    message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgEditValidator\n    };\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = Description.fromPartial(object.description);\n    } else {\n      message.description = undefined;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.commissionRate !== undefined && object.commissionRate !== null) {\n      message.commissionRate = object.commissionRate;\n    } else {\n      message.commissionRate = \"\";\n    }\n\n    if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n      message.minSelfDelegation = object.minSelfDelegation;\n    } else {\n      message.minSelfDelegation = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgEditValidatorResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgEditValidatorResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgEditValidatorResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgDelegate = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexport const MsgDelegate = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.amount !== undefined) {\n      Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgDelegate\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.amount = Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgDelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromJSON(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgDelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromPartial(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgDelegateResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgDelegateResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgDelegateResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgBeginRedelegate = {\n  delegatorAddress: \"\",\n  validatorSrcAddress: \"\",\n  validatorDstAddress: \"\"\n};\nexport const MsgBeginRedelegate = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorSrcAddress !== \"\") {\n      writer.uint32(18).string(message.validatorSrcAddress);\n    }\n\n    if (message.validatorDstAddress !== \"\") {\n      writer.uint32(26).string(message.validatorDstAddress);\n    }\n\n    if (message.amount !== undefined) {\n      Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgBeginRedelegate\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorSrcAddress = reader.string();\n          break;\n\n        case 3:\n          message.validatorDstAddress = reader.string();\n          break;\n\n        case 4:\n          message.amount = Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgBeginRedelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = String(object.validatorSrcAddress);\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = String(object.validatorDstAddress);\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromJSON(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n    message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n    message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgBeginRedelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n      message.validatorSrcAddress = object.validatorSrcAddress;\n    } else {\n      message.validatorSrcAddress = \"\";\n    }\n\n    if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n      message.validatorDstAddress = object.validatorDstAddress;\n    } else {\n      message.validatorDstAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromPartial(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.completionTime !== undefined) {\n      Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgBeginRedelegateResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgBeginRedelegateResponse\n    };\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgBeginRedelegateResponse\n    };\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = object.completionTime;\n    } else {\n      message.completionTime = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgUndelegate = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexport const MsgUndelegate = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.amount !== undefined) {\n      Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgUndelegate\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.amount = Coin.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgUndelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromJSON(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgUndelegate\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Coin.fromPartial(object.amount);\n    } else {\n      message.amount = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.completionTime !== undefined) {\n      Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgUndelegateResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgUndelegateResponse\n    };\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = fromJsonTimestamp(object.completionTime);\n    } else {\n      message.completionTime = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgUndelegateResponse\n    };\n\n    if (object.completionTime !== undefined && object.completionTime !== null) {\n      message.completionTime = object.completionTime;\n    } else {\n      message.completionTime = undefined;\n    }\n\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  CreateValidator(request) {\n    const data = MsgCreateValidator.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n    return promise.then(data => MsgCreateValidatorResponse.decode(new Reader(data)));\n  }\n\n  EditValidator(request) {\n    const data = MsgEditValidator.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n    return promise.then(data => MsgEditValidatorResponse.decode(new Reader(data)));\n  }\n\n  Delegate(request) {\n    const data = MsgDelegate.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n    return promise.then(data => MsgDelegateResponse.decode(new Reader(data)));\n  }\n\n  BeginRedelegate(request) {\n    const data = MsgBeginRedelegate.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n    return promise.then(data => MsgBeginRedelegateResponse.decode(new Reader(data)));\n  }\n\n  Undelegate(request) {\n    const data = MsgUndelegate.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n    return promise.then(data => MsgUndelegateResponse.decode(new Reader(data)));\n  }\n\n}\n\nfunction toTimestamp(date) {\n  const seconds = date.getTime() / 1000;\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  let millis = t.seconds * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js"],"names":["Reader","Writer","Timestamp","Description","CommissionRates","Any","Coin","protobufPackage","baseMsgCreateValidator","minSelfDelegation","delegatorAddress","validatorAddress","MsgCreateValidator","encode","message","writer","create","description","undefined","uint32","fork","ldelim","commission","string","pubkey","value","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgCreateValidatorResponse","MsgCreateValidatorResponse","_","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgEditValidatorResponse","MsgEditValidatorResponse","baseMsgDelegate","MsgDelegate","amount","baseMsgDelegateResponse","MsgDelegateResponse","baseMsgBeginRedelegate","validatorSrcAddress","validatorDstAddress","MsgBeginRedelegate","baseMsgBeginRedelegateResponse","MsgBeginRedelegateResponse","completionTime","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","baseMsgUndelegate","MsgUndelegate","baseMsgUndelegateResponse","MsgUndelegateResponse","MsgClientImpl","constructor","rpc","CreateValidator","request","data","finish","promise","then","EditValidator","Delegate","BeginRedelegate","Undelegate","date","seconds","getTime","nanos","t","millis","Date","o"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}