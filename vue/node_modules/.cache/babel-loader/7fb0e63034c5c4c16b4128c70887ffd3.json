{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Grant } from \"../../../cosmos/authz/v1beta1/authz\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.authz.v1beta1\";\nconst baseMsgGrant = {\n  granter: \"\",\n  grantee: \"\"\n};\nexport const MsgGrant = {\n  encode(message, writer = Writer.create()) {\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n\n    if (message.grant !== undefined) {\n      Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgGrant\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n\n        case 2:\n          message.grantee = reader.string();\n          break;\n\n        case 3:\n          message.grant = Grant.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgGrant\n    };\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.grant !== undefined && object.grant !== null) {\n      message.grant = Grant.fromJSON(object.grant);\n    } else {\n      message.grant = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgGrant\n    };\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.grant !== undefined && object.grant !== null) {\n      message.grant = Grant.fromPartial(object.grant);\n    } else {\n      message.grant = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.results) {\n      writer.uint32(10).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgExecResponse\n    };\n    message.results = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.results.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgExecResponse\n    };\n    message.results = [];\n\n    if (object.results !== undefined && object.results !== null) {\n      for (const e of object.results) {\n        message.results.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.results) {\n      obj.results = message.results.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.results = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgExecResponse\n    };\n    message.results = [];\n\n    if (object.results !== undefined && object.results !== null) {\n      for (const e of object.results) {\n        message.results.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgExec = {\n  grantee: \"\"\n};\nexport const MsgExec = {\n  encode(message, writer = Writer.create()) {\n    if (message.grantee !== \"\") {\n      writer.uint32(10).string(message.grantee);\n    }\n\n    for (const v of message.msgs) {\n      Any.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgExec\n    };\n    message.msgs = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.grantee = reader.string();\n          break;\n\n        case 2:\n          message.msgs.push(Any.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgExec\n    };\n    message.msgs = [];\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.msgs !== undefined && object.msgs !== null) {\n      for (const e of object.msgs) {\n        message.msgs.push(Any.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n\n    if (message.msgs) {\n      obj.msgs = message.msgs.map(e => e ? Any.toJSON(e) : undefined);\n    } else {\n      obj.msgs = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgExec\n    };\n    message.msgs = [];\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.msgs !== undefined && object.msgs !== null) {\n      for (const e of object.msgs) {\n        message.msgs.push(Any.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgGrantResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgGrantResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgGrantResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgRevoke = {\n  granter: \"\",\n  grantee: \"\",\n  msgTypeUrl: \"\"\n};\nexport const MsgRevoke = {\n  encode(message, writer = Writer.create()) {\n    if (message.granter !== \"\") {\n      writer.uint32(10).string(message.granter);\n    }\n\n    if (message.grantee !== \"\") {\n      writer.uint32(18).string(message.grantee);\n    }\n\n    if (message.msgTypeUrl !== \"\") {\n      writer.uint32(26).string(message.msgTypeUrl);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRevoke\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.granter = reader.string();\n          break;\n\n        case 2:\n          message.grantee = reader.string();\n          break;\n\n        case 3:\n          message.msgTypeUrl = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgRevoke\n    };\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = String(object.granter);\n    } else {\n      message.granter = \"\";\n    }\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = String(object.grantee);\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n      message.msgTypeUrl = String(object.msgTypeUrl);\n    } else {\n      message.msgTypeUrl = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.granter !== undefined && (obj.granter = message.granter);\n    message.grantee !== undefined && (obj.grantee = message.grantee);\n    message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgRevoke\n    };\n\n    if (object.granter !== undefined && object.granter !== null) {\n      message.granter = object.granter;\n    } else {\n      message.granter = \"\";\n    }\n\n    if (object.grantee !== undefined && object.grantee !== null) {\n      message.grantee = object.grantee;\n    } else {\n      message.grantee = \"\";\n    }\n\n    if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n      message.msgTypeUrl = object.msgTypeUrl;\n    } else {\n      message.msgTypeUrl = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRevokeResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgRevokeResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgRevokeResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  Grant(request) {\n    const data = MsgGrant.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Grant\", data);\n    return promise.then(data => MsgGrantResponse.decode(new Reader(data)));\n  }\n\n  Exec(request) {\n    const data = MsgExec.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Exec\", data);\n    return promise.then(data => MsgExecResponse.decode(new Reader(data)));\n  }\n\n  Revoke(request) {\n    const data = MsgRevoke.encode(request).finish();\n    const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Revoke\", data);\n    return promise.then(data => MsgRevokeResponse.decode(new Reader(data)));\n  }\n\n}\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js"],"names":["Reader","Writer","Grant","Any","protobufPackage","baseMsgGrant","granter","grantee","MsgGrant","encode","message","writer","create","uint32","string","grant","undefined","fork","ldelim","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseMsgExecResponse","MsgExecResponse","v","results","bytes","push","e","bytesFromBase64","map","base64FromBytes","baseMsgExec","MsgExec","msgs","baseMsgGrantResponse","MsgGrantResponse","_","baseMsgRevoke","msgTypeUrl","MsgRevoke","baseMsgRevokeResponse","MsgRevokeResponse","MsgClientImpl","constructor","rpc","request","data","finish","promise","then","Exec","Revoke","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Grant } from \"../../../cosmos/authz/v1beta1/authz\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.authz.v1beta1\";\nconst baseMsgGrant = { granter: \"\", grantee: \"\" };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined &&\n            (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgExec = { grantee: \"\" };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== \"\") {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n};\nconst baseMsgRevoke = { granter: \"\", grantee: \"\", msgTypeUrl: \"\" };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== \"\") {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = \"\";\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Grant\", data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Exec\", data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Revoke\", data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"]},"metadata":{},"sourceType":"module"}