{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = {\n  exported: false\n};\nexport const GenesisState = {\n  encode(message, writer = Writer.create()) {\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.lastTotalPower.length !== 0) {\n      writer.uint32(18).bytes(message.lastTotalPower);\n    }\n\n    for (const v of message.lastValidatorPowers) {\n      LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n\n    for (const v of message.validators) {\n      Validator.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n\n    for (const v of message.delegations) {\n      Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n    }\n\n    for (const v of message.unbondingDelegations) {\n      UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n\n    for (const v of message.redelegations) {\n      Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n    }\n\n    if (message.exported === true) {\n      writer.uint32(64).bool(message.exported);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGenesisState\n    };\n    message.lastValidatorPowers = [];\n    message.validators = [];\n    message.delegations = [];\n    message.unbondingDelegations = [];\n    message.redelegations = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.params = Params.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.lastTotalPower = reader.bytes();\n          break;\n\n        case 3:\n          message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n          break;\n\n        case 4:\n          message.validators.push(Validator.decode(reader, reader.uint32()));\n          break;\n\n        case 5:\n          message.delegations.push(Delegation.decode(reader, reader.uint32()));\n          break;\n\n        case 6:\n          message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n          break;\n\n        case 7:\n          message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n          break;\n\n        case 8:\n          message.exported = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseGenesisState\n    };\n    message.lastValidatorPowers = [];\n    message.validators = [];\n    message.delegations = [];\n    message.unbondingDelegations = [];\n    message.redelegations = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromJSON(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n      message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n    }\n\n    if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n      for (const e of object.lastValidatorPowers) {\n        message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n      }\n    }\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(Validator.fromJSON(e));\n      }\n    }\n\n    if (object.delegations !== undefined && object.delegations !== null) {\n      for (const e of object.delegations) {\n        message.delegations.push(Delegation.fromJSON(e));\n      }\n    }\n\n    if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n      for (const e of object.unbondingDelegations) {\n        message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n      }\n    }\n\n    if (object.redelegations !== undefined && object.redelegations !== null) {\n      for (const e of object.redelegations) {\n        message.redelegations.push(Redelegation.fromJSON(e));\n      }\n    }\n\n    if (object.exported !== undefined && object.exported !== null) {\n      message.exported = Boolean(object.exported);\n    } else {\n      message.exported = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n    message.lastTotalPower !== undefined && (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n\n    if (message.lastValidatorPowers) {\n      obj.lastValidatorPowers = message.lastValidatorPowers.map(e => e ? LastValidatorPower.toJSON(e) : undefined);\n    } else {\n      obj.lastValidatorPowers = [];\n    }\n\n    if (message.validators) {\n      obj.validators = message.validators.map(e => e ? Validator.toJSON(e) : undefined);\n    } else {\n      obj.validators = [];\n    }\n\n    if (message.delegations) {\n      obj.delegations = message.delegations.map(e => e ? Delegation.toJSON(e) : undefined);\n    } else {\n      obj.delegations = [];\n    }\n\n    if (message.unbondingDelegations) {\n      obj.unbondingDelegations = message.unbondingDelegations.map(e => e ? UnbondingDelegation.toJSON(e) : undefined);\n    } else {\n      obj.unbondingDelegations = [];\n    }\n\n    if (message.redelegations) {\n      obj.redelegations = message.redelegations.map(e => e ? Redelegation.toJSON(e) : undefined);\n    } else {\n      obj.redelegations = [];\n    }\n\n    message.exported !== undefined && (obj.exported = message.exported);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseGenesisState\n    };\n    message.lastValidatorPowers = [];\n    message.validators = [];\n    message.delegations = [];\n    message.unbondingDelegations = [];\n    message.redelegations = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromPartial(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n      message.lastTotalPower = object.lastTotalPower;\n    } else {\n      message.lastTotalPower = new Uint8Array();\n    }\n\n    if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n      for (const e of object.lastValidatorPowers) {\n        message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n      }\n    }\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(Validator.fromPartial(e));\n      }\n    }\n\n    if (object.delegations !== undefined && object.delegations !== null) {\n      for (const e of object.delegations) {\n        message.delegations.push(Delegation.fromPartial(e));\n      }\n    }\n\n    if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n      for (const e of object.unbondingDelegations) {\n        message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n      }\n    }\n\n    if (object.redelegations !== undefined && object.redelegations !== null) {\n      for (const e of object.redelegations) {\n        message.redelegations.push(Redelegation.fromPartial(e));\n      }\n    }\n\n    if (object.exported !== undefined && object.exported !== null) {\n      message.exported = object.exported;\n    } else {\n      message.exported = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseLastValidatorPower = {\n  address: \"\",\n  power: 0\n};\nexport const LastValidatorPower = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    if (message.power !== 0) {\n      writer.uint32(16).int64(message.power);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseLastValidatorPower\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.power = longToNumber(reader.int64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseLastValidatorPower\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.power !== undefined && object.power !== null) {\n      message.power = Number(object.power);\n    } else {\n      message.power = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.power !== undefined && (obj.power = message.power);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseLastValidatorPower\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.power !== undefined && object.power !== null) {\n      message.power = object.power;\n    } else {\n      message.power = 0;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js"],"names":["Long","util","configure","Writer","Reader","Params","Validator","Delegation","UnbondingDelegation","Redelegation","protobufPackage","baseGenesisState","exported","GenesisState","encode","message","writer","create","params","undefined","uint32","fork","ldelim","lastTotalPower","length","bytes","v","lastValidatorPowers","LastValidatorPower","validators","delegations","unbondingDelegations","redelegations","bool","decode","input","reader","Uint8Array","end","len","pos","tag","push","skipType","fromJSON","object","bytesFromBase64","e","Boolean","toJSON","obj","base64FromBytes","map","fromPartial","baseLastValidatorPower","address","power","string","int64","longToNumber","String","Number","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}