{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = {\n  typeUrl: \"\"\n};\nexport const Any = {\n  encode(message, writer = Writer.create()) {\n    if (message.typeUrl !== \"\") {\n      writer.uint32(10).string(message.typeUrl);\n    }\n\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseAny\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.typeUrl = reader.string();\n          break;\n\n        case 2:\n          message.value = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseAny\n    };\n\n    if (object.typeUrl !== undefined && object.typeUrl !== null) {\n      message.typeUrl = String(object.typeUrl);\n    } else {\n      message.typeUrl = \"\";\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = bytesFromBase64(object.value);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n    message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseAny\n    };\n\n    if (object.typeUrl !== undefined && object.typeUrl !== null) {\n      message.typeUrl = object.typeUrl;\n    } else {\n      message.typeUrl = \"\";\n    }\n\n    if (object.value !== undefined && object.value !== null) {\n      message.value = object.value;\n    } else {\n      message.value = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js"],"names":["Writer","Reader","protobufPackage","baseAny","typeUrl","Any","encode","message","writer","create","uint32","string","value","length","bytes","decode","input","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","fromCharCode","join"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"]},"metadata":{},"sourceType":"module"}