{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst connection_1 = require(\"../../../../ibc/core/connection/v1/connection\");\n\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\n\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst any_1 = require(\"../../../../google/protobuf/any\");\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = 'ibc.core.connection.v1';\nconst baseQueryConnectionRequest = {\n  connectionId: ''\n};\nexports.QueryConnectionRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== '') {\n      writer.uint32(10).string(message.connectionId);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = String(object.connectionId);\n    } else {\n      message.connectionId = '';\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = object.connectionId;\n    } else {\n      message.connectionId = '';\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionResponse = {};\nexports.QueryConnectionResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connection !== undefined) {\n      connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.proof = reader.bytes();\n          break;\n\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionResponse);\n\n    if (object.connection !== undefined && object.connection !== null) {\n      message.connection = connection_1.ConnectionEnd.fromJSON(object.connection);\n    } else {\n      message.connection = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionResponse);\n\n    if (object.connection !== undefined && object.connection !== null) {\n      message.connection = connection_1.ConnectionEnd.fromPartial(object.connection);\n    } else {\n      message.connection = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionsRequest = {};\nexports.QueryConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionsResponse = {};\nexports.QueryConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connections) {\n      connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = [];\n\n    if (object.connections !== undefined && object.connections !== null) {\n      for (const e of object.connections) {\n        message.connections.push(connection_1.IdentifiedConnection.fromJSON(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromJSON(object.height);\n    } else {\n      message.height = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.connections) {\n      obj.connections = message.connections.map(e => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n    } else {\n      obj.connections = [];\n    }\n\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = [];\n\n    if (object.connections !== undefined && object.connections !== null) {\n      for (const e of object.connections) {\n        message.connections.push(connection_1.IdentifiedConnection.fromPartial(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    } else {\n      message.height = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientConnectionsRequest = {\n  clientId: ''\n};\nexports.QueryClientConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== '') {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = '';\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = '';\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientConnectionsResponse = {\n  connectionPaths: ''\n};\nexports.QueryClientConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connectionPaths) {\n      writer.uint32(10).string(v);\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n\n        case 2:\n          message.proof = reader.bytes();\n          break;\n\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = [];\n\n    if (object.connectionPaths !== undefined && object.connectionPaths !== null) {\n      for (const e of object.connectionPaths) {\n        message.connectionPaths.push(String(e));\n      }\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.connectionPaths) {\n      obj.connectionPaths = message.connectionPaths.map(e => e);\n    } else {\n      obj.connectionPaths = [];\n    }\n\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = [];\n\n    if (object.connectionPaths !== undefined && object.connectionPaths !== null) {\n      for (const e of object.connectionPaths) {\n        message.connectionPaths.push(e);\n      }\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionClientStateRequest = {\n  connectionId: ''\n};\nexports.QueryConnectionClientStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== '') {\n      writer.uint32(10).string(message.connectionId);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = String(object.connectionId);\n    } else {\n      message.connectionId = '';\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = object.connectionId;\n    } else {\n      message.connectionId = '';\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionClientStateResponse = {};\nexports.QueryConnectionClientStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.proof = reader.bytes();\n          break;\n\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n\n    if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n      message.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n    } else {\n      message.identifiedClientState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n\n    if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n      message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n    } else {\n      message.identifiedClientState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionConsensusStateRequest = {\n  connectionId: '',\n  revisionNumber: long_1.default.UZERO,\n  revisionHeight: long_1.default.UZERO\n};\nexports.QueryConnectionConsensusStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== '') {\n      writer.uint32(10).string(message.connectionId);\n    }\n\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = String(object.connectionId);\n    } else {\n      message.connectionId = '';\n    }\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = long_1.default.fromString(object.revisionNumber);\n    } else {\n      message.revisionNumber = long_1.default.UZERO;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = long_1.default.fromString(object.revisionHeight);\n    } else {\n      message.revisionHeight = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n\n    if (object.connectionId !== undefined && object.connectionId !== null) {\n      message.connectionId = object.connectionId;\n    } else {\n      message.connectionId = '';\n    }\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = object.revisionNumber;\n    } else {\n      message.revisionNumber = long_1.default.UZERO;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = object.revisionHeight;\n    } else {\n      message.revisionHeight = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConnectionConsensusStateResponse = {\n  clientId: ''\n};\nexports.QueryConnectionConsensusStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.clientId !== '') {\n      writer.uint32(18).string(message.clientId);\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.clientId = reader.string();\n          break;\n\n        case 3:\n          message.proof = reader.bytes();\n          break;\n\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromJSON(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromPartial(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  Connection(request) {\n    const data = exports.QueryConnectionRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.connection.v1.Query', 'Connection', data);\n    return promise.then(data => exports.QueryConnectionResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  Connections(request) {\n    const data = exports.QueryConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.connection.v1.Query', 'Connections', data);\n    return promise.then(data => exports.QueryConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ClientConnections(request) {\n    const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ClientConnections', data);\n    return promise.then(data => exports.QueryClientConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ConnectionClientState(request) {\n    const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ConnectionClientState', data);\n    return promise.then(data => exports.QueryConnectionClientStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ConnectionConsensusState(request) {\n    const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ConnectionConsensusState', data);\n    return promise.then(data => exports.QueryConnectionConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n}\n\nexports.QueryClientImpl = QueryClientImpl;\n\nvar globalThis = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, 'base64').toString('binary'));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, 'binary').toString('base64'));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(''));\n}","map":{"version":3,"sources":["../../../../../../src/codec/ibc/core/connection/v1/query.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst connection_1 = require(\"../../../../ibc/core/connection/v1/connection\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst long_1 = __importDefault(require(\"long\"));\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'ibc.core.connection.v1';\nconst baseQueryConnectionRequest = { connectionId: '' };\nexports.QueryConnectionRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionResponse = {};\nexports.QueryConnectionResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connection !== undefined) {\n            connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionResponse);\n        if (object.connection !== undefined && object.connection !== null) {\n            message.connection = connection_1.ConnectionEnd.fromJSON(object.connection);\n        }\n        else {\n            message.connection = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connection !== undefined &&\n            (obj.connection = message.connection\n                ? connection_1.ConnectionEnd.toJSON(message.connection)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionResponse);\n        if (object.connection !== undefined && object.connection !== null) {\n            message.connection = connection_1.ConnectionEnd.fromPartial(object.connection);\n        }\n        else {\n            message.connection = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionsRequest = {};\nexports.QueryConnectionsRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionsRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionsRequest);\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageRequest.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionsRequest);\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionsResponse = {};\nexports.QueryConnectionsResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.connections) {\n            connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== undefined) {\n            client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionsResponse);\n        message.connections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionsResponse);\n        message.connections = [];\n        if (object.connections !== undefined && object.connections !== null) {\n            for (const e of object.connections) {\n                message.connections.push(connection_1.IdentifiedConnection.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.connections) {\n            obj.connections = message.connections.map((e) => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n        }\n        else {\n            obj.connections = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageResponse.toJSON(message.pagination)\n                : undefined);\n        message.height !== undefined &&\n            (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionsResponse);\n        message.connections = [];\n        if (object.connections !== undefined && object.connections !== null) {\n            for (const e of object.connections) {\n                message.connections.push(connection_1.IdentifiedConnection.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = client_1.Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryClientConnectionsRequest = { clientId: '' };\nexports.QueryClientConnectionsRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientConnectionsRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientConnectionsRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientConnectionsRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        return message;\n    },\n};\nconst baseQueryClientConnectionsResponse = { connectionPaths: '' };\nexports.QueryClientConnectionsResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.connectionPaths) {\n            writer.uint32(10).string(v);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientConnectionsResponse);\n        message.connectionPaths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionPaths.push(reader.string());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientConnectionsResponse);\n        message.connectionPaths = [];\n        if (object.connectionPaths !== undefined &&\n            object.connectionPaths !== null) {\n            for (const e of object.connectionPaths) {\n                message.connectionPaths.push(String(e));\n            }\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.connectionPaths) {\n            obj.connectionPaths = message.connectionPaths.map((e) => e);\n        }\n        else {\n            obj.connectionPaths = [];\n        }\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientConnectionsResponse);\n        message.connectionPaths = [];\n        if (object.connectionPaths !== undefined &&\n            object.connectionPaths !== null) {\n            for (const e of object.connectionPaths) {\n                message.connectionPaths.push(e);\n            }\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionClientStateRequest = { connectionId: '' };\nexports.QueryConnectionClientStateRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionClientStateResponse = {};\nexports.QueryConnectionClientStateResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.identifiedClientState !== undefined) {\n            client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n        if (object.identifiedClientState !== undefined &&\n            object.identifiedClientState !== null) {\n            message.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n        }\n        else {\n            message.identifiedClientState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifiedClientState !== undefined &&\n            (obj.identifiedClientState = message.identifiedClientState\n                ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n        if (object.identifiedClientState !== undefined &&\n            object.identifiedClientState !== null) {\n            message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n        }\n        else {\n            message.identifiedClientState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionConsensusStateRequest = {\n    connectionId: '',\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO,\n};\nexports.QueryConnectionConsensusStateRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (!message.revisionNumber.isZero()) {\n            writer.uint32(16).uint64(message.revisionNumber);\n        }\n        if (!message.revisionHeight.isZero()) {\n            writer.uint32(24).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 3:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = long_1.default.fromString(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = long_1.default.UZERO;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = long_1.default.fromString(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = long_1.default.UZERO;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nconst baseQueryConnectionConsensusStateResponse = { clientId: '' };\nexports.QueryConnectionConsensusStateResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(26).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.proof = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? any_1.Any.toJSON(message.consensusState)\n                : undefined);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Connection(request) {\n        const data = exports.QueryConnectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Query', 'Connection', data);\n        return promise.then((data) => exports.QueryConnectionResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    Connections(request) {\n        const data = exports.QueryConnectionsRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Query', 'Connections', data);\n        return promise.then((data) => exports.QueryConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ClientConnections(request) {\n        const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ClientConnections', data);\n        return promise.then((data) => exports.QueryClientConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConnectionClientState(request) {\n        const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ConnectionClientState', data);\n        return promise.then((data) => exports.QueryConnectionClientStateResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConnectionConsensusState(request) {\n        const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Query', 'ConnectionConsensusState', data);\n        return promise.then((data) => exports.QueryConnectionConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}