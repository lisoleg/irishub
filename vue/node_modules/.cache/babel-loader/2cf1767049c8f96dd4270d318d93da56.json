{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"irismod.token\";\nconst baseMsgIssueToken = {\n  symbol: \"\",\n  name: \"\",\n  scale: 0,\n  minUnit: \"\",\n  initialSupply: 0,\n  maxSupply: 0,\n  mintable: false,\n  owner: \"\"\n};\nexport const MsgIssueToken = {\n  encode(message, writer = Writer.create()) {\n    if (message.symbol !== \"\") {\n      writer.uint32(10).string(message.symbol);\n    }\n\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n\n    if (message.scale !== 0) {\n      writer.uint32(24).uint32(message.scale);\n    }\n\n    if (message.minUnit !== \"\") {\n      writer.uint32(34).string(message.minUnit);\n    }\n\n    if (message.initialSupply !== 0) {\n      writer.uint32(40).uint64(message.initialSupply);\n    }\n\n    if (message.maxSupply !== 0) {\n      writer.uint32(48).uint64(message.maxSupply);\n    }\n\n    if (message.mintable === true) {\n      writer.uint32(56).bool(message.mintable);\n    }\n\n    if (message.owner !== \"\") {\n      writer.uint32(66).string(message.owner);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgIssueToken\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.symbol = reader.string();\n          break;\n\n        case 2:\n          message.name = reader.string();\n          break;\n\n        case 3:\n          message.scale = reader.uint32();\n          break;\n\n        case 4:\n          message.minUnit = reader.string();\n          break;\n\n        case 5:\n          message.initialSupply = longToNumber(reader.uint64());\n          break;\n\n        case 6:\n          message.maxSupply = longToNumber(reader.uint64());\n          break;\n\n        case 7:\n          message.mintable = reader.bool();\n          break;\n\n        case 8:\n          message.owner = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgIssueToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = String(object.name);\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.scale !== undefined && object.scale !== null) {\n      message.scale = Number(object.scale);\n    } else {\n      message.scale = 0;\n    }\n\n    if (object.minUnit !== undefined && object.minUnit !== null) {\n      message.minUnit = String(object.minUnit);\n    } else {\n      message.minUnit = \"\";\n    }\n\n    if (object.initialSupply !== undefined && object.initialSupply !== null) {\n      message.initialSupply = Number(object.initialSupply);\n    } else {\n      message.initialSupply = 0;\n    }\n\n    if (object.maxSupply !== undefined && object.maxSupply !== null) {\n      message.maxSupply = Number(object.maxSupply);\n    } else {\n      message.maxSupply = 0;\n    }\n\n    if (object.mintable !== undefined && object.mintable !== null) {\n      message.mintable = Boolean(object.mintable);\n    } else {\n      message.mintable = false;\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = String(object.owner);\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    message.name !== undefined && (obj.name = message.name);\n    message.scale !== undefined && (obj.scale = message.scale);\n    message.minUnit !== undefined && (obj.minUnit = message.minUnit);\n    message.initialSupply !== undefined && (obj.initialSupply = message.initialSupply);\n    message.maxSupply !== undefined && (obj.maxSupply = message.maxSupply);\n    message.mintable !== undefined && (obj.mintable = message.mintable);\n    message.owner !== undefined && (obj.owner = message.owner);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgIssueToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.scale !== undefined && object.scale !== null) {\n      message.scale = object.scale;\n    } else {\n      message.scale = 0;\n    }\n\n    if (object.minUnit !== undefined && object.minUnit !== null) {\n      message.minUnit = object.minUnit;\n    } else {\n      message.minUnit = \"\";\n    }\n\n    if (object.initialSupply !== undefined && object.initialSupply !== null) {\n      message.initialSupply = object.initialSupply;\n    } else {\n      message.initialSupply = 0;\n    }\n\n    if (object.maxSupply !== undefined && object.maxSupply !== null) {\n      message.maxSupply = object.maxSupply;\n    } else {\n      message.maxSupply = 0;\n    }\n\n    if (object.mintable !== undefined && object.mintable !== null) {\n      message.mintable = object.mintable;\n    } else {\n      message.mintable = false;\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = object.owner;\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgIssueTokenResponse = {};\nexport const MsgIssueTokenResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgIssueTokenResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgIssueTokenResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgIssueTokenResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgTransferTokenOwner = {\n  srcOwner: \"\",\n  dstOwner: \"\",\n  symbol: \"\"\n};\nexport const MsgTransferTokenOwner = {\n  encode(message, writer = Writer.create()) {\n    if (message.srcOwner !== \"\") {\n      writer.uint32(10).string(message.srcOwner);\n    }\n\n    if (message.dstOwner !== \"\") {\n      writer.uint32(18).string(message.dstOwner);\n    }\n\n    if (message.symbol !== \"\") {\n      writer.uint32(26).string(message.symbol);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgTransferTokenOwner\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.srcOwner = reader.string();\n          break;\n\n        case 2:\n          message.dstOwner = reader.string();\n          break;\n\n        case 3:\n          message.symbol = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgTransferTokenOwner\n    };\n\n    if (object.srcOwner !== undefined && object.srcOwner !== null) {\n      message.srcOwner = String(object.srcOwner);\n    } else {\n      message.srcOwner = \"\";\n    }\n\n    if (object.dstOwner !== undefined && object.dstOwner !== null) {\n      message.dstOwner = String(object.dstOwner);\n    } else {\n      message.dstOwner = \"\";\n    }\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.srcOwner !== undefined && (obj.srcOwner = message.srcOwner);\n    message.dstOwner !== undefined && (obj.dstOwner = message.dstOwner);\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgTransferTokenOwner\n    };\n\n    if (object.srcOwner !== undefined && object.srcOwner !== null) {\n      message.srcOwner = object.srcOwner;\n    } else {\n      message.srcOwner = \"\";\n    }\n\n    if (object.dstOwner !== undefined && object.dstOwner !== null) {\n      message.dstOwner = object.dstOwner;\n    } else {\n      message.dstOwner = \"\";\n    }\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgTransferTokenOwnerResponse = {};\nexport const MsgTransferTokenOwnerResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgTransferTokenOwnerResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgTransferTokenOwnerResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgTransferTokenOwnerResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgEditToken = {\n  symbol: \"\",\n  name: \"\",\n  maxSupply: 0,\n  mintable: \"\",\n  owner: \"\"\n};\nexport const MsgEditToken = {\n  encode(message, writer = Writer.create()) {\n    if (message.symbol !== \"\") {\n      writer.uint32(10).string(message.symbol);\n    }\n\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n\n    if (message.maxSupply !== 0) {\n      writer.uint32(24).uint64(message.maxSupply);\n    }\n\n    if (message.mintable !== \"\") {\n      writer.uint32(34).string(message.mintable);\n    }\n\n    if (message.owner !== \"\") {\n      writer.uint32(42).string(message.owner);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgEditToken\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.symbol = reader.string();\n          break;\n\n        case 2:\n          message.name = reader.string();\n          break;\n\n        case 3:\n          message.maxSupply = longToNumber(reader.uint64());\n          break;\n\n        case 4:\n          message.mintable = reader.string();\n          break;\n\n        case 5:\n          message.owner = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgEditToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = String(object.name);\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.maxSupply !== undefined && object.maxSupply !== null) {\n      message.maxSupply = Number(object.maxSupply);\n    } else {\n      message.maxSupply = 0;\n    }\n\n    if (object.mintable !== undefined && object.mintable !== null) {\n      message.mintable = String(object.mintable);\n    } else {\n      message.mintable = \"\";\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = String(object.owner);\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    message.name !== undefined && (obj.name = message.name);\n    message.maxSupply !== undefined && (obj.maxSupply = message.maxSupply);\n    message.mintable !== undefined && (obj.mintable = message.mintable);\n    message.owner !== undefined && (obj.owner = message.owner);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgEditToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.maxSupply !== undefined && object.maxSupply !== null) {\n      message.maxSupply = object.maxSupply;\n    } else {\n      message.maxSupply = 0;\n    }\n\n    if (object.mintable !== undefined && object.mintable !== null) {\n      message.mintable = object.mintable;\n    } else {\n      message.mintable = \"\";\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = object.owner;\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgEditTokenResponse = {};\nexport const MsgEditTokenResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgEditTokenResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgEditTokenResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgEditTokenResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgMintToken = {\n  symbol: \"\",\n  amount: 0,\n  to: \"\",\n  owner: \"\"\n};\nexport const MsgMintToken = {\n  encode(message, writer = Writer.create()) {\n    if (message.symbol !== \"\") {\n      writer.uint32(10).string(message.symbol);\n    }\n\n    if (message.amount !== 0) {\n      writer.uint32(16).uint64(message.amount);\n    }\n\n    if (message.to !== \"\") {\n      writer.uint32(26).string(message.to);\n    }\n\n    if (message.owner !== \"\") {\n      writer.uint32(34).string(message.owner);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgMintToken\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.symbol = reader.string();\n          break;\n\n        case 2:\n          message.amount = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.to = reader.string();\n          break;\n\n        case 4:\n          message.owner = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgMintToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Number(object.amount);\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.to !== undefined && object.to !== null) {\n      message.to = String(object.to);\n    } else {\n      message.to = \"\";\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = String(object.owner);\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    message.amount !== undefined && (obj.amount = message.amount);\n    message.to !== undefined && (obj.to = message.to);\n    message.owner !== undefined && (obj.owner = message.owner);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgMintToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = object.amount;\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.to !== undefined && object.to !== null) {\n      message.to = object.to;\n    } else {\n      message.to = \"\";\n    }\n\n    if (object.owner !== undefined && object.owner !== null) {\n      message.owner = object.owner;\n    } else {\n      message.owner = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgMintTokenResponse = {};\nexport const MsgMintTokenResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgMintTokenResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgMintTokenResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgMintTokenResponse\n    };\n    return message;\n  }\n\n};\nconst baseMsgBurnToken = {\n  symbol: \"\",\n  amount: 0,\n  sender: \"\"\n};\nexport const MsgBurnToken = {\n  encode(message, writer = Writer.create()) {\n    if (message.symbol !== \"\") {\n      writer.uint32(10).string(message.symbol);\n    }\n\n    if (message.amount !== 0) {\n      writer.uint32(16).uint64(message.amount);\n    }\n\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgBurnToken\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.symbol = reader.string();\n          break;\n\n        case 2:\n          message.amount = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.sender = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgBurnToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Number(object.amount);\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    message.amount !== undefined && (obj.amount = message.amount);\n    message.sender !== undefined && (obj.sender = message.sender);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgBurnToken\n    };\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = object.amount;\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgBurnTokenResponse = {};\nexport const MsgBurnTokenResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgBurnTokenResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgBurnTokenResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgBurnTokenResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  IssueToken(request) {\n    const data = MsgIssueToken.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.token.Msg\", \"IssueToken\", data);\n    return promise.then(data => MsgIssueTokenResponse.decode(new Reader(data)));\n  }\n\n  EditToken(request) {\n    const data = MsgEditToken.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.token.Msg\", \"EditToken\", data);\n    return promise.then(data => MsgEditTokenResponse.decode(new Reader(data)));\n  }\n\n  MintToken(request) {\n    const data = MsgMintToken.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.token.Msg\", \"MintToken\", data);\n    return promise.then(data => MsgMintTokenResponse.decode(new Reader(data)));\n  }\n\n  BurnToken(request) {\n    const data = MsgBurnToken.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.token.Msg\", \"BurnToken\", data);\n    return promise.then(data => MsgBurnTokenResponse.decode(new Reader(data)));\n  }\n\n  TransferTokenOwner(request) {\n    const data = MsgTransferTokenOwner.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.token.Msg\", \"TransferTokenOwner\", data);\n    return promise.then(data => MsgTransferTokenOwnerResponse.decode(new Reader(data)));\n  }\n\n}\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/alice/checkers/irismod.token/module/types/token/tx.js"],"names":["Reader","util","configure","Writer","Long","protobufPackage","baseMsgIssueToken","symbol","name","scale","minUnit","initialSupply","maxSupply","mintable","owner","MsgIssueToken","encode","message","writer","create","uint32","string","uint64","bool","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","String","Number","Boolean","toJSON","obj","fromPartial","baseMsgIssueTokenResponse","MsgIssueTokenResponse","_","baseMsgTransferTokenOwner","srcOwner","dstOwner","MsgTransferTokenOwner","baseMsgTransferTokenOwnerResponse","MsgTransferTokenOwnerResponse","baseMsgEditToken","MsgEditToken","baseMsgEditTokenResponse","MsgEditTokenResponse","baseMsgMintToken","amount","to","MsgMintToken","baseMsgMintTokenResponse","MsgMintTokenResponse","baseMsgBurnToken","sender","MsgBurnToken","baseMsgBurnTokenResponse","MsgBurnTokenResponse","MsgClientImpl","constructor","rpc","IssueToken","request","data","finish","promise","then","EditToken","MintToken","BurnToken","TransferTokenOwner","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"irismod.token\";\nconst baseMsgIssueToken = {\n    symbol: \"\",\n    name: \"\",\n    scale: 0,\n    minUnit: \"\",\n    initialSupply: 0,\n    maxSupply: 0,\n    mintable: false,\n    owner: \"\",\n};\nexport const MsgIssueToken = {\n    encode(message, writer = Writer.create()) {\n        if (message.symbol !== \"\") {\n            writer.uint32(10).string(message.symbol);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.scale !== 0) {\n            writer.uint32(24).uint32(message.scale);\n        }\n        if (message.minUnit !== \"\") {\n            writer.uint32(34).string(message.minUnit);\n        }\n        if (message.initialSupply !== 0) {\n            writer.uint32(40).uint64(message.initialSupply);\n        }\n        if (message.maxSupply !== 0) {\n            writer.uint32(48).uint64(message.maxSupply);\n        }\n        if (message.mintable === true) {\n            writer.uint32(56).bool(message.mintable);\n        }\n        if (message.owner !== \"\") {\n            writer.uint32(66).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueToken };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.symbol = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.scale = reader.uint32();\n                    break;\n                case 4:\n                    message.minUnit = reader.string();\n                    break;\n                case 5:\n                    message.initialSupply = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.maxSupply = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.mintable = reader.bool();\n                    break;\n                case 8:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.scale !== undefined && object.scale !== null) {\n            message.scale = Number(object.scale);\n        }\n        else {\n            message.scale = 0;\n        }\n        if (object.minUnit !== undefined && object.minUnit !== null) {\n            message.minUnit = String(object.minUnit);\n        }\n        else {\n            message.minUnit = \"\";\n        }\n        if (object.initialSupply !== undefined && object.initialSupply !== null) {\n            message.initialSupply = Number(object.initialSupply);\n        }\n        else {\n            message.initialSupply = 0;\n        }\n        if (object.maxSupply !== undefined && object.maxSupply !== null) {\n            message.maxSupply = Number(object.maxSupply);\n        }\n        else {\n            message.maxSupply = 0;\n        }\n        if (object.mintable !== undefined && object.mintable !== null) {\n            message.mintable = Boolean(object.mintable);\n        }\n        else {\n            message.mintable = false;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.name !== undefined && (obj.name = message.name);\n        message.scale !== undefined && (obj.scale = message.scale);\n        message.minUnit !== undefined && (obj.minUnit = message.minUnit);\n        message.initialSupply !== undefined &&\n            (obj.initialSupply = message.initialSupply);\n        message.maxSupply !== undefined && (obj.maxSupply = message.maxSupply);\n        message.mintable !== undefined && (obj.mintable = message.mintable);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.scale !== undefined && object.scale !== null) {\n            message.scale = object.scale;\n        }\n        else {\n            message.scale = 0;\n        }\n        if (object.minUnit !== undefined && object.minUnit !== null) {\n            message.minUnit = object.minUnit;\n        }\n        else {\n            message.minUnit = \"\";\n        }\n        if (object.initialSupply !== undefined && object.initialSupply !== null) {\n            message.initialSupply = object.initialSupply;\n        }\n        else {\n            message.initialSupply = 0;\n        }\n        if (object.maxSupply !== undefined && object.maxSupply !== null) {\n            message.maxSupply = object.maxSupply;\n        }\n        else {\n            message.maxSupply = 0;\n        }\n        if (object.mintable !== undefined && object.mintable !== null) {\n            message.mintable = object.mintable;\n        }\n        else {\n            message.mintable = false;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgIssueTokenResponse = {};\nexport const MsgIssueTokenResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueTokenResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueTokenResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueTokenResponse };\n        return message;\n    },\n};\nconst baseMsgTransferTokenOwner = {\n    srcOwner: \"\",\n    dstOwner: \"\",\n    symbol: \"\",\n};\nexport const MsgTransferTokenOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.srcOwner !== \"\") {\n            writer.uint32(10).string(message.srcOwner);\n        }\n        if (message.dstOwner !== \"\") {\n            writer.uint32(18).string(message.dstOwner);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(26).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferTokenOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.srcOwner = reader.string();\n                    break;\n                case 2:\n                    message.dstOwner = reader.string();\n                    break;\n                case 3:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferTokenOwner };\n        if (object.srcOwner !== undefined && object.srcOwner !== null) {\n            message.srcOwner = String(object.srcOwner);\n        }\n        else {\n            message.srcOwner = \"\";\n        }\n        if (object.dstOwner !== undefined && object.dstOwner !== null) {\n            message.dstOwner = String(object.dstOwner);\n        }\n        else {\n            message.dstOwner = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.srcOwner !== undefined && (obj.srcOwner = message.srcOwner);\n        message.dstOwner !== undefined && (obj.dstOwner = message.dstOwner);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferTokenOwner };\n        if (object.srcOwner !== undefined && object.srcOwner !== null) {\n            message.srcOwner = object.srcOwner;\n        }\n        else {\n            message.srcOwner = \"\";\n        }\n        if (object.dstOwner !== undefined && object.dstOwner !== null) {\n            message.dstOwner = object.dstOwner;\n        }\n        else {\n            message.dstOwner = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTransferTokenOwnerResponse = {};\nexport const MsgTransferTokenOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTransferTokenOwnerResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTransferTokenOwnerResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTransferTokenOwnerResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditToken = {\n    symbol: \"\",\n    name: \"\",\n    maxSupply: 0,\n    mintable: \"\",\n    owner: \"\",\n};\nexport const MsgEditToken = {\n    encode(message, writer = Writer.create()) {\n        if (message.symbol !== \"\") {\n            writer.uint32(10).string(message.symbol);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.maxSupply !== 0) {\n            writer.uint32(24).uint64(message.maxSupply);\n        }\n        if (message.mintable !== \"\") {\n            writer.uint32(34).string(message.mintable);\n        }\n        if (message.owner !== \"\") {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditToken };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.symbol = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.maxSupply = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.mintable = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.maxSupply !== undefined && object.maxSupply !== null) {\n            message.maxSupply = Number(object.maxSupply);\n        }\n        else {\n            message.maxSupply = 0;\n        }\n        if (object.mintable !== undefined && object.mintable !== null) {\n            message.mintable = String(object.mintable);\n        }\n        else {\n            message.mintable = \"\";\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.name !== undefined && (obj.name = message.name);\n        message.maxSupply !== undefined && (obj.maxSupply = message.maxSupply);\n        message.mintable !== undefined && (obj.mintable = message.mintable);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.maxSupply !== undefined && object.maxSupply !== null) {\n            message.maxSupply = object.maxSupply;\n        }\n        else {\n            message.maxSupply = 0;\n        }\n        if (object.mintable !== undefined && object.mintable !== null) {\n            message.mintable = object.mintable;\n        }\n        else {\n            message.mintable = \"\";\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditTokenResponse = {};\nexport const MsgEditTokenResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditTokenResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditTokenResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditTokenResponse };\n        return message;\n    },\n};\nconst baseMsgMintToken = { symbol: \"\", amount: 0, to: \"\", owner: \"\" };\nexport const MsgMintToken = {\n    encode(message, writer = Writer.create()) {\n        if (message.symbol !== \"\") {\n            writer.uint32(10).string(message.symbol);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.to !== \"\") {\n            writer.uint32(26).string(message.to);\n        }\n        if (message.owner !== \"\") {\n            writer.uint32(34).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintToken };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.symbol = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.to = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = \"\";\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.to !== undefined && (obj.to = message.to);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = \"\";\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgMintTokenResponse = {};\nexport const MsgMintTokenResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTokenResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTokenResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTokenResponse };\n        return message;\n    },\n};\nconst baseMsgBurnToken = { symbol: \"\", amount: 0, sender: \"\" };\nexport const MsgBurnToken = {\n    encode(message, writer = Writer.create()) {\n        if (message.symbol !== \"\") {\n            writer.uint32(10).string(message.symbol);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnToken };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.symbol = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnToken };\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgBurnTokenResponse = {};\nexport const MsgBurnTokenResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnTokenResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnTokenResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnTokenResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    IssueToken(request) {\n        const data = MsgIssueToken.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.token.Msg\", \"IssueToken\", data);\n        return promise.then((data) => MsgIssueTokenResponse.decode(new Reader(data)));\n    }\n    EditToken(request) {\n        const data = MsgEditToken.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.token.Msg\", \"EditToken\", data);\n        return promise.then((data) => MsgEditTokenResponse.decode(new Reader(data)));\n    }\n    MintToken(request) {\n        const data = MsgMintToken.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.token.Msg\", \"MintToken\", data);\n        return promise.then((data) => MsgMintTokenResponse.decode(new Reader(data)));\n    }\n    BurnToken(request) {\n        const data = MsgBurnToken.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.token.Msg\", \"BurnToken\", data);\n        return promise.then((data) => MsgBurnTokenResponse.decode(new Reader(data)));\n    }\n    TransferTokenOwner(request) {\n        const data = MsgTransferTokenOwner.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.token.Msg\", \"TransferTokenOwner\", data);\n        return promise.then((data) => MsgTransferTokenOwnerResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}