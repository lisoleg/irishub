{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"中 文\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"English\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SpLinkIcon = _resolveComponent(\"SpLinkIcon\");\n\n  const _component_SpButton = _resolveComponent(\"SpButton\");\n\n  const _component_SpSidebar = _resolveComponent(\"SpSidebar\");\n\n  return _openBlock(), _createBlock(_component_SpSidebar, {\n    onSidebarOpen: _cache[2] || (_cache[2] = $event => $data.sidebarOpen = true),\n    onSidebarClose: _cache[3] || (_cache[3] = $event => $data.sidebarOpen = false)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_SpLinkIcon, {\n      link: \"/\",\n      text: \"控制面板\",\n      icon: \"Dashboard\"\n    }), _createVNode(_component_SpLinkIcon, {\n      link: \"/relayers\",\n      text: \"区块浏览器\",\n      icon: \"Transactions\"\n    })]),\n    footer: _withCtx(() => [_createVNode(_component_SpButton, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => $setup.changeLanguage('ch'))\n    }, {\n      default: _withCtx(() => [_hoisted_1]),\n      _: 1\n    }), _createVNode(_component_SpButton, {\n      type: \"primary\",\n      onClick: _cache[1] || (_cache[1] = $event => $setup.changeLanguage('en'))\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n    }), _createElementVNode(\"h3\", null, \"@\" + _toDisplayString(_ctx.$t('menus.metab')), 1)]),\n    _: 1\n  });\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/components/Sidebar.vue"],"names":[],"mappings":";;iDAO6D,K;;iDACA,S;;;;;;;;;uBAP3D,YAAA,CAUY,oBAVZ,EAUY;AAVI,IAAA,aAAY,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,KAAA,CAAA,WAAA,GAAW,IAAb,CAUhB;AAV2C,IAAA,cAAa,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,KAAA,CAAA,WAAA,GAAW,KAAb;AAUxD,GAVZ,E;AACmB,IAAA,OAAO,EAAA,QAAA,CACtB,MAAoD,CAApD,YAAA,CAAoD,qBAApD,EAAoD;AAAxC,MAAA,IAAI,EAAC,GAAmC;AAA/B,MAAA,IAAI,EAAC,MAA0B;AAAnB,MAAA,IAAI,EAAC;AAAc,KAApD,CAAoD,EACpD,YAAA,CAAgE,qBAAhE,EAAgE;AAApD,MAAA,IAAI,EAAC,WAA+C;AAAnC,MAAA,IAAI,EAAC,OAA8B;AAAtB,MAAA,IAAI,EAAC;AAAiB,KAAhE,CADoD,CAD9B,C;AAIP,IAAA,MAAM,EAAA,QAAA,CACrB,MAAuE,CAAvE,YAAA,CAAuE,mBAAvE,EAAuE;AAA7D,MAAA,IAAI,EAAC,SAAwD;AAA7C,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,MAAA,CAAA,cAAA,CAAc,IAAd,CAAF;AAAwC,KAAvE,E;wBAAuD,MAAK,C,UAAA,C;;KAA5D,CAAuE,EACvE,YAAA,CAAyE,mBAAzE,EAAyE;AAA/D,MAAA,IAAI,EAAC,SAA0D;AAA/C,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,MAAA,IAAE,MAAA,CAAA,cAAA,CAAc,IAAd,CAAF;AAA0C,KAAzE,E;wBAAuD,MAAO,C,UAAA,C;;KAA9D,CADuE,EAEtE,mBAAA,CAA+B,IAA/B,EAA+B,IAA/B,EAAI,MAAC,gBAAA,CAAE,IAAA,CAAA,EAAA,CAAE,aAAF,CAAF,CAAL,EAAS,CAAT,CAFsE,CADlD,C;;GALzB,C","sourcesContent":["<template>\n  <SpSidebar v-on:sidebar-open=\"sidebarOpen = true\" v-on:sidebar-close=\"sidebarOpen = false\">\n    <template v-slot:default>\n      <SpLinkIcon link=\"/\" text=\"控制面板\" icon=\"Dashboard\" />\n      <SpLinkIcon link=\"/relayers\" text=\"区块浏览器\" icon=\"Transactions\" />\n    </template>\n    <template v-slot:footer>\n      <SpButton type=\"primary\" @click=\"changeLanguage('ch')\">中   文</SpButton>\n      <SpButton type=\"primary\" @click=\"changeLanguage('en')\">English</SpButton>\n       <h3>@{{$t('menus.metab')}}</h3>\n    </template>\n  </SpSidebar>\n</template>\n\n<script>\nimport { getCurrentInstance } from \"vue\";\nimport { useI18n } from 'vue-i18n'//要在js中使用国际化\nexport default {\n  name: 'Sidebar',\n  data() {\n    return {\n      sidebarOpen: true,\n    }\n  },\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    },\n  },\n\n  setup() {\n    const { proxy } = getCurrentInstance();\n    function changeLanguage(type) {\n      proxy.$i18n.locale = type;\n    }\n    const { t } = useI18n();\n    return { changeLanguage };\n  },\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}