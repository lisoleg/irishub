{"ast":null,"code":"import { useI18n } from \"vue-i18n\";\nexport default {\n  name: 'Sidebar',\n\n  data() {\n    return {\n      sidebarOpen: true\n    };\n  },\n\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet']);\n    }\n\n  },\n\n  setup() {\n    const {\n      locale,\n      t\n    } = useI18n(); //通过local.value切换\n\n    const changeLanguage = val => {\n      locale.value = val; //保存一下修改的值\n\n      localStorage.setItem(\"lang\", locale.value);\n    };\n\n    return {\n      changeLanguage\n    };\n  }\n\n};","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/components/Sidebar.vue"],"names":[],"mappings":"AAiBA,SAAS,OAAT,QAAwB,UAAxB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;;AAEb,EAAA,IAAI,GAAG;AACL,WAAO;AACL,MAAA,WAAW,EAAE;AADR,KAAP;AAGD,GANY;;AAOb,EAAA,QAAQ,EAAE;AACR,IAAA,SAAS,GAAG;AACV,aAAO,KAAK,MAAL,CAAY,SAAZ,CAAsB,CAAC,QAAD,EAAW,QAAX,CAAtB,CAAP;AACD;;AAHO,GAPG;;AAYb,EAAA,KAAK,GAAG;AACN,UAAM;AAAE,MAAA,MAAF;AAAU,MAAA;AAAV,QAAgB,OAAO,EAA7B,CADM,CAEN;;AACA,UAAM,cAAa,GAAK,GAAD,IAAS;AAC9B,MAAA,MAAM,CAAC,KAAP,GAAe,GAAf,CAD8B,CAE9B;;AACA,MAAA,YAAY,CAAC,OAAb,CAAqB,MAArB,EAA6B,MAAM,CAAC,KAApC;AACD,KAJD;;AAMA,WAAO;AACL,MAAA;AADK,KAAP;AAGD;;AAxBY,CAAf","sourcesContent":["<template>\n  <SpSidebar v-on:sidebar-open=\"sidebarOpen = true\" v-on:sidebar-close=\"sidebarOpen = false\">\n    <template v-slot:default>\n      <SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n      <SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n      <SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n      <div class=\"sp-dash\"></div>\n    </template>\n    <template v-slot:footer>\n      <div class=\"sp-text\">{{$t('menus.metab')}}</div>\n      <SpButton @click=\"changeLanguage('zh')\">中文</SpButton>\n      <SpButton @click=\"changeLanguage('en')\">英文</SpButton>\n    </template>\n  </SpSidebar>\n</template>\n\n<script>\nimport { useI18n } from \"vue-i18n\";\nexport default {\n  name: 'Sidebar',\n  data() {\n    return {\n      sidebarOpen: true,\n    }\n  },\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    },\n  },\n  setup() {\n    const { locale, t } = useI18n();\n    //通过local.value切换\n    const changeLanguage = (val) => {\n      locale.value = val;\n      //保存一下修改的值\n      localStorage.setItem(\"lang\", locale.value);\n    };\n\n    return {\n      changeLanguage,\n    };\n  },\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}