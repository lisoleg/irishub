{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = {\n  defaultSendEnabled: false\n};\nexport const Params = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.sendEnabled) {\n      SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.defaultSendEnabled === true) {\n      writer.uint32(16).bool(message.defaultSendEnabled);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseParams\n    };\n    message.sendEnabled = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.defaultSendEnabled = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseParams\n    };\n    message.sendEnabled = [];\n\n    if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n      for (const e of object.sendEnabled) {\n        message.sendEnabled.push(SendEnabled.fromJSON(e));\n      }\n    }\n\n    if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n      message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n    } else {\n      message.defaultSendEnabled = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.sendEnabled) {\n      obj.sendEnabled = message.sendEnabled.map(e => e ? SendEnabled.toJSON(e) : undefined);\n    } else {\n      obj.sendEnabled = [];\n    }\n\n    message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseParams\n    };\n    message.sendEnabled = [];\n\n    if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n      for (const e of object.sendEnabled) {\n        message.sendEnabled.push(SendEnabled.fromPartial(e));\n      }\n    }\n\n    if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n      message.defaultSendEnabled = object.defaultSendEnabled;\n    } else {\n      message.defaultSendEnabled = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseSendEnabled = {\n  denom: \"\",\n  enabled: false\n};\nexport const SendEnabled = {\n  encode(message, writer = Writer.create()) {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n\n    if (message.enabled === true) {\n      writer.uint32(16).bool(message.enabled);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseSendEnabled\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n\n        case 2:\n          message.enabled = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseSendEnabled\n    };\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.enabled !== undefined && object.enabled !== null) {\n      message.enabled = Boolean(object.enabled);\n    } else {\n      message.enabled = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.enabled !== undefined && (obj.enabled = message.enabled);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseSendEnabled\n    };\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = object.denom;\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.enabled !== undefined && object.enabled !== null) {\n      message.enabled = object.enabled;\n    } else {\n      message.enabled = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseInput = {\n  address: \"\"\n};\nexport const Input = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    for (const v of message.coins) {\n      Coin.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseInput\n    };\n    message.coins = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.coins.push(Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseInput\n    };\n    message.coins = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.coins !== undefined && object.coins !== null) {\n      for (const e of object.coins) {\n        message.coins.push(Coin.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n\n    if (message.coins) {\n      obj.coins = message.coins.map(e => e ? Coin.toJSON(e) : undefined);\n    } else {\n      obj.coins = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseInput\n    };\n    message.coins = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.coins !== undefined && object.coins !== null) {\n      for (const e of object.coins) {\n        message.coins.push(Coin.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseOutput = {\n  address: \"\"\n};\nexport const Output = {\n  encode(message, writer = Writer.create()) {\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    for (const v of message.coins) {\n      Coin.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseOutput\n    };\n    message.coins = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.coins.push(Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseOutput\n    };\n    message.coins = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.coins !== undefined && object.coins !== null) {\n      for (const e of object.coins) {\n        message.coins.push(Coin.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = message.address);\n\n    if (message.coins) {\n      obj.coins = message.coins.map(e => e ? Coin.toJSON(e) : undefined);\n    } else {\n      obj.coins = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseOutput\n    };\n    message.coins = [];\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.coins !== undefined && object.coins !== null) {\n      for (const e of object.coins) {\n        message.coins.push(Coin.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseSupply = {};\nexport const Supply = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.total) {\n      Coin.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseSupply\n    };\n    message.total = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.total.push(Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseSupply\n    };\n    message.total = [];\n\n    if (object.total !== undefined && object.total !== null) {\n      for (const e of object.total) {\n        message.total.push(Coin.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.total) {\n      obj.total = message.total.map(e => e ? Coin.toJSON(e) : undefined);\n    } else {\n      obj.total = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseSupply\n    };\n    message.total = [];\n\n    if (object.total !== undefined && object.total !== null) {\n      for (const e of object.total) {\n        message.total.push(Coin.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseDenomUnit = {\n  denom: \"\",\n  exponent: 0,\n  aliases: \"\"\n};\nexport const DenomUnit = {\n  encode(message, writer = Writer.create()) {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n\n    if (message.exponent !== 0) {\n      writer.uint32(16).uint32(message.exponent);\n    }\n\n    for (const v of message.aliases) {\n      writer.uint32(26).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDenomUnit\n    };\n    message.aliases = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n\n        case 2:\n          message.exponent = reader.uint32();\n          break;\n\n        case 3:\n          message.aliases.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseDenomUnit\n    };\n    message.aliases = [];\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.exponent !== undefined && object.exponent !== null) {\n      message.exponent = Number(object.exponent);\n    } else {\n      message.exponent = 0;\n    }\n\n    if (object.aliases !== undefined && object.aliases !== null) {\n      for (const e of object.aliases) {\n        message.aliases.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.exponent !== undefined && (obj.exponent = message.exponent);\n\n    if (message.aliases) {\n      obj.aliases = message.aliases.map(e => e);\n    } else {\n      obj.aliases = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseDenomUnit\n    };\n    message.aliases = [];\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = object.denom;\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.exponent !== undefined && object.exponent !== null) {\n      message.exponent = object.exponent;\n    } else {\n      message.exponent = 0;\n    }\n\n    if (object.aliases !== undefined && object.aliases !== null) {\n      for (const e of object.aliases) {\n        message.aliases.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMetadata = {\n  description: \"\",\n  base: \"\",\n  display: \"\",\n  name: \"\",\n  symbol: \"\"\n};\nexport const Metadata = {\n  encode(message, writer = Writer.create()) {\n    if (message.description !== \"\") {\n      writer.uint32(10).string(message.description);\n    }\n\n    for (const v of message.denomUnits) {\n      DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.base !== \"\") {\n      writer.uint32(26).string(message.base);\n    }\n\n    if (message.display !== \"\") {\n      writer.uint32(34).string(message.display);\n    }\n\n    if (message.name !== \"\") {\n      writer.uint32(42).string(message.name);\n    }\n\n    if (message.symbol !== \"\") {\n      writer.uint32(50).string(message.symbol);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMetadata\n    };\n    message.denomUnits = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.description = reader.string();\n          break;\n\n        case 2:\n          message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n          break;\n\n        case 3:\n          message.base = reader.string();\n          break;\n\n        case 4:\n          message.display = reader.string();\n          break;\n\n        case 5:\n          message.name = reader.string();\n          break;\n\n        case 6:\n          message.symbol = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMetadata\n    };\n    message.denomUnits = [];\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.denomUnits !== undefined && object.denomUnits !== null) {\n      for (const e of object.denomUnits) {\n        message.denomUnits.push(DenomUnit.fromJSON(e));\n      }\n    }\n\n    if (object.base !== undefined && object.base !== null) {\n      message.base = String(object.base);\n    } else {\n      message.base = \"\";\n    }\n\n    if (object.display !== undefined && object.display !== null) {\n      message.display = String(object.display);\n    } else {\n      message.display = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = String(object.name);\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = String(object.symbol);\n    } else {\n      message.symbol = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.description !== undefined && (obj.description = message.description);\n\n    if (message.denomUnits) {\n      obj.denomUnits = message.denomUnits.map(e => e ? DenomUnit.toJSON(e) : undefined);\n    } else {\n      obj.denomUnits = [];\n    }\n\n    message.base !== undefined && (obj.base = message.base);\n    message.display !== undefined && (obj.display = message.display);\n    message.name !== undefined && (obj.name = message.name);\n    message.symbol !== undefined && (obj.symbol = message.symbol);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMetadata\n    };\n    message.denomUnits = [];\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = object.description;\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.denomUnits !== undefined && object.denomUnits !== null) {\n      for (const e of object.denomUnits) {\n        message.denomUnits.push(DenomUnit.fromPartial(e));\n      }\n    }\n\n    if (object.base !== undefined && object.base !== null) {\n      message.base = object.base;\n    } else {\n      message.base = \"\";\n    }\n\n    if (object.display !== undefined && object.display !== null) {\n      message.display = object.display;\n    } else {\n      message.display = \"\";\n    }\n\n    if (object.name !== undefined && object.name !== null) {\n      message.name = object.name;\n    } else {\n      message.name = \"\";\n    }\n\n    if (object.symbol !== undefined && object.symbol !== null) {\n      message.symbol = object.symbol;\n    } else {\n      message.symbol = \"\";\n    }\n\n    return message;\n  }\n\n};","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js"],"names":["Coin","Writer","Reader","protobufPackage","baseParams","defaultSendEnabled","Params","encode","message","writer","create","v","sendEnabled","SendEnabled","uint32","fork","ldelim","bool","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","push","skipType","fromJSON","object","e","Boolean","toJSON","obj","map","fromPartial","baseSendEnabled","denom","enabled","string","String","baseInput","address","Input","coins","baseOutput","Output","baseSupply","Supply","total","baseDenomUnit","exponent","aliases","DenomUnit","Number","baseMetadata","description","base","display","name","symbol","Metadata","denomUnits"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = {\n    description: \"\",\n    base: \"\",\n    display: \"\",\n    name: \"\",\n    symbol: \"\",\n};\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = \"\";\n        }\n        return message;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}