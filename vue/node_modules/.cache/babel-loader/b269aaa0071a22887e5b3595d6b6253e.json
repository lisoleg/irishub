{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _SpVuexError = _interopRequireDefault(require(\"../../../errors/SpVuexError\"));\n\nvar _excluded = [\"subscribe\", \"all\"];\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    GetTxsEvent: {},\n    _Subscriptions: new Set()\n  };\n}; // initial state\n\n\nvar state = getDefaultState();\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: {\n    RESET_STATE: function RESET_STATE(state) {\n      Object.assign(state, getDefaultState());\n    },\n    QUERY: function QUERY(state, _ref) {\n      var query = _ref.query,\n          key = _ref.key,\n          value = _ref.value;\n      state[query][JSON.stringify(key)] = value;\n    },\n    SUBSCRIBE: function SUBSCRIBE(state, subscription) {\n      state._Subscriptions.add(subscription);\n    },\n    UNSUBSCRIBE: function UNSUBSCRIBE(state, subscription) {\n      state._Subscriptions[\"delete\"](subscription);\n    }\n  },\n  getters: {\n    getGetTxsEvent: function getGetTxsEvent(state) {\n      return function () {\n        var _state$GetTxsEvent$JS;\n\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var ret = (_state$GetTxsEvent$JS = state.GetTxsEvent[JSON.stringify(params)]) !== null && _state$GetTxsEvent$JS !== void 0 ? _state$GetTxsEvent$JS : {};\n        debugger;\n        return ret;\n      };\n    }\n  },\n  actions: {\n    init: function init(_ref2) {\n      var dispatch = _ref2.dispatch,\n          rootGetters = _ref2.rootGetters;\n      console.log('Vuex nodule: common.transfers initialized!');\n\n      if (rootGetters['common/env/client']) {\n        rootGetters['common/env/client'].on('newblock', function () {\n          dispatch('StoreUpdate');\n        });\n      }\n    },\n    resetState: function resetState(_ref3) {\n      var commit = _ref3.commit;\n      commit('RESET_STATE');\n    },\n    unsubscribe: function unsubscribe(_ref4, subscription) {\n      var commit = _ref4.commit;\n      commit('UNSUBSCRIBE', subscription);\n    },\n    StoreUpdate: function StoreUpdate(_ref5) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var state, dispatch;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref5.state, dispatch = _ref5.dispatch;\n\n                state._Subscriptions.forEach(function (subscription) {\n                  dispatch(subscription.action, subscription.payload);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    ServiceGetTxsEvent: function ServiceGetTxsEvent(_ref6, _ref7) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var commit, rootGetters, _ref7$subscribe, subscribe, _ref7$all, all, key, value, next_values, _i, _Object$keys, prop;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref6.commit, rootGetters = _ref6.rootGetters;\n                _ref7$subscribe = _ref7.subscribe, subscribe = _ref7$subscribe === void 0 ? false : _ref7$subscribe, _ref7$all = _ref7.all, all = _ref7$all === void 0 ? true : _ref7$all, key = _objectWithoutProperties(_ref7, _excluded);\n                _context2.prev = 2;\n                _context2.next = 5; //debugger;\n                //console.log(\"case 0\"+key.event);\n\n                var ret = _axios[\"default\"].get(rootGetters['common/env/apiCosmos'] + '/cosmos/tx/v1beta1/txs?events=' + key.event); //console.log(ret);\n\n\n                return ret;\n\n              case 5:\n                value = _context2.sent.data;\n\n              case 6:\n                if (!(all && value.pagination && value.pagination.next_key != null)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _context2.next = 9; //console.log(\"case 6\"+key.event);\n\n                return _axios[\"default\"].get(rootGetters['common/env/apiCosmos'] + '/cosmos/tx/v1beta1/txs?events=' + key.event + '&pagination.key=' + value.pagination.next_key).data;\n\n              case 9:\n                next_values = _context2.sent;\n\n                for (_i = 0, _Object$keys = Object.keys(next_values); _i < _Object$keys.length; _i++) {\n                  prop = _Object$keys[_i];\n\n                  if (Array.isArray(next_values[prop])) {\n                    value[prop] = [].concat(_toConsumableArray(value[prop]), _toConsumableArray(next_values[prop]));\n                  } else {\n                    value[prop] = next_values[prop];\n                  }\n                } //console.log(value);\n\n\n                _context2.next = 6;\n                break;\n\n              case 14:\n                //console.log(\"case 14\");\n                //console.log(key);\n                commit('QUERY', {\n                  query: 'GetTxsEvent',\n                  key: key,\n                  value: value\n                });\n                if (subscribe) commit('SUBSCRIBE', {\n                  action: 'ServiceGetTxsEvent',\n                  payload: key\n                });\n                _context2.next = 21;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(new _SpVuexError[\"default\"]('QueryClient:ServiceGetTxsEvent', 'API Node Unavailable. Could not perform query.'));\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 18]]);\n      }))();\n    }\n  }\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/modules/common/transfers/transfers.js"],"names":["getDefaultState","GetTxsEvent","_Subscriptions","state","namespaced","mutations","RESET_STATE","Object","QUERY","query","key","value","JSON","SUBSCRIBE","UNSUBSCRIBE","getters","getGetTxsEvent","params","stringify","actions","dispatch","rootGetters","console","commit","unsubscribe","StoreUpdate","subscribe","axios","prop","action","payload","error"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,SAAO;AACNC,IAAAA,WAAW,EADL,EAAA;AAENC,IAAAA,cAAc,EAAE,IAAA,GAAA;AAFV,GAAP;AADD,CAAA,C,CAMA;;;AACA,IAAMC,KAAK,GAAGH,eAAd,EAAA;eACe;AACdI,EAAAA,UAAU,EADI,IAAA;AAEdD,EAAAA,KAAK,EAFS,KAAA;AAGdE,EAAAA,SAAS,EAAE;AACVC,IAAAA,WADU,EAAA,SAAA,WAAA,CAAA,KAAA,EACS;AAClBC,MAAAA,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAqBP,eAArBO,EAAAA;AAFS,KAAA;AAIVC,IAAAA,KAJU,EAAA,SAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAI0B;AAAA,UAArBC,KAAqB,GAAA,IAAA,CAArBA,KAAqB;AAAA,UAAdC,GAAc,GAAA,IAAA,CAAdA,GAAc;AAAA,UAATC,KAAS,GAAA,IAAA,CAATA,KAAS;AACnCR,MAAAA,KAAK,CAALA,KAAK,CAALA,CAAaS,IAAI,CAAJA,SAAAA,CAAbT,GAAaS,CAAbT,IAAAA,KAAAA;AALS,KAAA;AAOVU,IAAAA,SAPU,EAAA,SAAA,SAAA,CAAA,KAAA,EAAA,YAAA,EAOqB;AAC9BV,MAAAA,KAAK,CAALA,cAAAA,CAAAA,GAAAA,CAAAA,YAAAA;AARS,KAAA;AAUVW,IAAAA,WAVU,EAAA,SAAA,WAAA,CAAA,KAAA,EAAA,YAAA,EAUuB;AAChCX,MAAAA,KAAK,CAALA,cAAAA,CAAAA,QAAAA,EAAAA,YAAAA;AACA;AAZS,GAHG;AAiBdY,EAAAA,OAAO,EAAE;AACRC,IAAAA,cAAc,EAAE,SAAA,cAAA,CAAA,KAAA,EAAA;AAAA,aAAW,YAAiB;AAAA,YAAA,qBAAA;;AAAA,YAAhBC,MAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;AAC3C,YAAA,GAAA,GAAA,CAAA,qBAAOd,GAAAA,KAAMF,CAANE,WAAAA,CAAkBS,IAAKM,CAALN,SAAAA,CAAzB,MAAyBA,CAAlBT,CAAP,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,EAAA;AADe;AAAA,eAAA,GAAA;AAlBH,OAkBG;AAIjBgB;AALS,GAjBK;AAuBmB,EAAA,OAAzBC,EAAAA;AAAyB,IAAA,IAAA,EAAfC,SAAAA,IAAAA,CAAAA,KAAAA,EAAAA;AAChBC,UAAAA,QAAY,GAAA,KAAA,CAAZA,QAAAA;AAAAA,U,+BAAAA;AACA,MAAA,OAAID,CAAAA,GAAJ,CAAA,4CAAA;;AAEED,UAAAA,WAAS,CAATA,mBAAS,CAATA,EAAAA;AADDC,QAAAA,WAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,EAAAA,CAAAA,UAAAA,EAAAA,YAAAA;AAGA,UAAA,QAAA,CAAA,aAAA,CAAA;AAPM,SAINA;AAJM;AASKE,KARNH;AASNG,IAAAA,UAAO,EAAA,SAAPA,UAAO,CAAPA,KAAO,EAAPA;AAVO,UAAA,MAAA,GAAA,KAAA,CAAA,MAAA;AAYRC,MAAAA,MAAAA,CAZQ,aAYRA,CAAAA;AAAcD,KAXPH;AAYNG,IAAAA,WAAO,EAAA,SAAD,WAAC,CAAPA,KAAO,EAAPA,YAAO,EAAPA;AAbO,UAAA,MAAA,GAAA,KAAA,CAAA,MAAA;AAeFE,MAAAA,MAAAA,CAfE,aAeFA,EAfE,YAeFA,CAAAA;AAAiC,KAdhCL;AAcgC,IAAA,WAAA,EAAA,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,aAAA,iBAAA,EAAA,aAAA,oBAAA,IAAA,CAAA,SAAA,OAAA,GAAA;AAAA,YAAA,KAAA,EAAA,QAAA;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAnBjB,oBAAAA,QAAmB,CAAnBA,IAAAA,GAAOiB,QAAAA,CAAAA,IAAPjB;;AACnBA,gBAAAA,KAAK,GAACD,KAAAA,CAANC,KAAAA,EAAAA,QAA6B,GAAA,KAAA,CAAA,QAA7BA;;AAAAA,gBAAAA,KAAAA,CAAAA,cAAAA,CAAAA,OAAAA,CAAAA,UAAAA,YAAAA,EAAAA;;AADsC,iBACtCA;;AADsC,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAnBA;AAAmB;AAf/B,SAe+B,EAf/B,OAe+B,CAAA;AAf/B,OAe+B,CAAA,CAAA,EAAA;AAKsD,KAnBtFiB;AAmBsF,IAAA,kBAAA,EAAA,SAAA,kBAAA,CAAA,KAAA,EAAA,KAAA,EAAA;;AAAA,YAAA,MAAA,EAAA,WAAA,EAAA,eAAA,EAAA,SAAA,EAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAA,EAAA,EAAA,YAAA,EAAA,IAAA;;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAlEG,oBAAAA,SAAkE,CAAlEA,IAAAA,GAAQF,SAAAA,CAAAA,IAARE;AAAkE,mBAAzCG,CAAyC;AAAA,gBAAA,MAAA,GAAA,KAAA,CAAA,MAAA,EAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AAAA,gBAAA,eAAA,GAAA,KAAA,CAAA,SAAA,EAAA,SAAA,GAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,eAAA,EAAA,SAAA,GAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAA,SAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,SAAA,EAAA,GAAA,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;AAAA,gBAAA,SAGpFC,CAAAA,IAHoF,GAAA,CAAA;mCAAA,CAAA;AAAA;;oIAAA,CAAA;;;AAAA,uBAAA,GAAA;;AAAA,mBAAA,CAAA;AAAA,gBAAA,KAAA,GAAA,SAAA,CAAA,IAAA,CAAA,IAAA;;AAAA,mBAAA,CAAA;AAAA,oBAAA,EAAA,GAOlEA,IAAAA,KAAAA,CAAAA,UAPkE,IAQzFN,KAAAA,CAAAA,UAAAA,CAAY,QAAZA,IAAAA,IARyF,CAAA,EAAA;;AAAA;AAAA;;AAe1F,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA,CAf0F,CAejFO;;;;AAEPjB,mBAAAA,CAAAA;AADD,gBAAA,WAEO,GAAA,SAAA,CAAA,IAFP;;AAIC,qBAAA,EAAA,GAAA,CAAA,EAAA,YAAA,GAAA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,EAAA,EAAA,GAAA,YAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;AACD,kBAAA,IAAA,GAAA,YAAA,CAAA,EAAA,CAAA;;AACDW,sBAAAA,KAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA;AAtB0F,oBAAA,KAAA,CAAA,IAAA,CAAA,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,mBAsB1FA,MAtB0F;;AAAA;AAyB3FC,iBARGZ,CAQa;;;AAA6BA,gBAAAA,SAAAA,CAAAA,IAAAA,GAAAA,CAAAA;AAA7CY;;AACqCM,mBAAF,EAAEA;AAA8BC;AAApD;AA1B4E,gBAAA,MAAA,CAAA,OAAA,EAAA;AAAA,kBAAA,KAAA,EAAA,aAAA;0BAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,iBAAA,CAAA;AAAA,oBAAA,SAAA,EAAA,MAAA,CAAA,WAAA,EAAA;AA4B3FR,kBAAAA,MAAQS,EAART,oBA5B2F;;AAAA,iBAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAgC5F,gBAAA,OAAA,CAAA,KAAA,CAAA,IAAA,YAAA,CAAA,SAAA,CAAA,CAAA,gCAAA,EAAA,gDAAA,CAAA;;;;;AAhC0BC;;SAAkE,E,QAAA,E,IAAA,E,SAAA,CAAA;;;AAnBtFH;AAvBM,C","sourcesContent":["import axios from 'axios'\nimport SpVuexError from '../../../errors/SpVuexError'\n\nconst getDefaultState = () => {\n\treturn {\n\t\tGetTxsEvent: {},\n\t\t_Subscriptions: new Set(),\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t},\n\t},\n\tgetters: {\n\t\tgetGetTxsEvent: (state) => (params = {}) => {\n\t\t\treturn state.GetTxsEvent[JSON.stringify(params)] ?? {}\n\t\t},\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex nodule: common.transfers initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach((subscription) => {\n\t\t\t\tdispatch(subscription.action, subscription.payload)\n\t\t\t})\n\t\t},\n\t\tasync ServiceGetTxsEvent({ commit, rootGetters }, { subscribe = false, all = true, ...key }) {\n\t\t\ttry {\n\t\t\t\tlet value = (\n\t\t\t\t\tawait axios.get(rootGetters['common/env/apiCosmos'] + '/cosmos/tx/v1beta1/txs?events=' + key.event)\n\t\t\t\t).data\n\n\t\t\t\twhile (all && value.pagination && value.pagination.next_key != null) {\n\t\t\t\t\tlet next_values = await axios.get(\n\t\t\t\t\t\trootGetters['common/env/apiCosmos'] +\n\t\t\t\t\t\t\t'/cosmos/tx/v1beta1/txs?events=' +\n\t\t\t\t\t\t\tkey.event +\n\t\t\t\t\t\t\t'&pagination.key=' +\n\t\t\t\t\t\t\tvalue.pagination.next_key,\n\t\t\t\t\t).data\n\n\t\t\t\t\tfor (let prop of Object.keys(next_values)) {\n\t\t\t\t\t\tif (Array.isArray(next_values[prop])) {\n\t\t\t\t\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue[prop] = next_values[prop]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(value)\n\t\t\t\t}\n\n\t\t\t\tcommit('QUERY', { query: 'GetTxsEvent', key, value })\n\t\t\t\tif (subscribe) commit('SUBSCRIBE', { action: 'ServiceGetTxsEvent', payload: key })\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\n\t\t\t\t\tnew SpVuexError('QueryClient:ServiceGetTxsEvent', 'API Node Unavailable. Could not perform query.'),\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t},\n}\n"]},"metadata":{},"sourceType":"script"}