{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n  denom: \"\",\n  amount: 0,\n  sender: \"\",\n  receiver: \"\"\n};\nexport const FungibleTokenPacketData = {\n  encode(message, writer = Writer.create()) {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n\n    if (message.amount !== 0) {\n      writer.uint32(16).uint64(message.amount);\n    }\n\n    if (message.sender !== \"\") {\n      writer.uint32(26).string(message.sender);\n    }\n\n    if (message.receiver !== \"\") {\n      writer.uint32(34).string(message.receiver);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseFungibleTokenPacketData\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n\n        case 2:\n          message.amount = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.sender = reader.string();\n          break;\n\n        case 4:\n          message.receiver = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseFungibleTokenPacketData\n    };\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = String(object.denom);\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = Number(object.amount);\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.receiver !== undefined && object.receiver !== null) {\n      message.receiver = String(object.receiver);\n    } else {\n      message.receiver = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.amount !== undefined && (obj.amount = message.amount);\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.receiver !== undefined && (obj.receiver = message.receiver);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseFungibleTokenPacketData\n    };\n\n    if (object.denom !== undefined && object.denom !== null) {\n      message.denom = object.denom;\n    } else {\n      message.denom = \"\";\n    }\n\n    if (object.amount !== undefined && object.amount !== null) {\n      message.amount = object.amount;\n    } else {\n      message.amount = 0;\n    }\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.receiver !== undefined && object.receiver !== null) {\n      message.receiver = object.receiver;\n    } else {\n      message.receiver = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseDenomTrace = {\n  path: \"\",\n  baseDenom: \"\"\n};\nexport const DenomTrace = {\n  encode(message, writer = Writer.create()) {\n    if (message.path !== \"\") {\n      writer.uint32(10).string(message.path);\n    }\n\n    if (message.baseDenom !== \"\") {\n      writer.uint32(18).string(message.baseDenom);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDenomTrace\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.path = reader.string();\n          break;\n\n        case 2:\n          message.baseDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseDenomTrace\n    };\n\n    if (object.path !== undefined && object.path !== null) {\n      message.path = String(object.path);\n    } else {\n      message.path = \"\";\n    }\n\n    if (object.baseDenom !== undefined && object.baseDenom !== null) {\n      message.baseDenom = String(object.baseDenom);\n    } else {\n      message.baseDenom = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.path !== undefined && (obj.path = message.path);\n    message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseDenomTrace\n    };\n\n    if (object.path !== undefined && object.path !== null) {\n      message.path = object.path;\n    } else {\n      message.path = \"\";\n    }\n\n    if (object.baseDenom !== undefined && object.baseDenom !== null) {\n      message.baseDenom = object.baseDenom;\n    } else {\n      message.baseDenom = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseParams = {\n  sendEnabled: false,\n  receiveEnabled: false\n};\nexport const Params = {\n  encode(message, writer = Writer.create()) {\n    if (message.sendEnabled === true) {\n      writer.uint32(8).bool(message.sendEnabled);\n    }\n\n    if (message.receiveEnabled === true) {\n      writer.uint32(16).bool(message.receiveEnabled);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseParams\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sendEnabled = reader.bool();\n          break;\n\n        case 2:\n          message.receiveEnabled = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseParams\n    };\n\n    if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n      message.sendEnabled = Boolean(object.sendEnabled);\n    } else {\n      message.sendEnabled = false;\n    }\n\n    if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n      message.receiveEnabled = Boolean(object.receiveEnabled);\n    } else {\n      message.receiveEnabled = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n    message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseParams\n    };\n\n    if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n      message.sendEnabled = object.sendEnabled;\n    } else {\n      message.sendEnabled = false;\n    }\n\n    if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n      message.receiveEnabled = object.receiveEnabled;\n    } else {\n      message.receiveEnabled = false;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js"],"names":["Long","util","configure","Writer","Reader","protobufPackage","baseFungibleTokenPacketData","denom","amount","sender","receiver","FungibleTokenPacketData","encode","message","writer","create","uint32","string","uint64","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","String","Number","toJSON","obj","fromPartial","baseDenomTrace","path","baseDenom","DenomTrace","baseParams","sendEnabled","receiveEnabled","Params","bool","Boolean","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}