{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { WinningPlayer } from \"../checkers/winning_player\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseLeaderboard = {};\nexport const Leaderboard = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.winners) {\n      WinningPlayer.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseLeaderboard\n    };\n    message.winners = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.winners.push(WinningPlayer.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseLeaderboard\n    };\n    message.winners = [];\n\n    if (object.winners !== undefined && object.winners !== null) {\n      for (const e of object.winners) {\n        message.winners.push(WinningPlayer.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.winners) {\n      obj.winners = message.winners.map(e => e ? WinningPlayer.toJSON(e) : undefined);\n    } else {\n      obj.winners = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseLeaderboard\n    };\n    message.winners = [];\n\n    if (object.winners !== undefined && object.winners !== null) {\n      for (const e of object.winners) {\n        message.winners.push(WinningPlayer.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/alice/checkers/alice.checkers.checkers/module/types/checkers/leaderboard.js"],"names":["WinningPlayer","Writer","Reader","protobufPackage","baseLeaderboard","Leaderboard","encode","message","writer","create","v","winners","uint32","fork","ldelim","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","push","skipType","fromJSON","object","e","toJSON","obj","map","fromPartial"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { WinningPlayer } from \"../checkers/winning_player\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseLeaderboard = {};\nexport const Leaderboard = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.winners) {\n            WinningPlayer.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeaderboard };\n        message.winners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.winners.push(WinningPlayer.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeaderboard };\n        message.winners = [];\n        if (object.winners !== undefined && object.winners !== null) {\n            for (const e of object.winners) {\n                message.winners.push(WinningPlayer.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.winners) {\n            obj.winners = message.winners.map((e) => e ? WinningPlayer.toJSON(e) : undefined);\n        }\n        else {\n            obj.winners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeaderboard };\n        message.winners = [];\n        if (object.winners !== undefined && object.winners !== null) {\n            for (const e of object.winners) {\n                message.winners.push(WinningPlayer.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}