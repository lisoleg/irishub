{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxProof = exports.BlockMeta = exports.LightBlock = exports.SignedHeader = exports.Proposal = exports.CommitSig = exports.Commit = exports.Vote = exports.Data = exports.Header = exports.BlockID = exports.Part = exports.PartSetHeader = exports.signedMsgTypeToJSON = exports.signedMsgTypeFromJSON = exports.SignedMsgType = exports.blockIDFlagToJSON = exports.blockIDFlagFromJSON = exports.BlockIDFlag = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst proof_1 = require(\"../../tendermint/crypto/proof\");\n\nconst types_1 = require(\"../../tendermint/version/types\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\n\nconst validator_1 = require(\"../../tendermint/types/validator\");\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\n\nvar BlockIDFlag;\n\n(function (BlockIDFlag) {\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n  BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n  BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag = exports.BlockIDFlag || (exports.BlockIDFlag = {}));\n\nfunction blockIDFlagFromJSON(object) {\n  switch (object) {\n    case 0:\n    case 'BLOCK_ID_FLAG_UNKNOWN':\n      return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n\n    case 1:\n    case 'BLOCK_ID_FLAG_ABSENT':\n      return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n\n    case 2:\n    case 'BLOCK_ID_FLAG_COMMIT':\n      return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n\n    case 3:\n    case 'BLOCK_ID_FLAG_NIL':\n      return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n\n    case -1:\n    case 'UNRECOGNIZED':\n    default:\n      return BlockIDFlag.UNRECOGNIZED;\n  }\n}\n\nexports.blockIDFlagFromJSON = blockIDFlagFromJSON;\n\nfunction blockIDFlagToJSON(object) {\n  switch (object) {\n    case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n      return 'BLOCK_ID_FLAG_UNKNOWN';\n\n    case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n      return 'BLOCK_ID_FLAG_ABSENT';\n\n    case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n      return 'BLOCK_ID_FLAG_COMMIT';\n\n    case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n      return 'BLOCK_ID_FLAG_NIL';\n\n    default:\n      return 'UNKNOWN';\n  }\n}\n\nexports.blockIDFlagToJSON = blockIDFlagToJSON;\n/** SignedMsgType is a type of signed message in the consensus. */\n\nvar SignedMsgType;\n\n(function (SignedMsgType) {\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n  /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n  /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n\n  SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n  SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType = exports.SignedMsgType || (exports.SignedMsgType = {}));\n\nfunction signedMsgTypeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case 'SIGNED_MSG_TYPE_UNKNOWN':\n      return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n\n    case 1:\n    case 'SIGNED_MSG_TYPE_PREVOTE':\n      return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n\n    case 2:\n    case 'SIGNED_MSG_TYPE_PRECOMMIT':\n      return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n\n    case 32:\n    case 'SIGNED_MSG_TYPE_PROPOSAL':\n      return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n\n    case -1:\n    case 'UNRECOGNIZED':\n    default:\n      return SignedMsgType.UNRECOGNIZED;\n  }\n}\n\nexports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;\n\nfunction signedMsgTypeToJSON(object) {\n  switch (object) {\n    case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n      return 'SIGNED_MSG_TYPE_UNKNOWN';\n\n    case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n      return 'SIGNED_MSG_TYPE_PREVOTE';\n\n    case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n      return 'SIGNED_MSG_TYPE_PRECOMMIT';\n\n    case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n      return 'SIGNED_MSG_TYPE_PROPOSAL';\n\n    default:\n      return 'UNKNOWN';\n  }\n}\n\nexports.signedMsgTypeToJSON = signedMsgTypeToJSON;\nconst basePartSetHeader = {\n  total: 0\n};\nexports.PartSetHeader = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.total !== 0) {\n      writer.uint32(8).uint32(message.total);\n    }\n\n    if (message.hash.length !== 0) {\n      writer.uint32(18).bytes(message.hash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePartSetHeader);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.uint32();\n          break;\n\n        case 2:\n          message.hash = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, basePartSetHeader);\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = Number(object.total);\n    } else {\n      message.total = 0;\n    }\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = bytesFromBase64(object.hash);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = message.total);\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, basePartSetHeader);\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = object.total;\n    } else {\n      message.total = 0;\n    }\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst basePart = {\n  index: 0\n};\nexports.Part = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.index !== 0) {\n      writer.uint32(8).uint32(message.index);\n    }\n\n    if (message.bytes.length !== 0) {\n      writer.uint32(18).bytes(message.bytes);\n    }\n\n    if (message.proof !== undefined) {\n      proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePart);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.index = reader.uint32();\n          break;\n\n        case 2:\n          message.bytes = reader.bytes();\n          break;\n\n        case 3:\n          message.proof = proof_1.Proof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, basePart);\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = Number(object.index);\n    } else {\n      message.index = 0;\n    }\n\n    if (object.bytes !== undefined && object.bytes !== null) {\n      message.bytes = bytesFromBase64(object.bytes);\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = proof_1.Proof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.index !== undefined && (obj.index = message.index);\n    message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, basePart);\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = object.index;\n    } else {\n      message.index = 0;\n    }\n\n    if (object.bytes !== undefined && object.bytes !== null) {\n      message.bytes = object.bytes;\n    } else {\n      message.bytes = new Uint8Array();\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = proof_1.Proof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseBlockID = {};\nexports.BlockID = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n\n    if (message.partSetHeader !== undefined) {\n      exports.PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBlockID);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n\n        case 2:\n          message.partSetHeader = exports.PartSetHeader.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseBlockID);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = bytesFromBase64(object.hash);\n    }\n\n    if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n      message.partSetHeader = exports.PartSetHeader.fromJSON(object.partSetHeader);\n    } else {\n      message.partSetHeader = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? exports.PartSetHeader.toJSON(message.partSetHeader) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseBlockID);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = new Uint8Array();\n    }\n\n    if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n      message.partSetHeader = exports.PartSetHeader.fromPartial(object.partSetHeader);\n    } else {\n      message.partSetHeader = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseHeader = {\n  chainId: '',\n  height: long_1.default.ZERO\n};\nexports.Header = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.version !== undefined) {\n      types_1.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.chainId !== '') {\n      writer.uint32(18).string(message.chainId);\n    }\n\n    if (!message.height.isZero()) {\n      writer.uint32(24).int64(message.height);\n    }\n\n    if (message.time !== undefined) {\n      timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.lastBlockId !== undefined) {\n      exports.BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.lastCommitHash.length !== 0) {\n      writer.uint32(50).bytes(message.lastCommitHash);\n    }\n\n    if (message.dataHash.length !== 0) {\n      writer.uint32(58).bytes(message.dataHash);\n    }\n\n    if (message.validatorsHash.length !== 0) {\n      writer.uint32(66).bytes(message.validatorsHash);\n    }\n\n    if (message.nextValidatorsHash.length !== 0) {\n      writer.uint32(74).bytes(message.nextValidatorsHash);\n    }\n\n    if (message.consensusHash.length !== 0) {\n      writer.uint32(82).bytes(message.consensusHash);\n    }\n\n    if (message.appHash.length !== 0) {\n      writer.uint32(90).bytes(message.appHash);\n    }\n\n    if (message.lastResultsHash.length !== 0) {\n      writer.uint32(98).bytes(message.lastResultsHash);\n    }\n\n    if (message.evidenceHash.length !== 0) {\n      writer.uint32(106).bytes(message.evidenceHash);\n    }\n\n    if (message.proposerAddress.length !== 0) {\n      writer.uint32(114).bytes(message.proposerAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseHeader);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.version = types_1.Consensus.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.chainId = reader.string();\n          break;\n\n        case 3:\n          message.height = reader.int64();\n          break;\n\n        case 4:\n          message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.lastBlockId = exports.BlockID.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.lastCommitHash = reader.bytes();\n          break;\n\n        case 7:\n          message.dataHash = reader.bytes();\n          break;\n\n        case 8:\n          message.validatorsHash = reader.bytes();\n          break;\n\n        case 9:\n          message.nextValidatorsHash = reader.bytes();\n          break;\n\n        case 10:\n          message.consensusHash = reader.bytes();\n          break;\n\n        case 11:\n          message.appHash = reader.bytes();\n          break;\n\n        case 12:\n          message.lastResultsHash = reader.bytes();\n          break;\n\n        case 13:\n          message.evidenceHash = reader.bytes();\n          break;\n\n        case 14:\n          message.proposerAddress = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseHeader);\n\n    if (object.version !== undefined && object.version !== null) {\n      message.version = types_1.Consensus.fromJSON(object.version);\n    } else {\n      message.version = undefined;\n    }\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = String(object.chainId);\n    } else {\n      message.chainId = '';\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = long_1.default.fromString(object.height);\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.time !== undefined && object.time !== null) {\n      message.time = fromJsonTimestamp(object.time);\n    } else {\n      message.time = undefined;\n    }\n\n    if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n      message.lastBlockId = exports.BlockID.fromJSON(object.lastBlockId);\n    } else {\n      message.lastBlockId = undefined;\n    }\n\n    if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n      message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n    }\n\n    if (object.dataHash !== undefined && object.dataHash !== null) {\n      message.dataHash = bytesFromBase64(object.dataHash);\n    }\n\n    if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n      message.validatorsHash = bytesFromBase64(object.validatorsHash);\n    }\n\n    if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n      message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n    }\n\n    if (object.consensusHash !== undefined && object.consensusHash !== null) {\n      message.consensusHash = bytesFromBase64(object.consensusHash);\n    }\n\n    if (object.appHash !== undefined && object.appHash !== null) {\n      message.appHash = bytesFromBase64(object.appHash);\n    }\n\n    if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n      message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n    }\n\n    if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n      message.evidenceHash = bytesFromBase64(object.evidenceHash);\n    }\n\n    if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n      message.proposerAddress = bytesFromBase64(object.proposerAddress);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.version !== undefined && (obj.version = message.version ? types_1.Consensus.toJSON(message.version) : undefined);\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.time !== undefined && (obj.time = message.time !== undefined ? fromTimestamp(message.time).toISOString() : null);\n    message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? exports.BlockID.toJSON(message.lastBlockId) : undefined);\n    message.lastCommitHash !== undefined && (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n    message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n    message.validatorsHash !== undefined && (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n    message.nextValidatorsHash !== undefined && (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n    message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n    message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n    message.lastResultsHash !== undefined && (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n    message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n    message.proposerAddress !== undefined && (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseHeader);\n\n    if (object.version !== undefined && object.version !== null) {\n      message.version = types_1.Consensus.fromPartial(object.version);\n    } else {\n      message.version = undefined;\n    }\n\n    if (object.chainId !== undefined && object.chainId !== null) {\n      message.chainId = object.chainId;\n    } else {\n      message.chainId = '';\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.time !== undefined && object.time !== null) {\n      message.time = timestamp_1.Timestamp.fromPartial(object.time);\n    } else {\n      message.time = undefined;\n    }\n\n    if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n      message.lastBlockId = exports.BlockID.fromPartial(object.lastBlockId);\n    } else {\n      message.lastBlockId = undefined;\n    }\n\n    if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n      message.lastCommitHash = object.lastCommitHash;\n    } else {\n      message.lastCommitHash = new Uint8Array();\n    }\n\n    if (object.dataHash !== undefined && object.dataHash !== null) {\n      message.dataHash = object.dataHash;\n    } else {\n      message.dataHash = new Uint8Array();\n    }\n\n    if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n      message.validatorsHash = object.validatorsHash;\n    } else {\n      message.validatorsHash = new Uint8Array();\n    }\n\n    if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n      message.nextValidatorsHash = object.nextValidatorsHash;\n    } else {\n      message.nextValidatorsHash = new Uint8Array();\n    }\n\n    if (object.consensusHash !== undefined && object.consensusHash !== null) {\n      message.consensusHash = object.consensusHash;\n    } else {\n      message.consensusHash = new Uint8Array();\n    }\n\n    if (object.appHash !== undefined && object.appHash !== null) {\n      message.appHash = object.appHash;\n    } else {\n      message.appHash = new Uint8Array();\n    }\n\n    if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n      message.lastResultsHash = object.lastResultsHash;\n    } else {\n      message.lastResultsHash = new Uint8Array();\n    }\n\n    if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n      message.evidenceHash = object.evidenceHash;\n    } else {\n      message.evidenceHash = new Uint8Array();\n    }\n\n    if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n      message.proposerAddress = object.proposerAddress;\n    } else {\n      message.proposerAddress = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseData = {};\nexports.Data = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.txs) {\n      writer.uint32(10).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseData);\n    message.txs = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.txs.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseData);\n    message.txs = [];\n\n    if (object.txs !== undefined && object.txs !== null) {\n      for (const e of object.txs) {\n        message.txs.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.txs) {\n      obj.txs = message.txs.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.txs = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseData);\n    message.txs = [];\n\n    if (object.txs !== undefined && object.txs !== null) {\n      for (const e of object.txs) {\n        message.txs.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseVote = {\n  type: 0,\n  height: long_1.default.ZERO,\n  round: 0,\n  validatorIndex: 0\n};\nexports.Vote = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n\n    if (message.blockId !== undefined) {\n      exports.BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(50).bytes(message.validatorAddress);\n    }\n\n    if (message.validatorIndex !== 0) {\n      writer.uint32(56).int32(message.validatorIndex);\n    }\n\n    if (message.signature.length !== 0) {\n      writer.uint32(66).bytes(message.signature);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseVote);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.height = reader.int64();\n          break;\n\n        case 3:\n          message.round = reader.int32();\n          break;\n\n        case 4:\n          message.blockId = exports.BlockID.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.validatorAddress = reader.bytes();\n          break;\n\n        case 7:\n          message.validatorIndex = reader.int32();\n          break;\n\n        case 8:\n          message.signature = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseVote);\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = signedMsgTypeFromJSON(object.type);\n    } else {\n      message.type = 0;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = long_1.default.fromString(object.height);\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = Number(object.round);\n    } else {\n      message.round = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromJSON(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = fromJsonTimestamp(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = bytesFromBase64(object.validatorAddress);\n    }\n\n    if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n      message.validatorIndex = Number(object.validatorIndex);\n    } else {\n      message.validatorIndex = 0;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = bytesFromBase64(object.signature);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.round !== undefined && (obj.round = message.round);\n    message.blockId !== undefined && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? fromTimestamp(message.timestamp).toISOString() : null);\n    message.validatorAddress !== undefined && (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n    message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseVote);\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = 0;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = object.round;\n    } else {\n      message.round = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromPartial(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = new Uint8Array();\n    }\n\n    if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n      message.validatorIndex = object.validatorIndex;\n    } else {\n      message.validatorIndex = 0;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseCommit = {\n  height: long_1.default.ZERO,\n  round: 0\n};\nexports.Commit = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (!message.height.isZero()) {\n      writer.uint32(8).int64(message.height);\n    }\n\n    if (message.round !== 0) {\n      writer.uint32(16).int32(message.round);\n    }\n\n    if (message.blockId !== undefined) {\n      exports.BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n    }\n\n    for (const v of message.signatures) {\n      exports.CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommit);\n    message.signatures = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.height = reader.int64();\n          break;\n\n        case 2:\n          message.round = reader.int32();\n          break;\n\n        case 3:\n          message.blockId = exports.BlockID.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.signatures.push(exports.CommitSig.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommit);\n    message.signatures = [];\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = long_1.default.fromString(object.height);\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = Number(object.round);\n    } else {\n      message.round = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromJSON(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.CommitSig.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.round !== undefined && (obj.round = message.round);\n    message.blockId !== undefined && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.CommitSig.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommit);\n    message.signatures = [];\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = object.round;\n    } else {\n      message.round = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromPartial(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(exports.CommitSig.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseCommitSig = {\n  blockIdFlag: 0\n};\nexports.CommitSig = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.blockIdFlag !== 0) {\n      writer.uint32(8).int32(message.blockIdFlag);\n    }\n\n    if (message.validatorAddress.length !== 0) {\n      writer.uint32(18).bytes(message.validatorAddress);\n    }\n\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.signature.length !== 0) {\n      writer.uint32(34).bytes(message.signature);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCommitSig);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.blockIdFlag = reader.int32();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.bytes();\n          break;\n\n        case 3:\n          message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.signature = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCommitSig);\n\n    if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n      message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n    } else {\n      message.blockIdFlag = 0;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = bytesFromBase64(object.validatorAddress);\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = fromJsonTimestamp(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = bytesFromBase64(object.signature);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n    message.validatorAddress !== undefined && (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? fromTimestamp(message.timestamp).toISOString() : null);\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCommitSig);\n\n    if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n      message.blockIdFlag = object.blockIdFlag;\n    } else {\n      message.blockIdFlag = 0;\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = new Uint8Array();\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseProposal = {\n  type: 0,\n  height: long_1.default.ZERO,\n  round: 0,\n  polRound: 0\n};\nexports.Proposal = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.type !== 0) {\n      writer.uint32(8).int32(message.type);\n    }\n\n    if (!message.height.isZero()) {\n      writer.uint32(16).int64(message.height);\n    }\n\n    if (message.round !== 0) {\n      writer.uint32(24).int32(message.round);\n    }\n\n    if (message.polRound !== 0) {\n      writer.uint32(32).int32(message.polRound);\n    }\n\n    if (message.blockId !== undefined) {\n      exports.BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.timestamp !== undefined) {\n      timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(50).fork()).ldelim();\n    }\n\n    if (message.signature.length !== 0) {\n      writer.uint32(58).bytes(message.signature);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProposal);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.int32();\n          break;\n\n        case 2:\n          message.height = reader.int64();\n          break;\n\n        case 3:\n          message.round = reader.int32();\n          break;\n\n        case 4:\n          message.polRound = reader.int32();\n          break;\n\n        case 5:\n          message.blockId = exports.BlockID.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.signature = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProposal);\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = signedMsgTypeFromJSON(object.type);\n    } else {\n      message.type = 0;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = long_1.default.fromString(object.height);\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = Number(object.round);\n    } else {\n      message.round = 0;\n    }\n\n    if (object.polRound !== undefined && object.polRound !== null) {\n      message.polRound = Number(object.polRound);\n    } else {\n      message.polRound = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromJSON(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = fromJsonTimestamp(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = bytesFromBase64(object.signature);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n    message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n    message.round !== undefined && (obj.round = message.round);\n    message.polRound !== undefined && (obj.polRound = message.polRound);\n    message.blockId !== undefined && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n    message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? fromTimestamp(message.timestamp).toISOString() : null);\n    message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseProposal);\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = 0;\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = long_1.default.ZERO;\n    }\n\n    if (object.round !== undefined && object.round !== null) {\n      message.round = object.round;\n    } else {\n      message.round = 0;\n    }\n\n    if (object.polRound !== undefined && object.polRound !== null) {\n      message.polRound = object.polRound;\n    } else {\n      message.polRound = 0;\n    }\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromPartial(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.timestamp !== undefined && object.timestamp !== null) {\n      message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n    } else {\n      message.timestamp = undefined;\n    }\n\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseSignedHeader = {};\nexports.SignedHeader = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.header !== undefined) {\n      exports.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.commit !== undefined) {\n      exports.Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignedHeader);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.header = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.commit = exports.Commit.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignedHeader);\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = exports.Header.fromJSON(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.commit !== undefined && object.commit !== null) {\n      message.commit = exports.Commit.fromJSON(object.commit);\n    } else {\n      message.commit = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.header !== undefined && (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n    message.commit !== undefined && (obj.commit = message.commit ? exports.Commit.toJSON(message.commit) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignedHeader);\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = exports.Header.fromPartial(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.commit !== undefined && object.commit !== null) {\n      message.commit = exports.Commit.fromPartial(object.commit);\n    } else {\n      message.commit = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseLightBlock = {};\nexports.LightBlock = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.signedHeader !== undefined) {\n      exports.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.validatorSet !== undefined) {\n      validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseLightBlock);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signedHeader = exports.SignedHeader.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseLightBlock);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = exports.SignedHeader.fromJSON(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? exports.SignedHeader.toJSON(message.signedHeader) : undefined);\n    message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? validator_1.ValidatorSet.toJSON(message.validatorSet) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseLightBlock);\n\n    if (object.signedHeader !== undefined && object.signedHeader !== null) {\n      message.signedHeader = exports.SignedHeader.fromPartial(object.signedHeader);\n    } else {\n      message.signedHeader = undefined;\n    }\n\n    if (object.validatorSet !== undefined && object.validatorSet !== null) {\n      message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n    } else {\n      message.validatorSet = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseBlockMeta = {\n  blockSize: long_1.default.ZERO,\n  numTxs: long_1.default.ZERO\n};\nexports.BlockMeta = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.blockId !== undefined) {\n      exports.BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (!message.blockSize.isZero()) {\n      writer.uint32(16).int64(message.blockSize);\n    }\n\n    if (message.header !== undefined) {\n      exports.Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (!message.numTxs.isZero()) {\n      writer.uint32(32).int64(message.numTxs);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseBlockMeta);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.blockId = exports.BlockID.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.blockSize = reader.int64();\n          break;\n\n        case 3:\n          message.header = exports.Header.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.numTxs = reader.int64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseBlockMeta);\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromJSON(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.blockSize !== undefined && object.blockSize !== null) {\n      message.blockSize = long_1.default.fromString(object.blockSize);\n    } else {\n      message.blockSize = long_1.default.ZERO;\n    }\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = exports.Header.fromJSON(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.numTxs !== undefined && object.numTxs !== null) {\n      message.numTxs = long_1.default.fromString(object.numTxs);\n    } else {\n      message.numTxs = long_1.default.ZERO;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.blockId !== undefined && (obj.blockId = message.blockId ? exports.BlockID.toJSON(message.blockId) : undefined);\n    message.blockSize !== undefined && (obj.blockSize = (message.blockSize || long_1.default.ZERO).toString());\n    message.header !== undefined && (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n    message.numTxs !== undefined && (obj.numTxs = (message.numTxs || long_1.default.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseBlockMeta);\n\n    if (object.blockId !== undefined && object.blockId !== null) {\n      message.blockId = exports.BlockID.fromPartial(object.blockId);\n    } else {\n      message.blockId = undefined;\n    }\n\n    if (object.blockSize !== undefined && object.blockSize !== null) {\n      message.blockSize = object.blockSize;\n    } else {\n      message.blockSize = long_1.default.ZERO;\n    }\n\n    if (object.header !== undefined && object.header !== null) {\n      message.header = exports.Header.fromPartial(object.header);\n    } else {\n      message.header = undefined;\n    }\n\n    if (object.numTxs !== undefined && object.numTxs !== null) {\n      message.numTxs = object.numTxs;\n    } else {\n      message.numTxs = long_1.default.ZERO;\n    }\n\n    return message;\n  }\n\n};\nconst baseTxProof = {};\nexports.TxProof = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.rootHash.length !== 0) {\n      writer.uint32(10).bytes(message.rootHash);\n    }\n\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n\n    if (message.proof !== undefined) {\n      proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseTxProof);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.rootHash = reader.bytes();\n          break;\n\n        case 2:\n          message.data = reader.bytes();\n          break;\n\n        case 3:\n          message.proof = proof_1.Proof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseTxProof);\n\n    if (object.rootHash !== undefined && object.rootHash !== null) {\n      message.rootHash = bytesFromBase64(object.rootHash);\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = proof_1.Proof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseTxProof);\n\n    if (object.rootHash !== undefined && object.rootHash !== null) {\n      message.rootHash = object.rootHash;\n    } else {\n      message.rootHash = new Uint8Array();\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = object.data;\n    } else {\n      message.data = new Uint8Array();\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = proof_1.Proof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, 'base64').toString('binary'));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, 'binary').toString('base64'));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(''));\n}\n\nfunction toTimestamp(date) {\n  const seconds = numberToLong(date.getTime() / 1000);\n  const nanos = date.getTime() % 1000 * 1000000;\n  return {\n    seconds,\n    nanos\n  };\n}\n\nfunction fromTimestamp(t) {\n  let millis = t.seconds.toNumber() * 1000;\n  millis += t.nanos / 1000000;\n  return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o) {\n  if (o instanceof Date) {\n    return toTimestamp(o);\n  } else if (typeof o === 'string') {\n    return toTimestamp(new Date(o));\n  } else {\n    return timestamp_1.Timestamp.fromJSON(o);\n  }\n}\n\nfunction numberToLong(number) {\n  return long_1.default.fromNumber(number);\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"sources":["../../../../src/codec/tendermint/types/types.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TxProof = exports.BlockMeta = exports.LightBlock = exports.SignedHeader = exports.Proposal = exports.CommitSig = exports.Commit = exports.Vote = exports.Data = exports.Header = exports.BlockID = exports.Part = exports.PartSetHeader = exports.signedMsgTypeToJSON = exports.signedMsgTypeFromJSON = exports.SignedMsgType = exports.blockIDFlagToJSON = exports.blockIDFlagFromJSON = exports.BlockIDFlag = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst proof_1 = require(\"../../tendermint/crypto/proof\");\nconst types_1 = require(\"../../tendermint/version/types\");\nconst long_1 = __importDefault(require(\"long\"));\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\nconst validator_1 = require(\"../../tendermint/types/validator\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nvar BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag = exports.BlockIDFlag || (exports.BlockIDFlag = {}));\nfunction blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexports.blockIDFlagFromJSON = blockIDFlagFromJSON;\nfunction blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexports.blockIDFlagToJSON = blockIDFlagToJSON;\n/** SignedMsgType is a type of signed message in the consensus. */\nvar SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType = exports.SignedMsgType || (exports.SignedMsgType = {}));\nfunction signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexports.signedMsgTypeFromJSON = signedMsgTypeFromJSON;\nfunction signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexports.signedMsgTypeToJSON = signedMsgTypeToJSON;\nconst basePartSetHeader = { total: 0 };\nexports.PartSetHeader = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePartSetHeader);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePartSetHeader);\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePartSetHeader);\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexports.Part = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, basePart);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = proof_1.Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, basePart);\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, basePart);\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexports.BlockID = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            exports.PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseBlockID);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = exports.PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseBlockID);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = exports.PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? exports.PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseBlockID);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = exports.PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: '', height: long_1.default.ZERO };\nexports.Header = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.version !== undefined) {\n            types_1.Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(message.time, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            exports.BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseHeader);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = types_1.Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.time = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.lastBlockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseHeader);\n        if (object.version !== undefined && object.version !== null) {\n            message.version = types_1.Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = exports.BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? types_1.Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined &&\n            (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined\n                    ? fromTimestamp(message.time).toISOString()\n                    : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? exports.BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseHeader);\n        if (object.version !== undefined && object.version !== null) {\n            message.version = types_1.Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = timestamp_1.Timestamp.fromPartial(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = exports.BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexports.Data = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseData);\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseData);\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseData);\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = {\n    type: 0,\n    height: long_1.default.ZERO,\n    round: 0,\n    validatorIndex: 0,\n};\nexports.Vote = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseVote);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = reader.int64();\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseVote);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined &&\n            (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? exports.BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? fromTimestamp(message.timestamp).toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseVote);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: long_1.default.ZERO, round: 0 };\nexports.Commit = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.height.isZero()) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            exports.CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommit);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(exports.CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommit);\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(exports.CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? exports.BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? exports.CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCommit);\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(exports.CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexports.CommitSig = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCommitSig);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCommitSig);\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? fromTimestamp(message.timestamp).toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCommitSig);\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = {\n    type: 0,\n    height: long_1.default.ZERO,\n    round: 0,\n    polRound: 0,\n};\nexports.Proposal = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            timestamp_1.Timestamp.encode(message.timestamp, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseProposal);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = reader.int64();\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = timestamp_1.Timestamp.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseProposal);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined &&\n            (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? exports.BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? fromTimestamp(message.timestamp).toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseProposal);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = timestamp_1.Timestamp.fromPartial(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexports.SignedHeader = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.header !== undefined) {\n            exports.Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSignedHeader);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = exports.Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSignedHeader);\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? exports.Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSignedHeader);\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexports.LightBlock = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            exports.SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            validator_1.ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseLightBlock);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = exports.SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = validator_1.ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseLightBlock);\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = exports.SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? exports.SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? validator_1.ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseLightBlock);\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = exports.SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = validator_1.ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: long_1.default.ZERO, numTxs: long_1.default.ZERO };\nexports.BlockMeta = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.blockId !== undefined) {\n            exports.BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (!message.blockSize.isZero()) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            exports.Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (!message.numTxs.isZero()) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseBlockMeta);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = exports.BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = reader.int64();\n                    break;\n                case 3:\n                    message.header = exports.Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseBlockMeta);\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = long_1.default.fromString(object.blockSize);\n        }\n        else {\n            message.blockSize = long_1.default.ZERO;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = long_1.default.fromString(object.numTxs);\n        }\n        else {\n            message.numTxs = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? exports.BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined &&\n            (obj.blockSize = (message.blockSize || long_1.default.ZERO).toString());\n        message.header !== undefined &&\n            (obj.header = message.header ? exports.Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined &&\n            (obj.numTxs = (message.numTxs || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseBlockMeta);\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = exports.BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = long_1.default.ZERO;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = exports.Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexports.TxProof = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            proof_1.Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseTxProof);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = proof_1.Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseTxProof);\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? proof_1.Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseTxProof);\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = proof_1.Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return toTimestamp(o);\n    }\n    else if (typeof o === 'string') {\n        return toTimestamp(new Date(o));\n    }\n    else {\n        return timestamp_1.Timestamp.fromJSON(o);\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}