{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Plan } from \"../../../../cosmos/upgrade/v1beta1/upgrade\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = {\n  clientId: \"\"\n};\nexport const IdentifiedClientState = {\n  encode(message, writer = Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    if (message.clientState !== undefined) {\n      Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseIdentifiedClientState\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.clientState = Any.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseIdentifiedClientState\n    };\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = Any.fromJSON(object.clientState);\n    } else {\n      message.clientState = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseIdentifiedClientState\n    };\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = Any.fromPartial(object.clientState);\n    } else {\n      message.clientState = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n  encode(message, writer = Writer.create()) {\n    if (message.height !== undefined) {\n      Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.consensusState !== undefined) {\n      Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseConsensusStateWithHeight\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.height = Height.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.consensusState = Any.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseConsensusStateWithHeight\n    };\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = Height.fromJSON(object.height);\n    } else {\n      message.height = undefined;\n    }\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = Any.fromJSON(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseConsensusStateWithHeight\n    };\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = Height.fromPartial(object.height);\n    } else {\n      message.height = undefined;\n    }\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = Any.fromPartial(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseClientConsensusStates = {\n  clientId: \"\"\n};\nexport const ClientConsensusStates = {\n  encode(message, writer = Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    for (const v of message.consensusStates) {\n      ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseClientConsensusStates\n    };\n    message.consensusStates = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseClientConsensusStates\n    };\n    message.consensusStates = [];\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.consensusStates !== undefined && object.consensusStates !== null) {\n      for (const e of object.consensusStates) {\n        message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n\n    if (message.consensusStates) {\n      obj.consensusStates = message.consensusStates.map(e => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n    } else {\n      obj.consensusStates = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseClientConsensusStates\n    };\n    message.consensusStates = [];\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = \"\";\n    }\n\n    if (object.consensusStates !== undefined && object.consensusStates !== null) {\n      for (const e of object.consensusStates) {\n        message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseClientUpdateProposal = {\n  title: \"\",\n  description: \"\",\n  subjectClientId: \"\",\n  substituteClientId: \"\"\n};\nexport const ClientUpdateProposal = {\n  encode(message, writer = Writer.create()) {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n\n    if (message.subjectClientId !== \"\") {\n      writer.uint32(26).string(message.subjectClientId);\n    }\n\n    if (message.substituteClientId !== \"\") {\n      writer.uint32(34).string(message.substituteClientId);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseClientUpdateProposal\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        case 3:\n          message.subjectClientId = reader.string();\n          break;\n\n        case 4:\n          message.substituteClientId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseClientUpdateProposal\n    };\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = String(object.title);\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n      message.subjectClientId = String(object.subjectClientId);\n    } else {\n      message.subjectClientId = \"\";\n    }\n\n    if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n      message.substituteClientId = String(object.substituteClientId);\n    } else {\n      message.substituteClientId = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n    message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseClientUpdateProposal\n    };\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = object.title;\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = object.description;\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n      message.subjectClientId = object.subjectClientId;\n    } else {\n      message.subjectClientId = \"\";\n    }\n\n    if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n      message.substituteClientId = object.substituteClientId;\n    } else {\n      message.substituteClientId = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseUpgradeProposal = {\n  title: \"\",\n  description: \"\"\n};\nexport const UpgradeProposal = {\n  encode(message, writer = Writer.create()) {\n    if (message.title !== \"\") {\n      writer.uint32(10).string(message.title);\n    }\n\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n\n    if (message.plan !== undefined) {\n      Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.upgradedClientState !== undefined) {\n      Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseUpgradeProposal\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.title = reader.string();\n          break;\n\n        case 2:\n          message.description = reader.string();\n          break;\n\n        case 3:\n          message.plan = Plan.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.upgradedClientState = Any.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseUpgradeProposal\n    };\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = String(object.title);\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = String(object.description);\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.plan !== undefined && object.plan !== null) {\n      message.plan = Plan.fromJSON(object.plan);\n    } else {\n      message.plan = undefined;\n    }\n\n    if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n      message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n    } else {\n      message.upgradedClientState = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.title !== undefined && (obj.title = message.title);\n    message.description !== undefined && (obj.description = message.description);\n    message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n    message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseUpgradeProposal\n    };\n\n    if (object.title !== undefined && object.title !== null) {\n      message.title = object.title;\n    } else {\n      message.title = \"\";\n    }\n\n    if (object.description !== undefined && object.description !== null) {\n      message.description = object.description;\n    } else {\n      message.description = \"\";\n    }\n\n    if (object.plan !== undefined && object.plan !== null) {\n      message.plan = Plan.fromPartial(object.plan);\n    } else {\n      message.plan = undefined;\n    }\n\n    if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n      message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n    } else {\n      message.upgradedClientState = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseHeight = {\n  revisionNumber: 0,\n  revisionHeight: 0\n};\nexport const Height = {\n  encode(message, writer = Writer.create()) {\n    if (message.revisionNumber !== 0) {\n      writer.uint32(8).uint64(message.revisionNumber);\n    }\n\n    if (message.revisionHeight !== 0) {\n      writer.uint32(16).uint64(message.revisionHeight);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseHeight\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.revisionNumber = longToNumber(reader.uint64());\n          break;\n\n        case 2:\n          message.revisionHeight = longToNumber(reader.uint64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseHeight\n    };\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = Number(object.revisionNumber);\n    } else {\n      message.revisionNumber = 0;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = Number(object.revisionHeight);\n    } else {\n      message.revisionHeight = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n    message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseHeight\n    };\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = object.revisionNumber;\n    } else {\n      message.revisionNumber = 0;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = object.revisionHeight;\n    } else {\n      message.revisionHeight = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseParams = {\n  allowedClients: \"\"\n};\nexport const Params = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.allowedClients) {\n      writer.uint32(10).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseParams\n    };\n    message.allowedClients = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.allowedClients.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseParams\n    };\n    message.allowedClients = [];\n\n    if (object.allowedClients !== undefined && object.allowedClients !== null) {\n      for (const e of object.allowedClients) {\n        message.allowedClients.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.allowedClients) {\n      obj.allowedClients = message.allowedClients.map(e => e);\n    } else {\n      obj.allowedClients = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseParams\n    };\n    message.allowedClients = [];\n\n    if (object.allowedClients !== undefined && object.allowedClients !== null) {\n      for (const e of object.allowedClients) {\n        message.allowedClients.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js"],"names":["Long","util","configure","Writer","Reader","Any","Plan","protobufPackage","baseIdentifiedClientState","clientId","IdentifiedClientState","encode","message","writer","create","uint32","string","clientState","undefined","fork","ldelim","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseConsensusStateWithHeight","ConsensusStateWithHeight","height","Height","consensusState","baseClientConsensusStates","ClientConsensusStates","v","consensusStates","push","e","map","baseClientUpdateProposal","title","description","subjectClientId","substituteClientId","ClientUpdateProposal","baseUpgradeProposal","UpgradeProposal","plan","upgradedClientState","baseHeight","revisionNumber","revisionHeight","uint64","longToNumber","Number","baseParams","allowedClients","Params","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Plan } from \"../../../../cosmos/upgrade/v1beta1/upgrade\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    subjectClientId: \"\",\n    substituteClientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== \"\") {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== \"\") {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.subjectClientId !== undefined &&\n            object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = \"\";\n        }\n        if (object.substituteClientId !== undefined &&\n            object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.subjectClientId !== undefined &&\n            (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined &&\n            (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.subjectClientId !== undefined &&\n            object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = \"\";\n        }\n        if (object.substituteClientId !== undefined &&\n            object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = \"\";\n        }\n        return message;\n    },\n};\nconst baseUpgradeProposal = { title: \"\", description: \"\" };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined &&\n            object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.plan !== undefined &&\n            (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined &&\n            (obj.upgradedClientState = message.upgradedClientState\n                ? Any.toJSON(message.upgradedClientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined &&\n            object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}