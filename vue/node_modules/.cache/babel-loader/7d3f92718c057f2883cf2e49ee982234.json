{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseParams = {};\nexport const Params = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseParams\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseParams\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseParams\n    };\n    return message;\n  }\n\n};","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/alice/checkers/alice.checkers.checkers/module/types/checkers/params.js"],"names":["Writer","Reader","protobufPackage","baseParams","Params","encode","_","writer","create","decode","input","length","reader","Uint8Array","end","undefined","len","pos","message","tag","uint32","skipType","fromJSON","toJSON","obj","fromPartial"],"mappings":";;;AAAA;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,oBAA/B;AACA,OAAO,MAAMC,eAAe,GAAG,yBAAxB;AACP,MAAMC,UAAU,GAAG,EAAnB;AACA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,MAAM,CAACC,CAAD,EAAIC,MAAM,GAAGP,MAAM,CAACQ,MAAP,EAAb,EAA8B;AAChC,WAAOD,MAAP;AACH,GAHiB;;AAIlBE,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAIZ,MAAJ,CAAWS,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMO,OAAO,GAAG,EAAE,GAAGf;AAAL,KAAhB;;AACA,WAAOS,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMK,GAAG,GAAGP,MAAM,CAACQ,MAAP,EAAZ;;AACA,cAAQD,GAAG,KAAK,CAAhB;AACI;AACIP,UAAAA,MAAM,CAACS,QAAP,CAAgBF,GAAG,GAAG,CAAtB;AACA;AAHR;AAKH;;AACD,WAAOD,OAAP;AACH,GAjBiB;;AAkBlBI,EAAAA,QAAQ,CAAChB,CAAD,EAAI;AACR,UAAMY,OAAO,GAAG,EAAE,GAAGf;AAAL,KAAhB;AACA,WAAOe,OAAP;AACH,GArBiB;;AAsBlBK,EAAAA,MAAM,CAACjB,CAAD,EAAI;AACN,UAAMkB,GAAG,GAAG,EAAZ;AACA,WAAOA,GAAP;AACH,GAzBiB;;AA0BlBC,EAAAA,WAAW,CAACnB,CAAD,EAAI;AACX,UAAMY,OAAO,GAAG,EAAE,GAAGf;AAAL,KAAhB;AACA,WAAOe,OAAP;AACH;;AA7BiB,CAAf","sourcesContent":["/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseParams = {};\nexport const Params = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseParams };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseParams };\n        return message;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}