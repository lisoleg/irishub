{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keyFromWif = keyFromWif;\nexports.keyToWif = keyToWif;\n\nvar _bs = require(\"bs58\");\n\nvar _cryptoJs = _interopRequireDefault(require(\"crypto-js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction keyFromWif(wif) {\n  return (0, _bs.decode)(wif).slice(1, 33);\n}\n\nfunction keyToWif(key) {\n  var versionedkey = new Uint8Array(33);\n  versionedkey.set([128], 0);\n  versionedkey.set(key, 1);\n\n  var words = _cryptoJs[\"default\"].lib.WordArray.create(versionedkey);\n\n  var checksum = Buffer.from(_cryptoJs[\"default\"].SHA256(_cryptoJs[\"default\"].SHA256(words)).toString().substr(0, 8), 'hex');\n  var wif = new Uint8Array(37);\n  wif.set(versionedkey, 0);\n  wif.set(checksum, 33);\n  return (0, _bs.encode)(wif);\n}","map":{"version":3,"sources":["../../src/helpers/keys.js"],"names":["versionedkey","words","CryptoJS","checksum","Buffer","wif"],"mappings":";;;;;;;;;;;;AAAA,IAAA,GAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;;;;;;;AACO,SAAA,UAAA,CAAA,GAAA,EAAyB;AAC/B,SAAO,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,GAAA,EAAA,KAAA,CAAA,CAAA,EAAP,EAAO,CAAP;AACA;;AACM,SAAA,QAAA,CAAA,GAAA,EAAuB;AAC7B,MAAMA,YAAY,GAAG,IAAA,UAAA,CAArB,EAAqB,CAArB;AACAA,EAAAA,YAAY,CAAZA,GAAAA,CAAiB,CAAjBA,GAAiB,CAAjBA,EAAAA,CAAAA;AACAA,EAAAA,YAAY,CAAZA,GAAAA,CAAAA,GAAAA,EAAAA,CAAAA;;AACA,MAAMC,KAAK,GAAGC,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,GAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAAd,YAAcA,CAAd;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAANA,IAAAA,CAAYF,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAAA,CAAgBA,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAAA,CAAhBA,KAAgBA,CAAhBA,EAAAA,QAAAA,GAAAA,MAAAA,CAAAA,CAAAA,EAAZE,CAAYF,CAAZE,EAAjB,KAAiBA,CAAjB;AACA,MAAMC,GAAG,GAAG,IAAA,UAAA,CAAZ,EAAY,CAAZ;AACAA,EAAAA,GAAG,CAAHA,GAAAA,CAAAA,YAAAA,EAAAA,CAAAA;AACAA,EAAAA,GAAG,CAAHA,GAAAA,CAAAA,QAAAA,EAAAA,EAAAA;AACA,SAAO,CAAA,GAAA,GAAA,CAAA,MAAA,EAAP,GAAO,CAAP;AACA","sourcesContent":["import { encode, decode } from 'bs58'\nimport CryptoJS from 'crypto-js'\nexport function keyFromWif(wif) {\n\treturn decode(wif).slice(1, 33)\n}\nexport function keyToWif(key) {\n\tconst versionedkey = new Uint8Array(33)\n\tversionedkey.set([128], 0)\n\tversionedkey.set(key, 1)\n\tconst words = CryptoJS.lib.WordArray.create(versionedkey)\n\tconst checksum = Buffer.from(CryptoJS.SHA256(CryptoJS.SHA256(words)).toString().substr(0, 8), 'hex')\n\tconst wif = new Uint8Array(37)\n\twif.set(versionedkey, 0)\n\twif.set(checksum, 33)\n\treturn encode(wif)\n}\n"]},"metadata":{},"sourceType":"script"}