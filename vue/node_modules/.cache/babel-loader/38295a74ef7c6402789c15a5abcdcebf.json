{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _clientJs = _interopRequireDefault(require(\"@starport/client-js\"));\n\nvar _SpVuexError = _interopRequireDefault(require(\"../../../errors/SpVuexError\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar apiNode = process.env.VUE_APP_API_COSMOS && process.env.VUE_APP_API_COSMOS.replace('0.0.0.0', 'localhost') || 'http://localhost:1317';\nvar rpcNode = process.env.VUE_APP_API_TENDERMINT && process.env.VUE_APP_API_TENDERMINT.replace('0.0.0.0', 'localhost') || 'http://localhost:26657';\nvar wsNode = process.env.VUE_APP_WS_TENDERMINT && process.env.VUE_APP_WS_TENDERMINT.replace('0.0.0.0', 'localhost') || 'ws://localhost:26657/websocket';\nvar addrPrefix = process.env.VUE_APP_ADDRESS_PREFIX || 'cosmos';\nvar _default = {\n  namespaced: true,\n  state: function state() {\n    return {\n      chainId: '',\n      addrPrefix: addrPrefix,\n      sdkVersion: 'Stargate',\n      apiNode: apiNode,\n      rpcNode: rpcNode,\n      wsNode: wsNode,\n      client: null,\n      chainName: '',\n      apiConnected: false,\n      rpcConnected: false,\n      wsConnected: false,\n      getTXApi: '',\n      initialized: false\n    };\n  },\n  getters: {\n    client: function client(state) {\n      return state.client;\n    },\n    signingClient: function signingClient(state) {\n      return state.client.signingClient;\n    },\n    chainId: function chainId(state) {\n      return state.chainId;\n    },\n    chainName: function chainName(state) {\n      return state.chainName;\n    },\n    addrPrefix: function addrPrefix(state) {\n      return state.addrPrefix;\n    },\n    apiTendermint: function apiTendermint(state) {\n      return state.rpcNode;\n    },\n    apiCosmos: function apiCosmos(state) {\n      return state.apiNode;\n    },\n    apiWS: function apiWS(state) {\n      return state.wsNode;\n    },\n    sdkVersion: function sdkVersion(state) {\n      return state.sdkVersion;\n    },\n    apiConnected: function apiConnected(state) {\n      return state.apiConnected;\n    },\n    rpcConnected: function rpcConnected(state) {\n      return state.rpcConnected;\n    },\n    wsConnected: function wsConnected(state) {\n      return state.wsConnected;\n    }\n  },\n  mutations: {\n    SET_CONFIG: function SET_CONFIG(state, config) {\n      state.apiNode = config.apiNode;\n\n      if (config.rpcNode || config.offline) {\n        state.rpcNode = config.rpcNode;\n      }\n\n      if (config.wsNode || config.offline) {\n        state.wsNode = config.wsNode;\n      }\n\n      if (config.chainId || config.offline) {\n        state.chainId = config.chainId;\n      }\n\n      if (config.addrPrefix || config.offline) {\n        state.addrPrefix = config.addrPrefix;\n      }\n\n      if (config.sdkVersion || config.offline) {\n        state.sdkVersion = config.sdkVersion;\n      }\n\n      if (config.getTXApi || config.offline) {\n        state.getTXApi = config.getTXApi;\n      }\n    },\n    CONNECT: function CONNECT(state, _ref) {\n      var client = _ref.client;\n      state.client = client;\n    },\n    INITIALIZE_WS_COMPLETE: function INITIALIZE_WS_COMPLETE(state) {\n      state.initialized = true;\n    },\n    SET_CHAIN_ID: function SET_CHAIN_ID(state, chainId) {\n      state.chainId = chainId;\n    },\n    SET_CHAIN_NAME: function SET_CHAIN_NAME(state, chainName) {\n      state.chainName = chainName;\n    },\n    SET_WS_STATUS: function SET_WS_STATUS(state, status) {\n      state.wsConnected = status;\n    },\n    SET_API_STATUS: function SET_API_STATUS(state, status) {\n      state.apiConnected = status;\n    },\n    SET_RPC_STATUS: function SET_RPC_STATUS(state, status) {\n      state.rpcConnected = status;\n    },\n    SET_TX_API: function SET_TX_API(state, txapi) {\n      state.getTXApi = txapi;\n    }\n  },\n  actions: {\n    init: function init(_ref2) {\n      var _arguments = arguments;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var dispatch, config;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch = _ref2.dispatch;\n                config = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {\n                  starportUrl: 'http://localhost:12345',\n                  apiNode: apiNode,\n                  rpcNode: rpcNode,\n                  wsNode: wsNode,\n                  chainId: '',\n                  addrPrefix: addrPrefix,\n                  chainName: '',\n                  sdkVersion: 'Stargate',\n                  getTXApi: rpcNode + '/tx?hash=0x',\n                  offline: false,\n                  refresh: 5000\n                };\n                _context.prev = 2;\n                _context.next = 5;\n                return dispatch('config', config);\n\n              case 5:\n                console.log('Vuex nodule: common.env initialized!');\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                throw new _SpVuexError[\"default\"]('Env:Config', 'Could not configure environment');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }))();\n    },\n    setTxAPI: function setTxAPI(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit('SET_TX_API', payload);\n    },\n    setConnectivity: function setConnectivity(_ref4, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var commit;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context2.t0 = payload.connection;\n                _context2.next = _context2.t0 === 'ws' ? 4 : _context2.t0 === 'api' ? 6 : _context2.t0 === 'rpc' ? 8 : 10;\n                break;\n\n              case 4:\n                commit('SET_WS_STATUS', payload.status);\n                return _context2.abrupt(\"break\", 10);\n\n              case 6:\n                commit('SET_API_STATUS', payload.status);\n                return _context2.abrupt(\"break\", 10);\n\n              case 8:\n                commit('SET_RPC_STATUS', payload.status);\n                return _context2.abrupt(\"break\", 10);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    signIn: function signIn(_ref5, signer) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var state;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = _ref5.state;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return state.client.useSigner(signer);\n\n              case 4:\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](1);\n                throw new _SpVuexError[\"default\"]('Env:Client:Wallet', 'Could not create signing client with signer: ' + signer);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 6]]);\n      }))();\n    },\n    config: function config(_ref6) {\n      var _arguments2 = arguments;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var commit, state, dispatch, config, client, reconnectWS, reconnectSigningClient, reconnectClient;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref6.commit, state = _ref6.state, dispatch = _ref6.dispatch;\n                config = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : {\n                  apiNode: 'http://localhost:1317',\n                  rpcNode: 'http://localhost:26657',\n                  wsNode: 'ws://localhost:26657/websocket',\n                  chainName: '',\n                  chainId: '',\n                  addrPrefix: '',\n                  sdkVersion: 'Stargate',\n                  offline: false,\n                  refresh: 5000,\n                  getTXApi: 'http://localhost:26657/tx?hash=0x'\n                };\n                _context4.prev = 2;\n\n                if (state.client) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                client = new _clientJs[\"default\"]({\n                  apiAddr: config.apiNode,\n                  rpcAddr: config.rpcNode,\n                  wsAddr: config.wsNode,\n                  offline: config.offline,\n                  refresh: config.refresh\n                });\n                client.setMaxListeners(0);\n                client.on('chain-id', function (id) {\n                  if (id) {\n                    commit('SET_CHAIN_ID', id);\n                  }\n                });\n                client.on('chain-name', function (name) {\n                  if (name) {\n                    commit('SET_CHAIN_NAME', name);\n                  }\n                });\n                client.on('ws-status', function (status) {\n                  return dispatch('setConnectivity', {\n                    connection: 'ws',\n                    status: status\n                  });\n                });\n                client.on('api-status', function (status) {\n                  return dispatch('setConnectivity', {\n                    connection: 'api',\n                    status: status\n                  });\n                });\n                client.on('rpc-status', function (status) {\n                  return dispatch('setConnectivity', {\n                    connection: 'rpc',\n                    status: status\n                  });\n                });\n                commit('SET_CONFIG', config);\n                _context4.next = 14;\n                return dispatch('cosmos.staking.v1beta1/QueryParams', {\n                  options: {\n                    subscribe: false,\n                    all: false\n                  },\n                  params: {},\n                  query: null\n                }, {\n                  root: true\n                });\n\n              case 14:\n                _context4.next = 16;\n                return dispatch('cosmos.bank.v1beta1/QueryTotalSupply', {\n                  options: {\n                    subscribe: false,\n                    all: false\n                  },\n                  params: {},\n                  query: null\n                }, {\n                  root: true\n                });\n\n              case 16:\n                commit('CONNECT', {\n                  client: client\n                });\n                commit('INITIALIZE_WS_COMPLETE');\n                _context4.next = 47;\n                break;\n\n              case 20:\n                client = state.client;\n                reconnectWS = false;\n                reconnectSigningClient = false;\n                reconnectClient = false;\n\n                if (config.wsNode != state.wsNode) {\n                  reconnectWS = true;\n                }\n\n                if (config.rpcNode != state.rpcNode) {\n                  reconnectSigningClient = true;\n                }\n\n                if (config.apiNode != state.apiNode) {\n                  reconnectClient = true;\n                }\n\n                commit('SET_CONFIG', config);\n\n                if (!(reconnectWS && config.wsNode)) {\n                  _context4.next = 37;\n                  break;\n                }\n\n                _context4.prev = 29;\n                _context4.next = 32;\n                return client.switchWS(config.wsNode);\n\n              case 32:\n                _context4.next = 37;\n                break;\n\n              case 34:\n                _context4.prev = 34;\n                _context4.t0 = _context4[\"catch\"](29);\n                throw new _SpVuexError[\"default\"]('Env:Client:Websocket', 'Could not switch to websocket node:' + config.wsNode);\n\n              case 37:\n                if (reconnectClient && config.apiNode) {\n                  client.switchAPI(config.apiNode);\n                }\n\n                if (!(reconnectSigningClient && config.rpcNode)) {\n                  _context4.next = 47;\n                  break;\n                }\n\n                _context4.prev = 39;\n                _context4.next = 42;\n                return client.switchRPC(config.rpcNode);\n\n              case 42:\n                _context4.next = 47;\n                break;\n\n              case 44:\n                _context4.prev = 44;\n                _context4.t1 = _context4[\"catch\"](39);\n                throw new _SpVuexError[\"default\"]('Env:Client:TendermintRPC', 'Could not switch to Tendermint RPC node:' + config.rpcNode);\n\n              case 47:\n                _context4.next = 52;\n                break;\n\n              case 49:\n                _context4.prev = 49;\n                _context4.t2 = _context4[\"catch\"](2);\n                console.error(_context4.t2);\n\n              case 52:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 49], [29, 34], [39, 44]]);\n      }))();\n    }\n  }\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/modules/common/env/env.js"],"names":["apiNode","process","rpcNode","wsNode","addrPrefix","namespaced","state","chainId","sdkVersion","client","chainName","apiConnected","rpcConnected","wsConnected","getTXApi","initialized","getters","signingClient","apiTendermint","apiCosmos","apiWS","mutations","SET_CONFIG","config","CONNECT","INITIALIZE_WS_COMPLETE","SET_CHAIN_ID","SET_CHAIN_NAME","SET_WS_STATUS","SET_API_STATUS","SET_RPC_STATUS","SET_TX_API","actions","init","dispatch","starportUrl","offline","refresh","console","SpVuexError","setTxAPI","commit","setConnectivity","payload","signIn","Client","apiAddr","rpcAddr","wsAddr","connection","status","options","subscribe","all","params","query","root","reconnectWS","reconnectSigningClient","reconnectClient"],"mappings":";;;;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GACXC,OAAO,CAAPA,GAAAA,CAAAA,kBAAAA,IAAkCA,OAAO,CAAPA,GAAAA,CAAAA,kBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAnC,WAAmCA,CAAlCA,IADF,uBAAA;AAGA,IAAMC,OAAO,GACXD,OAAO,CAAPA,GAAAA,CAAAA,sBAAAA,IAAsCA,OAAO,CAAPA,GAAAA,CAAAA,sBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAvC,WAAuCA,CAAtCA,IADF,wBAAA;AAGA,IAAME,MAAM,GACVF,OAAO,CAAPA,GAAAA,CAAAA,qBAAAA,IAAqCA,OAAO,CAAPA,GAAAA,CAAAA,qBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAtC,WAAsCA,CAArCA,IADF,gCAAA;AAGA,IAAMG,UAAU,GAAGH,OAAO,CAAPA,GAAAA,CAAAA,sBAAAA,IAAnB,QAAA;eAEe;AACdI,EAAAA,UAAU,EADI,IAAA;AAEdC,EAAAA,KAFc,EAAA,SAAA,KAAA,GAEN;AACP,WAAO;AACNC,MAAAA,OAAO,EADD,EAAA;AAENH,MAAAA,UAAU,EAFJ,UAAA;AAGNI,MAAAA,UAAU,EAHJ,UAAA;AAINR,MAAAA,OAAO,EAJD,OAAA;AAKNE,MAAAA,OAAO,EALD,OAAA;AAMNC,MAAAA,MAAM,EANA,MAAA;AAONM,MAAAA,MAAM,EAPA,IAAA;AAQNC,MAAAA,SAAS,EARH,EAAA;AASNC,MAAAA,YAAY,EATN,KAAA;AAUNC,MAAAA,YAAY,EAVN,KAAA;AAWNC,MAAAA,WAAW,EAXL,KAAA;AAYNC,MAAAA,QAAQ,EAZF,EAAA;AAaNC,MAAAA,WAAW,EAAE;AAbP,KAAP;AAHa,GAAA;AAmBdC,EAAAA,OAAO,EAAE;AACRP,IAAAA,MAAM,EAAE,SAAA,MAAA,CAAA,KAAA,EAAA;AAAA,aAAWH,KAAK,CAAhB,MAAA;AADA,KAAA;AAERW,IAAAA,aAAa,EAAE,SAAA,aAAA,CAAA,KAAA,EAAA;AAAA,aAAWX,KAAK,CAALA,MAAAA,CAAX,aAAA;AAFP,KAAA;AAGRC,IAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,aAAWD,KAAK,CAAhB,OAAA;AAHD,KAAA;AAIRI,IAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,aAAWJ,KAAK,CAAhB,SAAA;AAJH,KAAA;AAKRF,IAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,aAAWE,KAAK,CAAhB,UAAA;AALJ,KAAA;AAMRY,IAAAA,aAAa,EAAE,SAAA,aAAA,CAAA,KAAA,EAAA;AAAA,aAAWZ,KAAK,CAAhB,OAAA;AANP,KAAA;AAORa,IAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,aAAWb,KAAK,CAAhB,OAAA;AAPH,KAAA;AAQRc,IAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAAA;AAAA,aAAWd,KAAK,CAAhB,MAAA;AARC,KAAA;AASRE,IAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,aAAWF,KAAK,CAAhB,UAAA;AATJ,KAAA;AAURK,IAAAA,YAAY,EAAE,SAAA,YAAA,CAAA,KAAA,EAAA;AAAA,aAAWL,KAAK,CAAhB,YAAA;AAVN,KAAA;AAWRM,IAAAA,YAAY,EAAE,SAAA,YAAA,CAAA,KAAA,EAAA;AAAA,aAAWN,KAAK,CAAhB,YAAA;AAXN,KAAA;AAYRO,IAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,aAAWP,KAAK,CAAhB,WAAA;AAAA;AAZL,GAnBK;AAiCde,EAAAA,SAAS,EAAE;AACVC,IAAAA,UADU,EAAA,SAAA,UAAA,CAAA,KAAA,EAAA,MAAA,EACgB;AACzBhB,MAAAA,KAAK,CAALA,OAAAA,GAAgBiB,MAAM,CAAtBjB,OAAAA;;AACA,UAAIiB,MAAM,CAANA,OAAAA,IAAkBA,MAAM,CAA5B,OAAA,EAAsC;AACrCjB,QAAAA,KAAK,CAALA,OAAAA,GAAgBiB,MAAM,CAAtBjB,OAAAA;AACA;;AACD,UAAIiB,MAAM,CAANA,MAAAA,IAAiBA,MAAM,CAA3B,OAAA,EAAqC;AACpCjB,QAAAA,KAAK,CAALA,MAAAA,GAAeiB,MAAM,CAArBjB,MAAAA;AACA;;AACD,UAAIiB,MAAM,CAANA,OAAAA,IAAkBA,MAAM,CAA5B,OAAA,EAAsC;AACrCjB,QAAAA,KAAK,CAALA,OAAAA,GAAgBiB,MAAM,CAAtBjB,OAAAA;AACA;;AACD,UAAIiB,MAAM,CAANA,UAAAA,IAAqBA,MAAM,CAA/B,OAAA,EAAyC;AACxCjB,QAAAA,KAAK,CAALA,UAAAA,GAAmBiB,MAAM,CAAzBjB,UAAAA;AACA;;AACD,UAAIiB,MAAM,CAANA,UAAAA,IAAqBA,MAAM,CAA/B,OAAA,EAAyC;AACxCjB,QAAAA,KAAK,CAALA,UAAAA,GAAmBiB,MAAM,CAAzBjB,UAAAA;AACA;;AACD,UAAIiB,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAA7B,OAAA,EAAuC;AACtCjB,QAAAA,KAAK,CAALA,QAAAA,GAAiBiB,MAAM,CAAvBjB,QAAAA;AACA;AApBQ,KAAA;AAsBVkB,IAAAA,OAtBU,EAAA,SAAA,OAAA,CAAA,KAAA,EAAA,IAAA,EAsBiB;AAAA,UAAVf,MAAU,GAAA,IAAA,CAAVA,MAAU;AAC1BH,MAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AAvBS,KAAA;AAyBVmB,IAAAA,sBAzBU,EAAA,SAAA,sBAAA,CAAA,KAAA,EAyBoB;AAC7BnB,MAAAA,KAAK,CAALA,WAAAA,GAAAA,IAAAA;AA1BS,KAAA;AA4BVoB,IAAAA,YA5BU,EAAA,SAAA,YAAA,CAAA,KAAA,EAAA,OAAA,EA4BmB;AAC5BpB,MAAAA,KAAK,CAALA,OAAAA,GAAAA,OAAAA;AA7BS,KAAA;AA+BVqB,IAAAA,cA/BU,EAAA,SAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EA+BuB;AAChCrB,MAAAA,KAAK,CAALA,SAAAA,GAAAA,SAAAA;AAhCS,KAAA;AAkCVsB,IAAAA,aAlCU,EAAA,SAAA,aAAA,CAAA,KAAA,EAAA,MAAA,EAkCmB;AAC5BtB,MAAAA,KAAK,CAALA,WAAAA,GAAAA,MAAAA;AAnCS,KAAA;AAqCVuB,IAAAA,cArCU,EAAA,SAAA,cAAA,CAAA,KAAA,EAAA,MAAA,EAqCoB;AAC7BvB,MAAAA,KAAK,CAALA,YAAAA,GAAAA,MAAAA;AAtCS,KAAA;AAwCVwB,IAAAA,cAxCU,EAAA,SAAA,cAAA,CAAA,KAAA,EAAA,MAAA,EAwCoB;AAC7BxB,MAAAA,KAAK,CAALA,YAAAA,GAAAA,MAAAA;AAzCS,KAAA;AA2CVyB,IAAAA,UA3CU,EAAA,SAAA,UAAA,CAAA,KAAA,EAAA,KAAA,EA2Ce;AACxBzB,MAAAA,KAAK,CAALA,QAAAA,GAAAA,KAAAA;AACA;AA7CS,GAjCG;AAgFd0B,EAAAA,OAAO,EAAE;AACFC,IAAAA,IADE,EAAA,SAAA,IAAA,CAAA,KAAA,EAgBN;AAAA,UAAA,UAAA,GAAA,SAAA;AAAA,aAAA,iBAAA,EAAA,aAAA,oBAAA,IAAA,CAAA,SAAA,OAAA,GAAA;AAAA,YAAA,QAAA,EAAA,MAAA;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAdCC,gBAAAA,QAcD,GAAA,KAAA,CAdCA,QAAAA;AACFX,gBAAAA,MAaC,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,IAAA,UAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,UAAA,CAAA,CAAA,CAAA,GAbQ;AACRY,kBAAAA,WAAW,EADH,wBAAA;AAERnC,kBAAAA,OAAO,EAFC,OAAA;AAGRE,kBAAAA,OAAO,EAHC,OAAA;AAIRC,kBAAAA,MAAM,EAJE,MAAA;AAKRI,kBAAAA,OAAO,EALC,EAAA;AAMRH,kBAAAA,UAAU,EANF,UAAA;AAORM,kBAAAA,SAAS,EAPD,EAAA;AAQRF,kBAAAA,UAAU,EARF,UAAA;AASRM,kBAAAA,QAAQ,EAAEZ,OAAO,GATT,aAAA;AAURkC,kBAAAA,OAAO,EAVC,KAAA;AAWRC,kBAAAA,OAAO,EAAE;AAXD,iBAATd;AAaC,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBAEMW,QAAQ,CAAA,QAAA,EAFd,MAEc,CAFd;;AAAA,mBAAA,CAAA;AAGAI,gBAAAA,OAAO,CAAPA,GAAAA,CAAAA,sCAAAA;AAHA,gBAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,CAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,gBAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAAA,sBAKM,IAAIC,YAAAA,CAAJ,SAAIA,CAAJ,CAAA,YAAA,EALN,iCAKM,CALN;;AAAA,mBAAA,EAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA,EAAA;AAhBM,KAAA;AAwBRC,IAAAA,QAxBQ,EAAA,SAAA,QAAA,CAAA,KAAA,EAAA,OAAA,EAwBsB;AAAA,UAAnBC,MAAmB,GAAA,KAAA,CAAnBA,MAAmB;AAC7BA,MAAAA,MAAM,CAAA,YAAA,EAANA,OAAM,CAANA;AAzBO,KAAA;AA2BFC,IAAAA,eA3BE,EAAA,SAAA,eAAA,CAAA,KAAA,EAAA,OAAA,EA2BmC;AAAA,aAAA,iBAAA,EAAA,aAAA,oBAAA,IAAA,CAAA,SAAA,QAAA,GAAA;AAAA,YAAA,MAAA;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAAnBD,gBAAAA,MAAmB,GAAA,KAAA,CAAnBA,MAAAA;AAAmB,gBAAA,SAAA,CAAA,EAAA,GAClCE,OAAO,CAD2B,UAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,EAAA,KAAA,IAAA,GAAA,CAAA,GAAA,SAAA,CAAA,EAAA,KAAA,KAAA,GAAA,CAAA,GAAA,SAAA,CAAA,EAAA,KAAA,KAAA,GAAA,CAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,CAAA;AAGxCF,gBAAAA,MAAM,CAAA,eAAA,EAAkBE,OAAO,CAA/BF,MAAM,CAANA;AAHwC,uBAAA,SAAA,CAAA,MAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;AAAA,mBAAA,CAAA;AAMxCA,gBAAAA,MAAM,CAAA,gBAAA,EAAmBE,OAAO,CAAhCF,MAAM,CAANA;AANwC,uBAAA,SAAA,CAAA,MAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;AAAA,mBAAA,CAAA;AASxCA,gBAAAA,MAAM,CAAA,gBAAA,EAAmBE,OAAO,CAAhCF,MAAM,CAANA;AATwC,uBAAA,SAAA,CAAA,MAAA,CAAA,OAAA,EAAA,EAAA,CAAA;;AAAA,mBAAA,EAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,QAAA,CAAA;AAAA,OAAA,CAAA,CAAA,EAAA;AA3BnC,KAAA;AAwCFG,IAAAA,MAxCE,EAAA,SAAA,MAAA,CAAA,KAAA,EAAA,MAAA,EAwCwB;AAAA,aAAA,iBAAA,EAAA,aAAA,oBAAA,IAAA,CAAA,SAAA,QAAA,GAAA;AAAA,YAAA,KAAA;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAAjBtC,gBAAAA,KAAiB,GAAA,KAAA,CAAjBA,KAAAA;AAAiB,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBAExBA,KAAK,CAALA,MAAAA,CAAAA,SAAAA,CAFwB,MAExBA,CAFwB;;AAAA,mBAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,mBAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AAAA,gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAAA,sBAIxB,IAAIiC,YAAAA,CAAJ,SAAIA,CAAJ,CAAA,mBAAA,EAAqC,kDAJb,MAIxB,CAJwB;;AAAA,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA,EAAA;AAxCxB,KAAA;AA+CFhB,IAAAA,MA/CE,EAAA,SAAA,MAAA,CAAA,KAAA,EA6DN;AAAA,UAAA,WAAA,GAAA,SAAA;AAAA,aAAA,iBAAA,EAAA,aAAA,oBAAA,IAAA,CAAA,SAAA,QAAA,GAAA;AAAA,YAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,sBAAA,EAAA,eAAA;AAAA,eAAA,oBAAA,IAAA,CAAA,SAAA,SAAA,CAAA,SAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAbCkB,gBAAAA,MAaD,GAAA,KAAA,CAbCA,MAAAA,EAAQnC,KAaT,GAAA,KAAA,CAbSA,KAARmC,EAAeP,QAahB,GAAA,KAAA,CAbgBA,QAAfO;AACFlB,gBAAAA,MAYC,GAAA,WAAA,CAAA,MAAA,GAAA,CAAA,IAAA,WAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,WAAA,CAAA,CAAA,CAAA,GAZQ;AACRvB,kBAAAA,OAAO,EADC,uBAAA;AAERE,kBAAAA,OAAO,EAFC,wBAAA;AAGRC,kBAAAA,MAAM,EAHE,gCAAA;AAIRO,kBAAAA,SAAS,EAJD,EAAA;AAKRH,kBAAAA,OAAO,EALC,EAAA;AAMRH,kBAAAA,UAAU,EANF,EAAA;AAORI,kBAAAA,UAAU,EAPF,UAAA;AAQR4B,kBAAAA,OAAO,EARC,KAAA;AASRC,kBAAAA,OAAO,EATC,IAAA;AAURvB,kBAAAA,QAAQ,EAAE;AAVF,iBAATS;AAYC,gBAAA,SAAA,CAAA,IAAA,GAAA,CAAA;;AAAA,oBAGKjB,KAAK,CAHV,MAAA,EAAA;AAAA,kBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;AAAA;;AAICG,gBAAAA,MAAM,GAAG,IAAIoC,SAAAA,CAAJ,SAAIA,CAAJ,CAAW;AACnBC,kBAAAA,OAAO,EAAEvB,MAAM,CADI,OAAA;AAEnBwB,kBAAAA,OAAO,EAAExB,MAAM,CAFI,OAAA;AAGnByB,kBAAAA,MAAM,EAAEzB,MAAM,CAHK,MAAA;AAInBa,kBAAAA,OAAO,EAAEb,MAAM,CAJI,OAAA;AAKnBc,kBAAAA,OAAO,EAAEd,MAAM,CAACc;AALG,iBAAX,CAAT5B;AAOAA,gBAAAA,MAAM,CAANA,eAAAA,CAAAA,CAAAA;AACAA,gBAAAA,MAAM,CAANA,EAAAA,CAAAA,UAAAA,EAAsB,UAAA,EAAA,EAAQ;AAC7B,sBAAA,EAAA,EAAQ;AACPgC,oBAAAA,MAAM,CAAA,cAAA,EAANA,EAAM,CAANA;AACA;AAHFhC,iBAAAA;AAKAA,gBAAAA,MAAM,CAANA,EAAAA,CAAAA,YAAAA,EAAwB,UAAA,IAAA,EAAU;AACjC,sBAAA,IAAA,EAAU;AACTgC,oBAAAA,MAAM,CAAA,gBAAA,EAANA,IAAM,CAANA;AACA;AAHFhC,iBAAAA;AAKAA,gBAAAA,MAAM,CAANA,EAAAA,CAAAA,WAAAA,EAAuB,UAAA,MAAA,EAAA;AAAA,yBAAYyB,QAAQ,CAAA,iBAAA,EAAoB;AAAEe,oBAAAA,UAAU,EAAZ,IAAA;AAAoBC,oBAAAA,MAAM,EAAEA;AAA5B,mBAApB,CAApB;AAAvBzC,iBAAAA;AACAA,gBAAAA,MAAM,CAANA,EAAAA,CAAAA,YAAAA,EAAwB,UAAA,MAAA,EAAA;AAAA,yBAAYyB,QAAQ,CAAA,iBAAA,EAAoB;AAAEe,oBAAAA,UAAU,EAAZ,KAAA;AAAqBC,oBAAAA,MAAM,EAAEA;AAA7B,mBAApB,CAApB;AAAxBzC,iBAAAA;AACAA,gBAAAA,MAAM,CAANA,EAAAA,CAAAA,YAAAA,EAAwB,UAAA,MAAA,EAAA;AAAA,yBAAYyB,QAAQ,CAAA,iBAAA,EAAoB;AAAEe,oBAAAA,UAAU,EAAZ,KAAA;AAAqBC,oBAAAA,MAAM,EAAEA;AAA7B,mBAApB,CAApB;AAAxBzC,iBAAAA;AACAgC,gBAAAA,MAAM,CAAA,YAAA,EAANA,MAAM,CAANA;AAzBD,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,uBA0BOP,QAAQ,CAAA,oCAAA,EAEb;AACCiB,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,SAAS,EAAX,KAAA;AAAoBC,oBAAAA,GAAG,EAAE;AAAzB,mBADV;AAECC,kBAAAA,MAAM,EAFP,EAAA;AAGCC,kBAAAA,KAAK,EAAE;AAHR,iBAFa,EAOb;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAPa,CA1Bf;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,uBAmCOtB,QAAQ,CAAA,sCAAA,EAEb;AACCiB,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,SAAS,EAAX,KAAA;AAAoBC,oBAAAA,GAAG,EAAE;AAAzB,mBADV;AAECC,kBAAAA,MAAM,EAFP,EAAA;AAGCC,kBAAAA,KAAK,EAAE;AAHR,iBAFa,EAOb;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAPa,CAnCf;;AAAA,mBAAA,EAAA;AA4CCf,gBAAAA,MAAM,CAAA,SAAA,EAAY;AAAEhC,kBAAAA,MAAM,EAANA;AAAF,iBAAZ,CAANgC;AACAA,gBAAAA,MAAM,CAANA,wBAAM,CAANA;AA7CD,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AA+CChC,gBAAAA,MAAM,GAAGH,KAAK,CAAdG,MAAAA;AACIgD,gBAAAA,WAhDL,GAAA,KAgDKA;AACAC,gBAAAA,sBAjDL,GAAA,KAiDKA;AACAC,gBAAAA,eAlDL,GAAA,KAkDKA;;AACJ,oBAAIpC,MAAM,CAANA,MAAAA,IAAiBjB,KAAK,CAA1B,MAAA,EAAmC;AAClCmD,kBAAAA,WAAW,GAAXA,IAAAA;AACA;;AACD,oBAAIlC,MAAM,CAANA,OAAAA,IAAkBjB,KAAK,CAA3B,OAAA,EAAqC;AACpCoD,kBAAAA,sBAAsB,GAAtBA,IAAAA;AACA;;AACD,oBAAInC,MAAM,CAANA,OAAAA,IAAkBjB,KAAK,CAA3B,OAAA,EAAqC;AACpCqD,kBAAAA,eAAe,GAAfA,IAAAA;AACA;;AACDlB,gBAAAA,MAAM,CAAA,YAAA,EAANA,MAAM,CAANA;;AA5DD,oBAAA,EA8DKgB,WAAW,IAAIlC,MAAM,CA9D1B,MAAA,CAAA,EAAA;AAAA,kBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;AAAA;;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,uBAgESd,MAAM,CAANA,QAAAA,CAAgBc,MAAM,CAhE/B,MAgESd,CAhET;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AAAA,sBAkES,IAAI8B,YAAAA,CAAJ,SAAIA,CAAJ,CAAA,sBAAA,EAAwC,wCAAwChB,MAAM,CAlE/F,MAkES,CAlET;;AAAA,mBAAA,EAAA;AAqEC,oBAAIoC,eAAe,IAAIpC,MAAM,CAA7B,OAAA,EAAuC;AACtCd,kBAAAA,MAAM,CAANA,SAAAA,CAAiBc,MAAM,CAAvBd,OAAAA;AACA;;AAvEF,oBAAA,EAwEKiD,sBAAsB,IAAInC,MAAM,CAxErC,OAAA,CAAA,EAAA;AAAA,kBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;AAAA;;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,uBA0ESd,MAAM,CAANA,SAAAA,CAAiBc,MAAM,CA1EhC,OA0ESd,CA1ET;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA;AAAA,sBA4ES,IAAI8B,YAAAA,CAAJ,SAAIA,CAAJ,CAAA,0BAAA,EAEL,6CAA6ChB,MAAM,CA9EvD,OA4ES,CA5ET;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,SAAA,CAAA,EAAA,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAoFAe,gBAAAA,OAAO,CAAPA,KAAAA,CAAAA,SAAAA,CAAAA,EAAAA;;AApFA,mBAAA,EAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA,EAAA;AAsFD;AAnJO;AAhFK,C","sourcesContent":["import Client from '@starport/client-js'\nimport SpVuexError from '../../../errors/SpVuexError'\n\nconst apiNode =\n\t(process.env.VUE_APP_API_COSMOS && process.env.VUE_APP_API_COSMOS.replace('0.0.0.0', 'localhost')) ||\n\t'http://localhost:1317'\nconst rpcNode =\n\t(process.env.VUE_APP_API_TENDERMINT && process.env.VUE_APP_API_TENDERMINT.replace('0.0.0.0', 'localhost')) ||\n\t'http://localhost:26657'\nconst wsNode =\n\t(process.env.VUE_APP_WS_TENDERMINT && process.env.VUE_APP_WS_TENDERMINT.replace('0.0.0.0', 'localhost')) ||\n\t'ws://localhost:26657/websocket'\nconst addrPrefix = process.env.VUE_APP_ADDRESS_PREFIX || 'cosmos'\n\nexport default {\n\tnamespaced: true,\n\tstate() {\n\t\treturn {\n\t\t\tchainId: '',\n\t\t\taddrPrefix: addrPrefix,\n\t\t\tsdkVersion: 'Stargate',\n\t\t\tapiNode: apiNode,\n\t\t\trpcNode: rpcNode,\n\t\t\twsNode: wsNode,\n\t\t\tclient: null,\n\t\t\tchainName: '',\n\t\t\tapiConnected: false,\n\t\t\trpcConnected: false,\n\t\t\twsConnected: false,\n\t\t\tgetTXApi: '',\n\t\t\tinitialized: false,\n\t\t}\n\t},\n\tgetters: {\n\t\tclient: (state) => state.client,\n\t\tsigningClient: (state) => state.client.signingClient,\n\t\tchainId: (state) => state.chainId,\n\t\tchainName: (state) => state.chainName,\n\t\taddrPrefix: (state) => state.addrPrefix,\n\t\tapiTendermint: (state) => state.rpcNode,\n\t\tapiCosmos: (state) => state.apiNode,\n\t\tapiWS: (state) => state.wsNode,\n\t\tsdkVersion: (state) => state.sdkVersion,\n\t\tapiConnected: (state) => state.apiConnected,\n\t\trpcConnected: (state) => state.rpcConnected,\n\t\twsConnected: (state) => state.wsConnected,\n\t},\n\tmutations: {\n\t\tSET_CONFIG(state, config) {\n\t\t\tstate.apiNode = config.apiNode\n\t\t\tif (config.rpcNode || config.offline) {\n\t\t\t\tstate.rpcNode = config.rpcNode\n\t\t\t}\n\t\t\tif (config.wsNode || config.offline) {\n\t\t\t\tstate.wsNode = config.wsNode\n\t\t\t}\n\t\t\tif (config.chainId || config.offline) {\n\t\t\t\tstate.chainId = config.chainId\n\t\t\t}\n\t\t\tif (config.addrPrefix || config.offline) {\n\t\t\t\tstate.addrPrefix = config.addrPrefix\n\t\t\t}\n\t\t\tif (config.sdkVersion || config.offline) {\n\t\t\t\tstate.sdkVersion = config.sdkVersion\n\t\t\t}\n\t\t\tif (config.getTXApi || config.offline) {\n\t\t\t\tstate.getTXApi = config.getTXApi\n\t\t\t}\n\t\t},\n\t\tCONNECT(state, { client }) {\n\t\t\tstate.client = client\n\t\t},\n\t\tINITIALIZE_WS_COMPLETE(state) {\n\t\t\tstate.initialized = true\n\t\t},\n\t\tSET_CHAIN_ID(state, chainId) {\n\t\t\tstate.chainId = chainId\n\t\t},\n\t\tSET_CHAIN_NAME(state, chainName) {\n\t\t\tstate.chainName = chainName\n\t\t},\n\t\tSET_WS_STATUS(state, status) {\n\t\t\tstate.wsConnected = status\n\t\t},\n\t\tSET_API_STATUS(state, status) {\n\t\t\tstate.apiConnected = status\n\t\t},\n\t\tSET_RPC_STATUS(state, status) {\n\t\t\tstate.rpcConnected = status\n\t\t},\n\t\tSET_TX_API(state, txapi) {\n\t\t\tstate.getTXApi = txapi\n\t\t},\n\t},\n\tactions: {\n\t\tasync init(\n\t\t\t{ dispatch },\n\t\t\tconfig = {\n\t\t\t\tstarportUrl: 'http://localhost:12345',\n\t\t\t\tapiNode: apiNode,\n\t\t\t\trpcNode: rpcNode,\n\t\t\t\twsNode: wsNode,\n\t\t\t\tchainId: '',\n\t\t\t\taddrPrefix: addrPrefix,\n\t\t\t\tchainName: '',\n\t\t\t\tsdkVersion: 'Stargate',\n\t\t\t\tgetTXApi: rpcNode + '/tx?hash=0x',\n\t\t\t\toffline: false,\n\t\t\t\trefresh: 5000,\n\t\t\t},\n\t\t) {\n\t\t\ttry {\n\t\t\t\tawait dispatch('config', config)\n\t\t\t\tconsole.log('Vuex nodule: common.env initialized!')\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('Env:Config', 'Could not configure environment')\n\t\t\t}\n\t\t},\n\t\tsetTxAPI({ commit }, payload) {\n\t\t\tcommit('SET_TX_API', payload)\n\t\t},\n\t\tasync setConnectivity({ commit }, payload) {\n\t\t\tswitch (payload.connection) {\n\t\t\t\tcase 'ws':\n\t\t\t\t\tcommit('SET_WS_STATUS', payload.status)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'api':\n\t\t\t\t\tcommit('SET_API_STATUS', payload.status)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'rpc':\n\t\t\t\t\tcommit('SET_RPC_STATUS', payload.status)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t},\n\t\tasync signIn({ state }, signer) {\n\t\t\ttry {\n\t\t\t\tawait state.client.useSigner(signer)\n\t\t\t} catch (e) {\n\t\t\t\tthrow new SpVuexError('Env:Client:Wallet', 'Could not create signing client with signer: ' + signer)\n\t\t\t}\n\t\t},\n\t\tasync config(\n\t\t\t{ commit, state, dispatch },\n\t\t\tconfig = {\n\t\t\t\tapiNode: 'http://localhost:1317',\n\t\t\t\trpcNode: 'http://localhost:26657',\n\t\t\t\twsNode: 'ws://localhost:26657/websocket',\n\t\t\t\tchainName: '',\n\t\t\t\tchainId: '',\n\t\t\t\taddrPrefix: '',\n\t\t\t\tsdkVersion: 'Stargate',\n\t\t\t\toffline: false,\n\t\t\t\trefresh: 5000,\n\t\t\t\tgetTXApi: 'http://localhost:26657/tx?hash=0x',\n\t\t\t},\n\t\t) {\n\t\t\ttry {\n\t\t\t\tlet client\n\t\t\t\tif (!state.client) {\n\t\t\t\t\tclient = new Client({\n\t\t\t\t\t\tapiAddr: config.apiNode,\n\t\t\t\t\t\trpcAddr: config.rpcNode,\n\t\t\t\t\t\twsAddr: config.wsNode,\n\t\t\t\t\t\toffline: config.offline,\n\t\t\t\t\t\trefresh: config.refresh,\n\t\t\t\t\t})\n\t\t\t\t\tclient.setMaxListeners(0)\n\t\t\t\t\tclient.on('chain-id', (id) => {\n\t\t\t\t\t\tif (id) {\n\t\t\t\t\t\t\tcommit('SET_CHAIN_ID', id)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tclient.on('chain-name', (name) => {\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tcommit('SET_CHAIN_NAME', name)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tclient.on('ws-status', (status) => dispatch('setConnectivity', { connection: 'ws', status: status }))\n\t\t\t\t\tclient.on('api-status', (status) => dispatch('setConnectivity', { connection: 'api', status: status }))\n\t\t\t\t\tclient.on('rpc-status', (status) => dispatch('setConnectivity', { connection: 'rpc', status: status }))\n\t\t\t\t\tcommit('SET_CONFIG', config)\n\t\t\t\t\tawait dispatch(\n\t\t\t\t\t\t'cosmos.staking.v1beta1/QueryParams',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toptions: { subscribe: false, all: false },\n\t\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\t\tquery: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ root: true },\n\t\t\t\t\t)\n\t\t\t\t\tawait dispatch(\n\t\t\t\t\t\t'cosmos.bank.v1beta1/QueryTotalSupply',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toptions: { subscribe: false, all: false },\n\t\t\t\t\t\t\tparams: {},\n\t\t\t\t\t\t\tquery: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ root: true },\n\t\t\t\t\t)\n\t\t\t\t\tcommit('CONNECT', { client })\n\t\t\t\t\tcommit('INITIALIZE_WS_COMPLETE')\n\t\t\t\t} else {\n\t\t\t\t\tclient = state.client\n\t\t\t\t\tlet reconnectWS = false\n\t\t\t\t\tlet reconnectSigningClient = false\n\t\t\t\t\tlet reconnectClient = false\n\t\t\t\t\tif (config.wsNode != state.wsNode) {\n\t\t\t\t\t\treconnectWS = true\n\t\t\t\t\t}\n\t\t\t\t\tif (config.rpcNode != state.rpcNode) {\n\t\t\t\t\t\treconnectSigningClient = true\n\t\t\t\t\t}\n\t\t\t\t\tif (config.apiNode != state.apiNode) {\n\t\t\t\t\t\treconnectClient = true\n\t\t\t\t\t}\n\t\t\t\t\tcommit('SET_CONFIG', config)\n\n\t\t\t\t\tif (reconnectWS && config.wsNode) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait client.switchWS(config.wsNode)\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new SpVuexError('Env:Client:Websocket', 'Could not switch to websocket node:' + config.wsNode)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (reconnectClient && config.apiNode) {\n\t\t\t\t\t\tclient.switchAPI(config.apiNode)\n\t\t\t\t\t}\n\t\t\t\t\tif (reconnectSigningClient && config.rpcNode) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait client.switchRPC(config.rpcNode)\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t\t\t\t'Env:Client:TendermintRPC',\n\t\t\t\t\t\t\t\t'Could not switch to Tendermint RPC node:' + config.rpcNode,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t},\n\t},\n}\n"]},"metadata":{},"sourceType":"script"}