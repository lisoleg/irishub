{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseMsgCreateGame = {\n  creator: \"\",\n  red: \"\",\n  black: \"\",\n  wager: 0,\n  token: \"\"\n};\nexport const MsgCreateGame = {\n  encode(message, writer = Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n\n    if (message.red !== \"\") {\n      writer.uint32(18).string(message.red);\n    }\n\n    if (message.black !== \"\") {\n      writer.uint32(26).string(message.black);\n    }\n\n    if (message.wager !== 0) {\n      writer.uint32(32).uint64(message.wager);\n    }\n\n    if (message.token !== \"\") {\n      writer.uint32(42).string(message.token);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgCreateGame\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n\n        case 2:\n          message.red = reader.string();\n          break;\n\n        case 3:\n          message.black = reader.string();\n          break;\n\n        case 4:\n          message.wager = longToNumber(reader.uint64());\n          break;\n\n        case 5:\n          message.token = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgCreateGame\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.red !== undefined && object.red !== null) {\n      message.red = String(object.red);\n    } else {\n      message.red = \"\";\n    }\n\n    if (object.black !== undefined && object.black !== null) {\n      message.black = String(object.black);\n    } else {\n      message.black = \"\";\n    }\n\n    if (object.wager !== undefined && object.wager !== null) {\n      message.wager = Number(object.wager);\n    } else {\n      message.wager = 0;\n    }\n\n    if (object.token !== undefined && object.token !== null) {\n      message.token = String(object.token);\n    } else {\n      message.token = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.red !== undefined && (obj.red = message.red);\n    message.black !== undefined && (obj.black = message.black);\n    message.wager !== undefined && (obj.wager = message.wager);\n    message.token !== undefined && (obj.token = message.token);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgCreateGame\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.red !== undefined && object.red !== null) {\n      message.red = object.red;\n    } else {\n      message.red = \"\";\n    }\n\n    if (object.black !== undefined && object.black !== null) {\n      message.black = object.black;\n    } else {\n      message.black = \"\";\n    }\n\n    if (object.wager !== undefined && object.wager !== null) {\n      message.wager = object.wager;\n    } else {\n      message.wager = 0;\n    }\n\n    if (object.token !== undefined && object.token !== null) {\n      message.token = object.token;\n    } else {\n      message.token = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgCreateGameResponse = {\n  idValue: \"\"\n};\nexport const MsgCreateGameResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.idValue !== \"\") {\n      writer.uint32(10).string(message.idValue);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgCreateGameResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.idValue = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgCreateGameResponse\n    };\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = String(object.idValue);\n    } else {\n      message.idValue = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.idValue !== undefined && (obj.idValue = message.idValue);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgCreateGameResponse\n    };\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = object.idValue;\n    } else {\n      message.idValue = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgPlayMove = {\n  creator: \"\",\n  idValue: \"\",\n  fromX: 0,\n  fromY: 0,\n  toX: 0,\n  toY: 0\n};\nexport const MsgPlayMove = {\n  encode(message, writer = Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n\n    if (message.idValue !== \"\") {\n      writer.uint32(18).string(message.idValue);\n    }\n\n    if (message.fromX !== 0) {\n      writer.uint32(24).uint64(message.fromX);\n    }\n\n    if (message.fromY !== 0) {\n      writer.uint32(32).uint64(message.fromY);\n    }\n\n    if (message.toX !== 0) {\n      writer.uint32(40).uint64(message.toX);\n    }\n\n    if (message.toY !== 0) {\n      writer.uint32(48).uint64(message.toY);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgPlayMove\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n\n        case 2:\n          message.idValue = reader.string();\n          break;\n\n        case 3:\n          message.fromX = longToNumber(reader.uint64());\n          break;\n\n        case 4:\n          message.fromY = longToNumber(reader.uint64());\n          break;\n\n        case 5:\n          message.toX = longToNumber(reader.uint64());\n          break;\n\n        case 6:\n          message.toY = longToNumber(reader.uint64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgPlayMove\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = String(object.idValue);\n    } else {\n      message.idValue = \"\";\n    }\n\n    if (object.fromX !== undefined && object.fromX !== null) {\n      message.fromX = Number(object.fromX);\n    } else {\n      message.fromX = 0;\n    }\n\n    if (object.fromY !== undefined && object.fromY !== null) {\n      message.fromY = Number(object.fromY);\n    } else {\n      message.fromY = 0;\n    }\n\n    if (object.toX !== undefined && object.toX !== null) {\n      message.toX = Number(object.toX);\n    } else {\n      message.toX = 0;\n    }\n\n    if (object.toY !== undefined && object.toY !== null) {\n      message.toY = Number(object.toY);\n    } else {\n      message.toY = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.idValue !== undefined && (obj.idValue = message.idValue);\n    message.fromX !== undefined && (obj.fromX = message.fromX);\n    message.fromY !== undefined && (obj.fromY = message.fromY);\n    message.toX !== undefined && (obj.toX = message.toX);\n    message.toY !== undefined && (obj.toY = message.toY);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgPlayMove\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = object.idValue;\n    } else {\n      message.idValue = \"\";\n    }\n\n    if (object.fromX !== undefined && object.fromX !== null) {\n      message.fromX = object.fromX;\n    } else {\n      message.fromX = 0;\n    }\n\n    if (object.fromY !== undefined && object.fromY !== null) {\n      message.fromY = object.fromY;\n    } else {\n      message.fromY = 0;\n    }\n\n    if (object.toX !== undefined && object.toX !== null) {\n      message.toX = object.toX;\n    } else {\n      message.toX = 0;\n    }\n\n    if (object.toY !== undefined && object.toY !== null) {\n      message.toY = object.toY;\n    } else {\n      message.toY = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgPlayMoveResponse = {\n  idValue: \"\",\n  capturedX: 0,\n  capturedY: 0,\n  winner: \"\"\n};\nexport const MsgPlayMoveResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.idValue !== \"\") {\n      writer.uint32(10).string(message.idValue);\n    }\n\n    if (message.capturedX !== 0) {\n      writer.uint32(16).int64(message.capturedX);\n    }\n\n    if (message.capturedY !== 0) {\n      writer.uint32(24).int64(message.capturedY);\n    }\n\n    if (message.winner !== \"\") {\n      writer.uint32(34).string(message.winner);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgPlayMoveResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.idValue = reader.string();\n          break;\n\n        case 2:\n          message.capturedX = longToNumber(reader.int64());\n          break;\n\n        case 3:\n          message.capturedY = longToNumber(reader.int64());\n          break;\n\n        case 4:\n          message.winner = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgPlayMoveResponse\n    };\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = String(object.idValue);\n    } else {\n      message.idValue = \"\";\n    }\n\n    if (object.capturedX !== undefined && object.capturedX !== null) {\n      message.capturedX = Number(object.capturedX);\n    } else {\n      message.capturedX = 0;\n    }\n\n    if (object.capturedY !== undefined && object.capturedY !== null) {\n      message.capturedY = Number(object.capturedY);\n    } else {\n      message.capturedY = 0;\n    }\n\n    if (object.winner !== undefined && object.winner !== null) {\n      message.winner = String(object.winner);\n    } else {\n      message.winner = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.idValue !== undefined && (obj.idValue = message.idValue);\n    message.capturedX !== undefined && (obj.capturedX = message.capturedX);\n    message.capturedY !== undefined && (obj.capturedY = message.capturedY);\n    message.winner !== undefined && (obj.winner = message.winner);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgPlayMoveResponse\n    };\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = object.idValue;\n    } else {\n      message.idValue = \"\";\n    }\n\n    if (object.capturedX !== undefined && object.capturedX !== null) {\n      message.capturedX = object.capturedX;\n    } else {\n      message.capturedX = 0;\n    }\n\n    if (object.capturedY !== undefined && object.capturedY !== null) {\n      message.capturedY = object.capturedY;\n    } else {\n      message.capturedY = 0;\n    }\n\n    if (object.winner !== undefined && object.winner !== null) {\n      message.winner = object.winner;\n    } else {\n      message.winner = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgRejectGame = {\n  creator: \"\",\n  idValue: \"\"\n};\nexport const MsgRejectGame = {\n  encode(message, writer = Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n\n    if (message.idValue !== \"\") {\n      writer.uint32(18).string(message.idValue);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRejectGame\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n\n        case 2:\n          message.idValue = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseMsgRejectGame\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = String(object.idValue);\n    } else {\n      message.idValue = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.idValue !== undefined && (obj.idValue = message.idValue);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseMsgRejectGame\n    };\n\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n\n    if (object.idValue !== undefined && object.idValue !== null) {\n      message.idValue = object.idValue;\n    } else {\n      message.idValue = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseMsgRejectGameResponse = {};\nexport const MsgRejectGameResponse = {\n  encode(_, writer = Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseMsgRejectGameResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = { ...baseMsgRejectGameResponse\n    };\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = { ...baseMsgRejectGameResponse\n    };\n    return message;\n  }\n\n};\nexport class MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  CreateGame(request) {\n    const data = MsgCreateGame.encode(request).finish();\n    const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"CreateGame\", data);\n    return promise.then(data => MsgCreateGameResponse.decode(new Reader(data)));\n  }\n\n  PlayMove(request) {\n    const data = MsgPlayMove.encode(request).finish();\n    const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"PlayMove\", data);\n    return promise.then(data => MsgPlayMoveResponse.decode(new Reader(data)));\n  }\n\n  RejectGame(request) {\n    const data = MsgRejectGame.encode(request).finish();\n    const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"RejectGame\", data);\n    return promise.then(data => MsgRejectGameResponse.decode(new Reader(data)));\n  }\n\n}\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/alice/checkers/alice.checkers.checkers/module/types/checkers/tx.js"],"names":["Reader","util","configure","Writer","Long","protobufPackage","baseMsgCreateGame","creator","red","black","wager","token","MsgCreateGame","encode","message","writer","create","uint32","string","uint64","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","String","Number","toJSON","obj","fromPartial","baseMsgCreateGameResponse","idValue","MsgCreateGameResponse","baseMsgPlayMove","fromX","fromY","toX","toY","MsgPlayMove","baseMsgPlayMoveResponse","capturedX","capturedY","winner","MsgPlayMoveResponse","int64","baseMsgRejectGame","MsgRejectGame","baseMsgRejectGameResponse","MsgRejectGameResponse","_","MsgClientImpl","constructor","rpc","CreateGame","request","data","finish","promise","then","PlayMove","RejectGame","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"alice.checkers.checkers\";\nconst baseMsgCreateGame = {\n    creator: \"\",\n    red: \"\",\n    black: \"\",\n    wager: 0,\n    token: \"\",\n};\nexport const MsgCreateGame = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.red !== \"\") {\n            writer.uint32(18).string(message.red);\n        }\n        if (message.black !== \"\") {\n            writer.uint32(26).string(message.black);\n        }\n        if (message.wager !== 0) {\n            writer.uint32(32).uint64(message.wager);\n        }\n        if (message.token !== \"\") {\n            writer.uint32(42).string(message.token);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateGame };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.red = reader.string();\n                    break;\n                case 3:\n                    message.black = reader.string();\n                    break;\n                case 4:\n                    message.wager = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.token = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateGame };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.red !== undefined && object.red !== null) {\n            message.red = String(object.red);\n        }\n        else {\n            message.red = \"\";\n        }\n        if (object.black !== undefined && object.black !== null) {\n            message.black = String(object.black);\n        }\n        else {\n            message.black = \"\";\n        }\n        if (object.wager !== undefined && object.wager !== null) {\n            message.wager = Number(object.wager);\n        }\n        else {\n            message.wager = 0;\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = String(object.token);\n        }\n        else {\n            message.token = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.red !== undefined && (obj.red = message.red);\n        message.black !== undefined && (obj.black = message.black);\n        message.wager !== undefined && (obj.wager = message.wager);\n        message.token !== undefined && (obj.token = message.token);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateGame };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.red !== undefined && object.red !== null) {\n            message.red = object.red;\n        }\n        else {\n            message.red = \"\";\n        }\n        if (object.black !== undefined && object.black !== null) {\n            message.black = object.black;\n        }\n        else {\n            message.black = \"\";\n        }\n        if (object.wager !== undefined && object.wager !== null) {\n            message.wager = object.wager;\n        }\n        else {\n            message.wager = 0;\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = object.token;\n        }\n        else {\n            message.token = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateGameResponse = { idValue: \"\" };\nexport const MsgCreateGameResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.idValue !== \"\") {\n            writer.uint32(10).string(message.idValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateGameResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.idValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateGameResponse };\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = String(object.idValue);\n        }\n        else {\n            message.idValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.idValue !== undefined && (obj.idValue = message.idValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateGameResponse };\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = object.idValue;\n        }\n        else {\n            message.idValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgPlayMove = {\n    creator: \"\",\n    idValue: \"\",\n    fromX: 0,\n    fromY: 0,\n    toX: 0,\n    toY: 0,\n};\nexport const MsgPlayMove = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.idValue !== \"\") {\n            writer.uint32(18).string(message.idValue);\n        }\n        if (message.fromX !== 0) {\n            writer.uint32(24).uint64(message.fromX);\n        }\n        if (message.fromY !== 0) {\n            writer.uint32(32).uint64(message.fromY);\n        }\n        if (message.toX !== 0) {\n            writer.uint32(40).uint64(message.toX);\n        }\n        if (message.toY !== 0) {\n            writer.uint32(48).uint64(message.toY);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgPlayMove };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.idValue = reader.string();\n                    break;\n                case 3:\n                    message.fromX = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.fromY = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.toX = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.toY = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgPlayMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = String(object.idValue);\n        }\n        else {\n            message.idValue = \"\";\n        }\n        if (object.fromX !== undefined && object.fromX !== null) {\n            message.fromX = Number(object.fromX);\n        }\n        else {\n            message.fromX = 0;\n        }\n        if (object.fromY !== undefined && object.fromY !== null) {\n            message.fromY = Number(object.fromY);\n        }\n        else {\n            message.fromY = 0;\n        }\n        if (object.toX !== undefined && object.toX !== null) {\n            message.toX = Number(object.toX);\n        }\n        else {\n            message.toX = 0;\n        }\n        if (object.toY !== undefined && object.toY !== null) {\n            message.toY = Number(object.toY);\n        }\n        else {\n            message.toY = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.idValue !== undefined && (obj.idValue = message.idValue);\n        message.fromX !== undefined && (obj.fromX = message.fromX);\n        message.fromY !== undefined && (obj.fromY = message.fromY);\n        message.toX !== undefined && (obj.toX = message.toX);\n        message.toY !== undefined && (obj.toY = message.toY);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgPlayMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = object.idValue;\n        }\n        else {\n            message.idValue = \"\";\n        }\n        if (object.fromX !== undefined && object.fromX !== null) {\n            message.fromX = object.fromX;\n        }\n        else {\n            message.fromX = 0;\n        }\n        if (object.fromY !== undefined && object.fromY !== null) {\n            message.fromY = object.fromY;\n        }\n        else {\n            message.fromY = 0;\n        }\n        if (object.toX !== undefined && object.toX !== null) {\n            message.toX = object.toX;\n        }\n        else {\n            message.toX = 0;\n        }\n        if (object.toY !== undefined && object.toY !== null) {\n            message.toY = object.toY;\n        }\n        else {\n            message.toY = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgPlayMoveResponse = {\n    idValue: \"\",\n    capturedX: 0,\n    capturedY: 0,\n    winner: \"\",\n};\nexport const MsgPlayMoveResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.idValue !== \"\") {\n            writer.uint32(10).string(message.idValue);\n        }\n        if (message.capturedX !== 0) {\n            writer.uint32(16).int64(message.capturedX);\n        }\n        if (message.capturedY !== 0) {\n            writer.uint32(24).int64(message.capturedY);\n        }\n        if (message.winner !== \"\") {\n            writer.uint32(34).string(message.winner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgPlayMoveResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.idValue = reader.string();\n                    break;\n                case 2:\n                    message.capturedX = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.capturedY = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.winner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgPlayMoveResponse };\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = String(object.idValue);\n        }\n        else {\n            message.idValue = \"\";\n        }\n        if (object.capturedX !== undefined && object.capturedX !== null) {\n            message.capturedX = Number(object.capturedX);\n        }\n        else {\n            message.capturedX = 0;\n        }\n        if (object.capturedY !== undefined && object.capturedY !== null) {\n            message.capturedY = Number(object.capturedY);\n        }\n        else {\n            message.capturedY = 0;\n        }\n        if (object.winner !== undefined && object.winner !== null) {\n            message.winner = String(object.winner);\n        }\n        else {\n            message.winner = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.idValue !== undefined && (obj.idValue = message.idValue);\n        message.capturedX !== undefined && (obj.capturedX = message.capturedX);\n        message.capturedY !== undefined && (obj.capturedY = message.capturedY);\n        message.winner !== undefined && (obj.winner = message.winner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgPlayMoveResponse };\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = object.idValue;\n        }\n        else {\n            message.idValue = \"\";\n        }\n        if (object.capturedX !== undefined && object.capturedX !== null) {\n            message.capturedX = object.capturedX;\n        }\n        else {\n            message.capturedX = 0;\n        }\n        if (object.capturedY !== undefined && object.capturedY !== null) {\n            message.capturedY = object.capturedY;\n        }\n        else {\n            message.capturedY = 0;\n        }\n        if (object.winner !== undefined && object.winner !== null) {\n            message.winner = object.winner;\n        }\n        else {\n            message.winner = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRejectGame = { creator: \"\", idValue: \"\" };\nexport const MsgRejectGame = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.idValue !== \"\") {\n            writer.uint32(18).string(message.idValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRejectGame };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.idValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRejectGame };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = String(object.idValue);\n        }\n        else {\n            message.idValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.idValue !== undefined && (obj.idValue = message.idValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRejectGame };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.idValue !== undefined && object.idValue !== null) {\n            message.idValue = object.idValue;\n        }\n        else {\n            message.idValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRejectGameResponse = {};\nexport const MsgRejectGameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRejectGameResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRejectGameResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRejectGameResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateGame(request) {\n        const data = MsgCreateGame.encode(request).finish();\n        const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"CreateGame\", data);\n        return promise.then((data) => MsgCreateGameResponse.decode(new Reader(data)));\n    }\n    PlayMove(request) {\n        const data = MsgPlayMove.encode(request).finish();\n        const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"PlayMove\", data);\n        return promise.then((data) => MsgPlayMoveResponse.decode(new Reader(data)));\n    }\n    RejectGame(request) {\n        const data = MsgRejectGame.encode(request).finish();\n        const promise = this.rpc.request(\"alice.checkers.checkers.Msg\", \"RejectGame\", data);\n        return promise.then((data) => MsgRejectGameResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}