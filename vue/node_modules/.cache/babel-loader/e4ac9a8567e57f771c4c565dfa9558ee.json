{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { PageRequest, PageResponse } from \"../cosmos/base/query/v1beta1/pagination\";\nimport { Coin } from \"../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"irismod.coinswap\";\nconst baseQueryLiquidityPoolRequest = {\n  lptDenom: \"\"\n};\nexport const QueryLiquidityPoolRequest = {\n  encode(message, writer = Writer.create()) {\n    if (message.lptDenom !== \"\") {\n      writer.uint32(10).string(message.lptDenom);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseQueryLiquidityPoolRequest\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.lptDenom = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseQueryLiquidityPoolRequest\n    };\n\n    if (object.lptDenom !== undefined && object.lptDenom !== null) {\n      message.lptDenom = String(object.lptDenom);\n    } else {\n      message.lptDenom = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.lptDenom !== undefined && (obj.lptDenom = message.lptDenom);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseQueryLiquidityPoolRequest\n    };\n\n    if (object.lptDenom !== undefined && object.lptDenom !== null) {\n      message.lptDenom = object.lptDenom;\n    } else {\n      message.lptDenom = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryLiquidityPoolResponse = {};\nexport const QueryLiquidityPoolResponse = {\n  encode(message, writer = Writer.create()) {\n    if (message.pool !== undefined) {\n      PoolInfo.encode(message.pool, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseQueryLiquidityPoolResponse\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pool = PoolInfo.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseQueryLiquidityPoolResponse\n    };\n\n    if (object.pool !== undefined && object.pool !== null) {\n      message.pool = PoolInfo.fromJSON(object.pool);\n    } else {\n      message.pool = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pool !== undefined && (obj.pool = message.pool ? PoolInfo.toJSON(message.pool) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseQueryLiquidityPoolResponse\n    };\n\n    if (object.pool !== undefined && object.pool !== null) {\n      message.pool = PoolInfo.fromPartial(object.pool);\n    } else {\n      message.pool = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryLiquidityPoolsRequest = {};\nexport const QueryLiquidityPoolsRequest = {\n  encode(message, writer = Writer.create()) {\n    if (message.pagination !== undefined) {\n      PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseQueryLiquidityPoolsRequest\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = PageRequest.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseQueryLiquidityPoolsRequest\n    };\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = PageRequest.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseQueryLiquidityPoolsRequest\n    };\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = PageRequest.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryLiquidityPoolsResponse = {};\nexport const QueryLiquidityPoolsResponse = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.pools) {\n      PoolInfo.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.pagination !== undefined) {\n      PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseQueryLiquidityPoolsResponse\n    };\n    message.pools = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pools.push(PoolInfo.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.pagination = PageResponse.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseQueryLiquidityPoolsResponse\n    };\n    message.pools = [];\n\n    if (object.pools !== undefined && object.pools !== null) {\n      for (const e of object.pools) {\n        message.pools.push(PoolInfo.fromJSON(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = PageResponse.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.pools) {\n      obj.pools = message.pools.map(e => e ? PoolInfo.toJSON(e) : undefined);\n    } else {\n      obj.pools = [];\n    }\n\n    message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseQueryLiquidityPoolsResponse\n    };\n    message.pools = [];\n\n    if (object.pools !== undefined && object.pools !== null) {\n      for (const e of object.pools) {\n        message.pools.push(PoolInfo.fromPartial(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = PageResponse.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst basePoolInfo = {\n  id: \"\",\n  escrowAddress: \"\",\n  fee: \"\"\n};\nexport const PoolInfo = {\n  encode(message, writer = Writer.create()) {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n\n    if (message.escrowAddress !== \"\") {\n      writer.uint32(18).string(message.escrowAddress);\n    }\n\n    if (message.standard !== undefined) {\n      Coin.encode(message.standard, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.token !== undefined) {\n      Coin.encode(message.token, writer.uint32(34).fork()).ldelim();\n    }\n\n    if (message.lpt !== undefined) {\n      Coin.encode(message.lpt, writer.uint32(42).fork()).ldelim();\n    }\n\n    if (message.fee !== \"\") {\n      writer.uint32(50).string(message.fee);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePoolInfo\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n\n        case 2:\n          message.escrowAddress = reader.string();\n          break;\n\n        case 3:\n          message.standard = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.token = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.lpt = Coin.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.fee = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...basePoolInfo\n    };\n\n    if (object.id !== undefined && object.id !== null) {\n      message.id = String(object.id);\n    } else {\n      message.id = \"\";\n    }\n\n    if (object.escrowAddress !== undefined && object.escrowAddress !== null) {\n      message.escrowAddress = String(object.escrowAddress);\n    } else {\n      message.escrowAddress = \"\";\n    }\n\n    if (object.standard !== undefined && object.standard !== null) {\n      message.standard = Coin.fromJSON(object.standard);\n    } else {\n      message.standard = undefined;\n    }\n\n    if (object.token !== undefined && object.token !== null) {\n      message.token = Coin.fromJSON(object.token);\n    } else {\n      message.token = undefined;\n    }\n\n    if (object.lpt !== undefined && object.lpt !== null) {\n      message.lpt = Coin.fromJSON(object.lpt);\n    } else {\n      message.lpt = undefined;\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = String(object.fee);\n    } else {\n      message.fee = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.escrowAddress !== undefined && (obj.escrowAddress = message.escrowAddress);\n    message.standard !== undefined && (obj.standard = message.standard ? Coin.toJSON(message.standard) : undefined);\n    message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n    message.lpt !== undefined && (obj.lpt = message.lpt ? Coin.toJSON(message.lpt) : undefined);\n    message.fee !== undefined && (obj.fee = message.fee);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...basePoolInfo\n    };\n\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n\n    if (object.escrowAddress !== undefined && object.escrowAddress !== null) {\n      message.escrowAddress = object.escrowAddress;\n    } else {\n      message.escrowAddress = \"\";\n    }\n\n    if (object.standard !== undefined && object.standard !== null) {\n      message.standard = Coin.fromPartial(object.standard);\n    } else {\n      message.standard = undefined;\n    }\n\n    if (object.token !== undefined && object.token !== null) {\n      message.token = Coin.fromPartial(object.token);\n    } else {\n      message.token = undefined;\n    }\n\n    if (object.lpt !== undefined && object.lpt !== null) {\n      message.lpt = Coin.fromPartial(object.lpt);\n    } else {\n      message.lpt = undefined;\n    }\n\n    if (object.fee !== undefined && object.fee !== null) {\n      message.fee = object.fee;\n    } else {\n      message.fee = \"\";\n    }\n\n    return message;\n  }\n\n};\nexport class QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  LiquidityPools(request) {\n    const data = QueryLiquidityPoolsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.coinswap.Query\", \"LiquidityPools\", data);\n    return promise.then(data => QueryLiquidityPoolsResponse.decode(new Reader(data)));\n  }\n\n  LiquidityPool(request) {\n    const data = QueryLiquidityPoolRequest.encode(request).finish();\n    const promise = this.rpc.request(\"irismod.coinswap.Query\", \"LiquidityPool\", data);\n    return promise.then(data => QueryLiquidityPoolResponse.decode(new Reader(data)));\n  }\n\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/alice/checkers/irismod.coinswap/module/types/coinswap/query.js"],"names":["Reader","Writer","PageRequest","PageResponse","Coin","protobufPackage","baseQueryLiquidityPoolRequest","lptDenom","QueryLiquidityPoolRequest","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseQueryLiquidityPoolResponse","QueryLiquidityPoolResponse","pool","PoolInfo","fork","ldelim","baseQueryLiquidityPoolsRequest","QueryLiquidityPoolsRequest","pagination","baseQueryLiquidityPoolsResponse","QueryLiquidityPoolsResponse","v","pools","push","e","map","basePoolInfo","id","escrowAddress","fee","standard","token","lpt","QueryClientImpl","constructor","rpc","LiquidityPools","request","data","finish","promise","then","LiquidityPool"],"mappings":";;;AAAA;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,oBAA/B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA2C,yCAA3C;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,OAAO,MAAMC,eAAe,GAAG,kBAAxB;AACP,MAAMC,6BAA6B,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtC;AACA,OAAO,MAAMC,yBAAyB,GAAG;AACrCC,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGV,MAAM,CAACW,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAACH,QAAR,KAAqB,EAAzB,EAA6B;AACzBI,MAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBC,MAAlB,CAAyBJ,OAAO,CAACH,QAAjC;AACH;;AACD,WAAOI,MAAP;AACH,GANoC;;AAOrCI,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAInB,MAAJ,CAAWgB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMP,OAAO,GAAG,EACZ,GAAGJ;AADS,KAAhB;;AAGA,WAAOY,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMI,GAAG,GAAGN,MAAM,CAACL,MAAP,EAAZ;;AACA,cAAQW,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACId,UAAAA,OAAO,CAACH,QAAR,GAAmBW,MAAM,CAACJ,MAAP,EAAnB;AACA;;AACJ;AACII,UAAAA,MAAM,CAACO,QAAP,CAAgBD,GAAG,GAAG,CAAtB;AACA;AANR;AAQH;;AACD,WAAOd,OAAP;AACH,GAzBoC;;AA0BrCgB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMjB,OAAO,GAAG,EACZ,GAAGJ;AADS,KAAhB;;AAGA,QAAIqB,MAAM,CAACpB,QAAP,KAAoBc,SAApB,IAAiCM,MAAM,CAACpB,QAAP,KAAoB,IAAzD,EAA+D;AAC3DG,MAAAA,OAAO,CAACH,QAAR,GAAmBqB,MAAM,CAACD,MAAM,CAACpB,QAAR,CAAzB;AACH,KAFD,MAGK;AACDG,MAAAA,OAAO,CAACH,QAAR,GAAmB,EAAnB;AACH;;AACD,WAAOG,OAAP;AACH,GArCoC;;AAsCrCmB,EAAAA,MAAM,CAACnB,OAAD,EAAU;AACZ,UAAMoB,GAAG,GAAG,EAAZ;AACApB,IAAAA,OAAO,CAACH,QAAR,KAAqBc,SAArB,KAAmCS,GAAG,CAACvB,QAAJ,GAAeG,OAAO,CAACH,QAA1D;AACA,WAAOuB,GAAP;AACH,GA1CoC;;AA2CrCC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,UAAMjB,OAAO,GAAG,EACZ,GAAGJ;AADS,KAAhB;;AAGA,QAAIqB,MAAM,CAACpB,QAAP,KAAoBc,SAApB,IAAiCM,MAAM,CAACpB,QAAP,KAAoB,IAAzD,EAA+D;AAC3DG,MAAAA,OAAO,CAACH,QAAR,GAAmBoB,MAAM,CAACpB,QAA1B;AACH,KAFD,MAGK;AACDG,MAAAA,OAAO,CAACH,QAAR,GAAmB,EAAnB;AACH;;AACD,WAAOG,OAAP;AACH;;AAtDoC,CAAlC;AAwDP,MAAMsB,8BAA8B,GAAG,EAAvC;AACA,OAAO,MAAMC,0BAA0B,GAAG;AACtCxB,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGV,MAAM,CAACW,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAACwB,IAAR,KAAiBb,SAArB,EAAgC;AAC5Bc,MAAAA,QAAQ,CAAC1B,MAAT,CAAgBC,OAAO,CAACwB,IAAxB,EAA8BvB,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAA9B,EAAwDC,MAAxD;AACH;;AACD,WAAO1B,MAAP;AACH,GANqC;;AAOtCI,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAInB,MAAJ,CAAWgB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMP,OAAO,GAAG,EACZ,GAAGsB;AADS,KAAhB;;AAGA,WAAOd,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMI,GAAG,GAAGN,MAAM,CAACL,MAAP,EAAZ;;AACA,cAAQW,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACId,UAAAA,OAAO,CAACwB,IAAR,GAAeC,QAAQ,CAACpB,MAAT,CAAgBG,MAAhB,EAAwBA,MAAM,CAACL,MAAP,EAAxB,CAAf;AACA;;AACJ;AACIK,UAAAA,MAAM,CAACO,QAAP,CAAgBD,GAAG,GAAG,CAAtB;AACA;AANR;AAQH;;AACD,WAAOd,OAAP;AACH,GAzBqC;;AA0BtCgB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMjB,OAAO,GAAG,EACZ,GAAGsB;AADS,KAAhB;;AAGA,QAAIL,MAAM,CAACO,IAAP,KAAgBb,SAAhB,IAA6BM,MAAM,CAACO,IAAP,KAAgB,IAAjD,EAAuD;AACnDxB,MAAAA,OAAO,CAACwB,IAAR,GAAeC,QAAQ,CAACT,QAAT,CAAkBC,MAAM,CAACO,IAAzB,CAAf;AACH,KAFD,MAGK;AACDxB,MAAAA,OAAO,CAACwB,IAAR,GAAeb,SAAf;AACH;;AACD,WAAOX,OAAP;AACH,GArCqC;;AAsCtCmB,EAAAA,MAAM,CAACnB,OAAD,EAAU;AACZ,UAAMoB,GAAG,GAAG,EAAZ;AACApB,IAAAA,OAAO,CAACwB,IAAR,KAAiBb,SAAjB,KACKS,GAAG,CAACI,IAAJ,GAAWxB,OAAO,CAACwB,IAAR,GAAeC,QAAQ,CAACN,MAAT,CAAgBnB,OAAO,CAACwB,IAAxB,CAAf,GAA+Cb,SAD/D;AAEA,WAAOS,GAAP;AACH,GA3CqC;;AA4CtCC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,UAAMjB,OAAO,GAAG,EACZ,GAAGsB;AADS,KAAhB;;AAGA,QAAIL,MAAM,CAACO,IAAP,KAAgBb,SAAhB,IAA6BM,MAAM,CAACO,IAAP,KAAgB,IAAjD,EAAuD;AACnDxB,MAAAA,OAAO,CAACwB,IAAR,GAAeC,QAAQ,CAACJ,WAAT,CAAqBJ,MAAM,CAACO,IAA5B,CAAf;AACH,KAFD,MAGK;AACDxB,MAAAA,OAAO,CAACwB,IAAR,GAAeb,SAAf;AACH;;AACD,WAAOX,OAAP;AACH;;AAvDqC,CAAnC;AAyDP,MAAM4B,8BAA8B,GAAG,EAAvC;AACA,OAAO,MAAMC,0BAA0B,GAAG;AACtC9B,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGV,MAAM,CAACW,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAAC8B,UAAR,KAAuBnB,SAA3B,EAAsC;AAClCnB,MAAAA,WAAW,CAACO,MAAZ,CAAmBC,OAAO,CAAC8B,UAA3B,EAAuC7B,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAAvC,EAAiEC,MAAjE;AACH;;AACD,WAAO1B,MAAP;AACH,GANqC;;AAOtCI,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAInB,MAAJ,CAAWgB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMP,OAAO,GAAG,EACZ,GAAG4B;AADS,KAAhB;;AAGA,WAAOpB,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMI,GAAG,GAAGN,MAAM,CAACL,MAAP,EAAZ;;AACA,cAAQW,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACId,UAAAA,OAAO,CAAC8B,UAAR,GAAqBtC,WAAW,CAACa,MAAZ,CAAmBG,MAAnB,EAA2BA,MAAM,CAACL,MAAP,EAA3B,CAArB;AACA;;AACJ;AACIK,UAAAA,MAAM,CAACO,QAAP,CAAgBD,GAAG,GAAG,CAAtB;AACA;AANR;AAQH;;AACD,WAAOd,OAAP;AACH,GAzBqC;;AA0BtCgB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMjB,OAAO,GAAG,EACZ,GAAG4B;AADS,KAAhB;;AAGA,QAAIX,MAAM,CAACa,UAAP,KAAsBnB,SAAtB,IAAmCM,MAAM,CAACa,UAAP,KAAsB,IAA7D,EAAmE;AAC/D9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBtC,WAAW,CAACwB,QAAZ,CAAqBC,MAAM,CAACa,UAA5B,CAArB;AACH,KAFD,MAGK;AACD9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBnB,SAArB;AACH;;AACD,WAAOX,OAAP;AACH,GArCqC;;AAsCtCmB,EAAAA,MAAM,CAACnB,OAAD,EAAU;AACZ,UAAMoB,GAAG,GAAG,EAAZ;AACApB,IAAAA,OAAO,CAAC8B,UAAR,KAAuBnB,SAAvB,KACKS,GAAG,CAACU,UAAJ,GAAiB9B,OAAO,CAAC8B,UAAR,GACZtC,WAAW,CAAC2B,MAAZ,CAAmBnB,OAAO,CAAC8B,UAA3B,CADY,GAEZnB,SAHV;AAIA,WAAOS,GAAP;AACH,GA7CqC;;AA8CtCC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,UAAMjB,OAAO,GAAG,EACZ,GAAG4B;AADS,KAAhB;;AAGA,QAAIX,MAAM,CAACa,UAAP,KAAsBnB,SAAtB,IAAmCM,MAAM,CAACa,UAAP,KAAsB,IAA7D,EAAmE;AAC/D9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBtC,WAAW,CAAC6B,WAAZ,CAAwBJ,MAAM,CAACa,UAA/B,CAArB;AACH,KAFD,MAGK;AACD9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBnB,SAArB;AACH;;AACD,WAAOX,OAAP;AACH;;AAzDqC,CAAnC;AA2DP,MAAM+B,+BAA+B,GAAG,EAAxC;AACA,OAAO,MAAMC,2BAA2B,GAAG;AACvCjC,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGV,MAAM,CAACW,MAAP,EAAnB,EAAoC;AACtC,SAAK,MAAM+B,CAAX,IAAgBjC,OAAO,CAACkC,KAAxB,EAA+B;AAC3BT,MAAAA,QAAQ,CAAC1B,MAAT,CAAgBkC,CAAhB,EAAmBhC,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAAnB,EAA6CC,MAA7C;AACH;;AACD,QAAI3B,OAAO,CAAC8B,UAAR,KAAuBnB,SAA3B,EAAsC;AAClClB,MAAAA,YAAY,CAACM,MAAb,CAAoBC,OAAO,CAAC8B,UAA5B,EAAwC7B,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAAxC,EAAkEC,MAAlE;AACH;;AACD,WAAO1B,MAAP;AACH,GATsC;;AAUvCI,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAInB,MAAJ,CAAWgB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMP,OAAO,GAAG,EACZ,GAAG+B;AADS,KAAhB;AAGA/B,IAAAA,OAAO,CAACkC,KAAR,GAAgB,EAAhB;;AACA,WAAO1B,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMI,GAAG,GAAGN,MAAM,CAACL,MAAP,EAAZ;;AACA,cAAQW,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACId,UAAAA,OAAO,CAACkC,KAAR,CAAcC,IAAd,CAAmBV,QAAQ,CAACpB,MAAT,CAAgBG,MAAhB,EAAwBA,MAAM,CAACL,MAAP,EAAxB,CAAnB;AACA;;AACJ,aAAK,CAAL;AACIH,UAAAA,OAAO,CAAC8B,UAAR,GAAqBrC,YAAY,CAACY,MAAb,CAAoBG,MAApB,EAA4BA,MAAM,CAACL,MAAP,EAA5B,CAArB;AACA;;AACJ;AACIK,UAAAA,MAAM,CAACO,QAAP,CAAgBD,GAAG,GAAG,CAAtB;AACA;AATR;AAWH;;AACD,WAAOd,OAAP;AACH,GAhCsC;;AAiCvCgB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMjB,OAAO,GAAG,EACZ,GAAG+B;AADS,KAAhB;AAGA/B,IAAAA,OAAO,CAACkC,KAAR,GAAgB,EAAhB;;AACA,QAAIjB,MAAM,CAACiB,KAAP,KAAiBvB,SAAjB,IAA8BM,MAAM,CAACiB,KAAP,KAAiB,IAAnD,EAAyD;AACrD,WAAK,MAAME,CAAX,IAAgBnB,MAAM,CAACiB,KAAvB,EAA8B;AAC1BlC,QAAAA,OAAO,CAACkC,KAAR,CAAcC,IAAd,CAAmBV,QAAQ,CAACT,QAAT,CAAkBoB,CAAlB,CAAnB;AACH;AACJ;;AACD,QAAInB,MAAM,CAACa,UAAP,KAAsBnB,SAAtB,IAAmCM,MAAM,CAACa,UAAP,KAAsB,IAA7D,EAAmE;AAC/D9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBrC,YAAY,CAACuB,QAAb,CAAsBC,MAAM,CAACa,UAA7B,CAArB;AACH,KAFD,MAGK;AACD9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBnB,SAArB;AACH;;AACD,WAAOX,OAAP;AACH,GAlDsC;;AAmDvCmB,EAAAA,MAAM,CAACnB,OAAD,EAAU;AACZ,UAAMoB,GAAG,GAAG,EAAZ;;AACA,QAAIpB,OAAO,CAACkC,KAAZ,EAAmB;AACfd,MAAAA,GAAG,CAACc,KAAJ,GAAYlC,OAAO,CAACkC,KAAR,CAAcG,GAAd,CAAmBD,CAAD,IAAOA,CAAC,GAAGX,QAAQ,CAACN,MAAT,CAAgBiB,CAAhB,CAAH,GAAwBzB,SAAlD,CAAZ;AACH,KAFD,MAGK;AACDS,MAAAA,GAAG,CAACc,KAAJ,GAAY,EAAZ;AACH;;AACDlC,IAAAA,OAAO,CAAC8B,UAAR,KAAuBnB,SAAvB,KACKS,GAAG,CAACU,UAAJ,GAAiB9B,OAAO,CAAC8B,UAAR,GACZrC,YAAY,CAAC0B,MAAb,CAAoBnB,OAAO,CAAC8B,UAA5B,CADY,GAEZnB,SAHV;AAIA,WAAOS,GAAP;AACH,GAhEsC;;AAiEvCC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,UAAMjB,OAAO,GAAG,EACZ,GAAG+B;AADS,KAAhB;AAGA/B,IAAAA,OAAO,CAACkC,KAAR,GAAgB,EAAhB;;AACA,QAAIjB,MAAM,CAACiB,KAAP,KAAiBvB,SAAjB,IAA8BM,MAAM,CAACiB,KAAP,KAAiB,IAAnD,EAAyD;AACrD,WAAK,MAAME,CAAX,IAAgBnB,MAAM,CAACiB,KAAvB,EAA8B;AAC1BlC,QAAAA,OAAO,CAACkC,KAAR,CAAcC,IAAd,CAAmBV,QAAQ,CAACJ,WAAT,CAAqBe,CAArB,CAAnB;AACH;AACJ;;AACD,QAAInB,MAAM,CAACa,UAAP,KAAsBnB,SAAtB,IAAmCM,MAAM,CAACa,UAAP,KAAsB,IAA7D,EAAmE;AAC/D9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBrC,YAAY,CAAC4B,WAAb,CAAyBJ,MAAM,CAACa,UAAhC,CAArB;AACH,KAFD,MAGK;AACD9B,MAAAA,OAAO,CAAC8B,UAAR,GAAqBnB,SAArB;AACH;;AACD,WAAOX,OAAP;AACH;;AAlFsC,CAApC;AAoFP,MAAMsC,YAAY,GAAG;AAAEC,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,aAAa,EAAE,EAAzB;AAA6BC,EAAAA,GAAG,EAAE;AAAlC,CAArB;AACA,OAAO,MAAMhB,QAAQ,GAAG;AACpB1B,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGV,MAAM,CAACW,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAACuC,EAAR,KAAe,EAAnB,EAAuB;AACnBtC,MAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBC,MAAlB,CAAyBJ,OAAO,CAACuC,EAAjC;AACH;;AACD,QAAIvC,OAAO,CAACwC,aAAR,KAA0B,EAA9B,EAAkC;AAC9BvC,MAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBC,MAAlB,CAAyBJ,OAAO,CAACwC,aAAjC;AACH;;AACD,QAAIxC,OAAO,CAAC0C,QAAR,KAAqB/B,SAAzB,EAAoC;AAChCjB,MAAAA,IAAI,CAACK,MAAL,CAAYC,OAAO,CAAC0C,QAApB,EAA8BzC,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAA9B,EAAwDC,MAAxD;AACH;;AACD,QAAI3B,OAAO,CAAC2C,KAAR,KAAkBhC,SAAtB,EAAiC;AAC7BjB,MAAAA,IAAI,CAACK,MAAL,CAAYC,OAAO,CAAC2C,KAApB,EAA2B1C,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAA3B,EAAqDC,MAArD;AACH;;AACD,QAAI3B,OAAO,CAAC4C,GAAR,KAAgBjC,SAApB,EAA+B;AAC3BjB,MAAAA,IAAI,CAACK,MAAL,CAAYC,OAAO,CAAC4C,GAApB,EAAyB3C,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBuB,IAAlB,EAAzB,EAAmDC,MAAnD;AACH;;AACD,QAAI3B,OAAO,CAACyC,GAAR,KAAgB,EAApB,EAAwB;AACpBxC,MAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBC,MAAlB,CAAyBJ,OAAO,CAACyC,GAAjC;AACH;;AACD,WAAOxC,MAAP;AACH,GArBmB;;AAsBpBI,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAInB,MAAJ,CAAWgB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKI,SAAX,GAAuBH,MAAM,CAACI,GAA9B,GAAoCJ,MAAM,CAACK,GAAP,GAAaN,MAA3D;AACA,UAAMP,OAAO,GAAG,EAAE,GAAGsC;AAAL,KAAhB;;AACA,WAAO9B,MAAM,CAACK,GAAP,GAAaH,GAApB,EAAyB;AACrB,YAAMI,GAAG,GAAGN,MAAM,CAACL,MAAP,EAAZ;;AACA,cAAQW,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACId,UAAAA,OAAO,CAACuC,EAAR,GAAa/B,MAAM,CAACJ,MAAP,EAAb;AACA;;AACJ,aAAK,CAAL;AACIJ,UAAAA,OAAO,CAACwC,aAAR,GAAwBhC,MAAM,CAACJ,MAAP,EAAxB;AACA;;AACJ,aAAK,CAAL;AACIJ,UAAAA,OAAO,CAAC0C,QAAR,GAAmBhD,IAAI,CAACW,MAAL,CAAYG,MAAZ,EAAoBA,MAAM,CAACL,MAAP,EAApB,CAAnB;AACA;;AACJ,aAAK,CAAL;AACIH,UAAAA,OAAO,CAAC2C,KAAR,GAAgBjD,IAAI,CAACW,MAAL,CAAYG,MAAZ,EAAoBA,MAAM,CAACL,MAAP,EAApB,CAAhB;AACA;;AACJ,aAAK,CAAL;AACIH,UAAAA,OAAO,CAAC4C,GAAR,GAAclD,IAAI,CAACW,MAAL,CAAYG,MAAZ,EAAoBA,MAAM,CAACL,MAAP,EAApB,CAAd;AACA;;AACJ,aAAK,CAAL;AACIH,UAAAA,OAAO,CAACyC,GAAR,GAAcjC,MAAM,CAACJ,MAAP,EAAd;AACA;;AACJ;AACII,UAAAA,MAAM,CAACO,QAAP,CAAgBD,GAAG,GAAG,CAAtB;AACA;AArBR;AAuBH;;AACD,WAAOd,OAAP;AACH,GArDmB;;AAsDpBgB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMjB,OAAO,GAAG,EAAE,GAAGsC;AAAL,KAAhB;;AACA,QAAIrB,MAAM,CAACsB,EAAP,KAAc5B,SAAd,IAA2BM,MAAM,CAACsB,EAAP,KAAc,IAA7C,EAAmD;AAC/CvC,MAAAA,OAAO,CAACuC,EAAR,GAAarB,MAAM,CAACD,MAAM,CAACsB,EAAR,CAAnB;AACH,KAFD,MAGK;AACDvC,MAAAA,OAAO,CAACuC,EAAR,GAAa,EAAb;AACH;;AACD,QAAItB,MAAM,CAACuB,aAAP,KAAyB7B,SAAzB,IAAsCM,MAAM,CAACuB,aAAP,KAAyB,IAAnE,EAAyE;AACrExC,MAAAA,OAAO,CAACwC,aAAR,GAAwBtB,MAAM,CAACD,MAAM,CAACuB,aAAR,CAA9B;AACH,KAFD,MAGK;AACDxC,MAAAA,OAAO,CAACwC,aAAR,GAAwB,EAAxB;AACH;;AACD,QAAIvB,MAAM,CAACyB,QAAP,KAAoB/B,SAApB,IAAiCM,MAAM,CAACyB,QAAP,KAAoB,IAAzD,EAA+D;AAC3D1C,MAAAA,OAAO,CAAC0C,QAAR,GAAmBhD,IAAI,CAACsB,QAAL,CAAcC,MAAM,CAACyB,QAArB,CAAnB;AACH,KAFD,MAGK;AACD1C,MAAAA,OAAO,CAAC0C,QAAR,GAAmB/B,SAAnB;AACH;;AACD,QAAIM,MAAM,CAAC0B,KAAP,KAAiBhC,SAAjB,IAA8BM,MAAM,CAAC0B,KAAP,KAAiB,IAAnD,EAAyD;AACrD3C,MAAAA,OAAO,CAAC2C,KAAR,GAAgBjD,IAAI,CAACsB,QAAL,CAAcC,MAAM,CAAC0B,KAArB,CAAhB;AACH,KAFD,MAGK;AACD3C,MAAAA,OAAO,CAAC2C,KAAR,GAAgBhC,SAAhB;AACH;;AACD,QAAIM,MAAM,CAAC2B,GAAP,KAAejC,SAAf,IAA4BM,MAAM,CAAC2B,GAAP,KAAe,IAA/C,EAAqD;AACjD5C,MAAAA,OAAO,CAAC4C,GAAR,GAAclD,IAAI,CAACsB,QAAL,CAAcC,MAAM,CAAC2B,GAArB,CAAd;AACH,KAFD,MAGK;AACD5C,MAAAA,OAAO,CAAC4C,GAAR,GAAcjC,SAAd;AACH;;AACD,QAAIM,MAAM,CAACwB,GAAP,KAAe9B,SAAf,IAA4BM,MAAM,CAACwB,GAAP,KAAe,IAA/C,EAAqD;AACjDzC,MAAAA,OAAO,CAACyC,GAAR,GAAcvB,MAAM,CAACD,MAAM,CAACwB,GAAR,CAApB;AACH,KAFD,MAGK;AACDzC,MAAAA,OAAO,CAACyC,GAAR,GAAc,EAAd;AACH;;AACD,WAAOzC,OAAP;AACH,GA7FmB;;AA8FpBmB,EAAAA,MAAM,CAACnB,OAAD,EAAU;AACZ,UAAMoB,GAAG,GAAG,EAAZ;AACApB,IAAAA,OAAO,CAACuC,EAAR,KAAe5B,SAAf,KAA6BS,GAAG,CAACmB,EAAJ,GAASvC,OAAO,CAACuC,EAA9C;AACAvC,IAAAA,OAAO,CAACwC,aAAR,KAA0B7B,SAA1B,KACKS,GAAG,CAACoB,aAAJ,GAAoBxC,OAAO,CAACwC,aADjC;AAEAxC,IAAAA,OAAO,CAAC0C,QAAR,KAAqB/B,SAArB,KACKS,GAAG,CAACsB,QAAJ,GAAe1C,OAAO,CAAC0C,QAAR,GACVhD,IAAI,CAACyB,MAAL,CAAYnB,OAAO,CAAC0C,QAApB,CADU,GAEV/B,SAHV;AAIAX,IAAAA,OAAO,CAAC2C,KAAR,KAAkBhC,SAAlB,KACKS,GAAG,CAACuB,KAAJ,GAAY3C,OAAO,CAAC2C,KAAR,GAAgBjD,IAAI,CAACyB,MAAL,CAAYnB,OAAO,CAAC2C,KAApB,CAAhB,GAA6ChC,SAD9D;AAEAX,IAAAA,OAAO,CAAC4C,GAAR,KAAgBjC,SAAhB,KACKS,GAAG,CAACwB,GAAJ,GAAU5C,OAAO,CAAC4C,GAAR,GAAclD,IAAI,CAACyB,MAAL,CAAYnB,OAAO,CAAC4C,GAApB,CAAd,GAAyCjC,SADxD;AAEAX,IAAAA,OAAO,CAACyC,GAAR,KAAgB9B,SAAhB,KAA8BS,GAAG,CAACqB,GAAJ,GAAUzC,OAAO,CAACyC,GAAhD;AACA,WAAOrB,GAAP;AACH,GA7GmB;;AA8GpBC,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAChB,UAAMjB,OAAO,GAAG,EAAE,GAAGsC;AAAL,KAAhB;;AACA,QAAIrB,MAAM,CAACsB,EAAP,KAAc5B,SAAd,IAA2BM,MAAM,CAACsB,EAAP,KAAc,IAA7C,EAAmD;AAC/CvC,MAAAA,OAAO,CAACuC,EAAR,GAAatB,MAAM,CAACsB,EAApB;AACH,KAFD,MAGK;AACDvC,MAAAA,OAAO,CAACuC,EAAR,GAAa,EAAb;AACH;;AACD,QAAItB,MAAM,CAACuB,aAAP,KAAyB7B,SAAzB,IAAsCM,MAAM,CAACuB,aAAP,KAAyB,IAAnE,EAAyE;AACrExC,MAAAA,OAAO,CAACwC,aAAR,GAAwBvB,MAAM,CAACuB,aAA/B;AACH,KAFD,MAGK;AACDxC,MAAAA,OAAO,CAACwC,aAAR,GAAwB,EAAxB;AACH;;AACD,QAAIvB,MAAM,CAACyB,QAAP,KAAoB/B,SAApB,IAAiCM,MAAM,CAACyB,QAAP,KAAoB,IAAzD,EAA+D;AAC3D1C,MAAAA,OAAO,CAAC0C,QAAR,GAAmBhD,IAAI,CAAC2B,WAAL,CAAiBJ,MAAM,CAACyB,QAAxB,CAAnB;AACH,KAFD,MAGK;AACD1C,MAAAA,OAAO,CAAC0C,QAAR,GAAmB/B,SAAnB;AACH;;AACD,QAAIM,MAAM,CAAC0B,KAAP,KAAiBhC,SAAjB,IAA8BM,MAAM,CAAC0B,KAAP,KAAiB,IAAnD,EAAyD;AACrD3C,MAAAA,OAAO,CAAC2C,KAAR,GAAgBjD,IAAI,CAAC2B,WAAL,CAAiBJ,MAAM,CAAC0B,KAAxB,CAAhB;AACH,KAFD,MAGK;AACD3C,MAAAA,OAAO,CAAC2C,KAAR,GAAgBhC,SAAhB;AACH;;AACD,QAAIM,MAAM,CAAC2B,GAAP,KAAejC,SAAf,IAA4BM,MAAM,CAAC2B,GAAP,KAAe,IAA/C,EAAqD;AACjD5C,MAAAA,OAAO,CAAC4C,GAAR,GAAclD,IAAI,CAAC2B,WAAL,CAAiBJ,MAAM,CAAC2B,GAAxB,CAAd;AACH,KAFD,MAGK;AACD5C,MAAAA,OAAO,CAAC4C,GAAR,GAAcjC,SAAd;AACH;;AACD,QAAIM,MAAM,CAACwB,GAAP,KAAe9B,SAAf,IAA4BM,MAAM,CAACwB,GAAP,KAAe,IAA/C,EAAqD;AACjDzC,MAAAA,OAAO,CAACyC,GAAR,GAAcxB,MAAM,CAACwB,GAArB;AACH,KAFD,MAGK;AACDzC,MAAAA,OAAO,CAACyC,GAAR,GAAc,EAAd;AACH;;AACD,WAAOzC,OAAP;AACH;;AArJmB,CAAjB;AAuJP,OAAO,MAAM6C,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;AACDC,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,UAAMC,IAAI,GAAGrB,0BAA0B,CAAC9B,MAA3B,CAAkCkD,OAAlC,EAA2CE,MAA3C,EAAb;AACA,UAAMC,OAAO,GAAG,KAAKL,GAAL,CAASE,OAAT,CAAiB,wBAAjB,EAA2C,gBAA3C,EAA6DC,IAA7D,CAAhB;AACA,WAAOE,OAAO,CAACC,IAAR,CAAcH,IAAD,IAAUlB,2BAA2B,CAAC3B,MAA5B,CAAmC,IAAIf,MAAJ,CAAW4D,IAAX,CAAnC,CAAvB,CAAP;AACH;;AACDI,EAAAA,aAAa,CAACL,OAAD,EAAU;AACnB,UAAMC,IAAI,GAAGpD,yBAAyB,CAACC,MAA1B,CAAiCkD,OAAjC,EAA0CE,MAA1C,EAAb;AACA,UAAMC,OAAO,GAAG,KAAKL,GAAL,CAASE,OAAT,CAAiB,wBAAjB,EAA2C,eAA3C,EAA4DC,IAA5D,CAAhB;AACA,WAAOE,OAAO,CAACC,IAAR,CAAcH,IAAD,IAAU3B,0BAA0B,CAAClB,MAA3B,CAAkC,IAAIf,MAAJ,CAAW4D,IAAX,CAAlC,CAAvB,CAAP;AACH;;AAbwB","sourcesContent":["/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { PageRequest, PageResponse, } from \"../cosmos/base/query/v1beta1/pagination\";\nimport { Coin } from \"../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"irismod.coinswap\";\nconst baseQueryLiquidityPoolRequest = { lptDenom: \"\" };\nexport const QueryLiquidityPoolRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.lptDenom !== \"\") {\n            writer.uint32(10).string(message.lptDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseQueryLiquidityPoolRequest,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.lptDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseQueryLiquidityPoolRequest,\n        };\n        if (object.lptDenom !== undefined && object.lptDenom !== null) {\n            message.lptDenom = String(object.lptDenom);\n        }\n        else {\n            message.lptDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.lptDenom !== undefined && (obj.lptDenom = message.lptDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseQueryLiquidityPoolRequest,\n        };\n        if (object.lptDenom !== undefined && object.lptDenom !== null) {\n            message.lptDenom = object.lptDenom;\n        }\n        else {\n            message.lptDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseQueryLiquidityPoolResponse = {};\nexport const QueryLiquidityPoolResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.pool !== undefined) {\n            PoolInfo.encode(message.pool, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseQueryLiquidityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pool = PoolInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseQueryLiquidityPoolResponse,\n        };\n        if (object.pool !== undefined && object.pool !== null) {\n            message.pool = PoolInfo.fromJSON(object.pool);\n        }\n        else {\n            message.pool = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pool !== undefined &&\n            (obj.pool = message.pool ? PoolInfo.toJSON(message.pool) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseQueryLiquidityPoolResponse,\n        };\n        if (object.pool !== undefined && object.pool !== null) {\n            message.pool = PoolInfo.fromPartial(object.pool);\n        }\n        else {\n            message.pool = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryLiquidityPoolsRequest = {};\nexport const QueryLiquidityPoolsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseQueryLiquidityPoolsRequest,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseQueryLiquidityPoolsRequest,\n        };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? PageRequest.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseQueryLiquidityPoolsRequest,\n        };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryLiquidityPoolsResponse = {};\nexport const QueryLiquidityPoolsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pools) {\n            PoolInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseQueryLiquidityPoolsResponse,\n        };\n        message.pools = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pools.push(PoolInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseQueryLiquidityPoolsResponse,\n        };\n        message.pools = [];\n        if (object.pools !== undefined && object.pools !== null) {\n            for (const e of object.pools) {\n                message.pools.push(PoolInfo.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pools) {\n            obj.pools = message.pools.map((e) => e ? PoolInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.pools = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? PageResponse.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseQueryLiquidityPoolsResponse,\n        };\n        message.pools = [];\n        if (object.pools !== undefined && object.pools !== null) {\n            for (const e of object.pools) {\n                message.pools.push(PoolInfo.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst basePoolInfo = { id: \"\", escrowAddress: \"\", fee: \"\" };\nexport const PoolInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.escrowAddress !== \"\") {\n            writer.uint32(18).string(message.escrowAddress);\n        }\n        if (message.standard !== undefined) {\n            Coin.encode(message.standard, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lpt !== undefined) {\n            Coin.encode(message.lpt, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.fee !== \"\") {\n            writer.uint32(50).string(message.fee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePoolInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.escrowAddress = reader.string();\n                    break;\n                case 3:\n                    message.standard = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.lpt = Coin.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.fee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePoolInfo };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.escrowAddress !== undefined && object.escrowAddress !== null) {\n            message.escrowAddress = String(object.escrowAddress);\n        }\n        else {\n            message.escrowAddress = \"\";\n        }\n        if (object.standard !== undefined && object.standard !== null) {\n            message.standard = Coin.fromJSON(object.standard);\n        }\n        else {\n            message.standard = undefined;\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.lpt !== undefined && object.lpt !== null) {\n            message.lpt = Coin.fromJSON(object.lpt);\n        }\n        else {\n            message.lpt = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = String(object.fee);\n        }\n        else {\n            message.fee = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.escrowAddress !== undefined &&\n            (obj.escrowAddress = message.escrowAddress);\n        message.standard !== undefined &&\n            (obj.standard = message.standard\n                ? Coin.toJSON(message.standard)\n                : undefined);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.lpt !== undefined &&\n            (obj.lpt = message.lpt ? Coin.toJSON(message.lpt) : undefined);\n        message.fee !== undefined && (obj.fee = message.fee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePoolInfo };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.escrowAddress !== undefined && object.escrowAddress !== null) {\n            message.escrowAddress = object.escrowAddress;\n        }\n        else {\n            message.escrowAddress = \"\";\n        }\n        if (object.standard !== undefined && object.standard !== null) {\n            message.standard = Coin.fromPartial(object.standard);\n        }\n        else {\n            message.standard = undefined;\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.lpt !== undefined && object.lpt !== null) {\n            message.lpt = Coin.fromPartial(object.lpt);\n        }\n        else {\n            message.lpt = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = object.fee;\n        }\n        else {\n            message.fee = \"\";\n        }\n        return message;\n    },\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    LiquidityPools(request) {\n        const data = QueryLiquidityPoolsRequest.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.coinswap.Query\", \"LiquidityPools\", data);\n        return promise.then((data) => QueryLiquidityPoolsResponse.decode(new Reader(data)));\n    }\n    LiquidityPool(request) {\n        const data = QueryLiquidityPoolRequest.encode(request).finish();\n        const promise = this.rpc.request(\"irismod.coinswap.Query\", \"LiquidityPool\", data);\n        return promise.then((data) => QueryLiquidityPoolResponse.decode(new Reader(data)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}