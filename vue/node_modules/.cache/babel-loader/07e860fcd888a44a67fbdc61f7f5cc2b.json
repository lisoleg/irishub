{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst proofs_1 = require(\"../../../../confio/proofs\");\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexports.MerkleRoot = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleRoot);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleRoot);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = bytesFromBase64(object.hash);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerkleRoot);\n\n    if (object.hash !== undefined && object.hash !== null) {\n      message.hash = object.hash;\n    } else {\n      message.hash = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseMerklePrefix = {};\nexports.MerklePrefix = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.keyPrefix.length !== 0) {\n      writer.uint32(10).bytes(message.keyPrefix);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePrefix);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPrefix = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePrefix);\n\n    if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n      message.keyPrefix = bytesFromBase64(object.keyPrefix);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.keyPrefix !== undefined && (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerklePrefix);\n\n    if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n      message.keyPrefix = object.keyPrefix;\n    } else {\n      message.keyPrefix = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\nconst baseMerklePath = {\n  keyPath: ''\n};\nexports.MerklePath = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.keyPath) {\n      writer.uint32(10).string(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPath.push(reader.string());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(String(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.keyPath) {\n      obj.keyPath = message.keyPath.map(e => e);\n    } else {\n      obj.keyPath = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerklePath);\n    message.keyPath = [];\n\n    if (object.keyPath !== undefined && object.keyPath !== null) {\n      for (const e of object.keyPath) {\n        message.keyPath.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseMerkleProof = {};\nexports.MerkleProof = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.proofs) {\n      proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.proofs) {\n      obj.proofs = message.proofs.map(e => e ? proofs_1.CommitmentProof.toJSON(e) : undefined);\n    } else {\n      obj.proofs = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMerkleProof);\n    message.proofs = [];\n\n    if (object.proofs !== undefined && object.proofs !== null) {\n      for (const e of object.proofs) {\n        message.proofs.push(proofs_1.CommitmentProof.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, 'base64').toString('binary'));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, 'binary').toString('base64'));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(''));\n}","map":{"version":3,"sources":["../../../../../../src/codec/ibc/core/commitment/v1/commitment.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst proofs_1 = require(\"../../../../confio/proofs\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexports.MerkleRoot = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMerkleRoot);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMerkleRoot);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMerkleRoot);\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexports.MerklePrefix = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMerklePrefix);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMerklePrefix);\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMerklePrefix);\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: '' };\nexports.MerklePath = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMerklePath);\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMerklePath);\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMerklePath);\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexports.MerkleProof = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.proofs) {\n            proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMerkleProof);\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMerkleProof);\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(proofs_1.CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? proofs_1.CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMerkleProof);\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(proofs_1.CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}