{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n  encode(message, writer = Writer.create()) {\n    if (message.ed25519 !== undefined) {\n      writer.uint32(10).bytes(message.ed25519);\n    }\n\n    if (message.secp256k1 !== undefined) {\n      writer.uint32(18).bytes(message.secp256k1);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...basePublicKey\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.ed25519 = reader.bytes();\n          break;\n\n        case 2:\n          message.secp256k1 = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...basePublicKey\n    };\n\n    if (object.ed25519 !== undefined && object.ed25519 !== null) {\n      message.ed25519 = bytesFromBase64(object.ed25519);\n    }\n\n    if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n      message.secp256k1 = bytesFromBase64(object.secp256k1);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n    message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...basePublicKey\n    };\n\n    if (object.ed25519 !== undefined && object.ed25519 !== null) {\n      message.ed25519 = object.ed25519;\n    } else {\n      message.ed25519 = undefined;\n    }\n\n    if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n      message.secp256k1 = object.secp256k1;\n    } else {\n      message.secp256k1 = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js"],"names":["Writer","Reader","protobufPackage","basePublicKey","PublicKey","encode","message","writer","create","ed25519","undefined","uint32","bytes","secp256k1","decode","input","length","reader","Uint8Array","end","len","pos","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","String","fromCharCode","join"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"]},"metadata":{},"sourceType":"module"}