{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = {\n  totalVotingPower: 0\n};\nexport const ValidatorSet = {\n  encode(message, writer = Writer.create()) {\n    for (const v of message.validators) {\n      Validator.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proposer !== undefined) {\n      Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.totalVotingPower !== 0) {\n      writer.uint32(24).int64(message.totalVotingPower);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorSet\n    };\n    message.validators = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validators.push(Validator.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.proposer = Validator.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.totalVotingPower = longToNumber(reader.int64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorSet\n    };\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(Validator.fromJSON(e));\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = Validator.fromJSON(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = Number(object.totalVotingPower);\n    } else {\n      message.totalVotingPower = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.validators) {\n      obj.validators = message.validators.map(e => e ? Validator.toJSON(e) : undefined);\n    } else {\n      obj.validators = [];\n    }\n\n    message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n    message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorSet\n    };\n    message.validators = [];\n\n    if (object.validators !== undefined && object.validators !== null) {\n      for (const e of object.validators) {\n        message.validators.push(Validator.fromPartial(e));\n      }\n    }\n\n    if (object.proposer !== undefined && object.proposer !== null) {\n      message.proposer = Validator.fromPartial(object.proposer);\n    } else {\n      message.proposer = undefined;\n    }\n\n    if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n      message.totalVotingPower = object.totalVotingPower;\n    } else {\n      message.totalVotingPower = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidator = {\n  votingPower: 0,\n  proposerPriority: 0\n};\nexport const Validator = {\n  encode(message, writer = Writer.create()) {\n    if (message.address.length !== 0) {\n      writer.uint32(10).bytes(message.address);\n    }\n\n    if (message.pubKey !== undefined) {\n      PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n    }\n\n    if (message.votingPower !== 0) {\n      writer.uint32(24).int64(message.votingPower);\n    }\n\n    if (message.proposerPriority !== 0) {\n      writer.uint32(32).int64(message.proposerPriority);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidator\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.bytes();\n          break;\n\n        case 2:\n          message.pubKey = PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.votingPower = longToNumber(reader.int64());\n          break;\n\n        case 4:\n          message.proposerPriority = longToNumber(reader.int64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidator\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = bytesFromBase64(object.address);\n    }\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = Number(object.votingPower);\n    } else {\n      message.votingPower = 0;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = Number(object.proposerPriority);\n    } else {\n      message.proposerPriority = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n    message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidator\n    };\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = new Uint8Array();\n    }\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = 0;\n    }\n\n    if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n      message.proposerPriority = object.proposerPriority;\n    } else {\n      message.proposerPriority = 0;\n    }\n\n    return message;\n  }\n\n};\nconst baseSimpleValidator = {\n  votingPower: 0\n};\nexport const SimpleValidator = {\n  encode(message, writer = Writer.create()) {\n    if (message.pubKey !== undefined) {\n      PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.votingPower !== 0) {\n      writer.uint32(16).int64(message.votingPower);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseSimpleValidator\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKey = PublicKey.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.votingPower = longToNumber(reader.int64());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseSimpleValidator\n    };\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = PublicKey.fromJSON(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = Number(object.votingPower);\n    } else {\n      message.votingPower = 0;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n    message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseSimpleValidator\n    };\n\n    if (object.pubKey !== undefined && object.pubKey !== null) {\n      message.pubKey = PublicKey.fromPartial(object.pubKey);\n    } else {\n      message.pubKey = undefined;\n    }\n\n    if (object.votingPower !== undefined && object.votingPower !== null) {\n      message.votingPower = object.votingPower;\n    } else {\n      message.votingPower = 0;\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js"],"names":["Long","util","configure","Writer","Reader","PublicKey","protobufPackage","baseValidatorSet","totalVotingPower","ValidatorSet","encode","message","writer","create","v","validators","Validator","uint32","fork","ldelim","proposer","undefined","int64","decode","input","length","reader","Uint8Array","end","len","pos","tag","push","longToNumber","skipType","fromJSON","object","e","Number","toJSON","obj","map","fromPartial","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","bytesFromBase64","base64FromBytes","baseSimpleValidator","SimpleValidator","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","String","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,MAAlC,QAAgD,oBAAhD;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAO,MAAMC,eAAe,GAAG,kBAAxB;AACP,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,gBAAgB,EAAE;AAApB,CAAzB;AACA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGT,MAAM,CAACU,MAAP,EAAnB,EAAoC;AACtC,SAAK,MAAMC,CAAX,IAAgBH,OAAO,CAACI,UAAxB,EAAoC;AAChCC,MAAAA,SAAS,CAACN,MAAV,CAAiBI,CAAjB,EAAoBF,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBC,IAAlB,EAApB,EAA8CC,MAA9C;AACH;;AACD,QAAIR,OAAO,CAACS,QAAR,KAAqBC,SAAzB,EAAoC;AAChCL,MAAAA,SAAS,CAACN,MAAV,CAAiBC,OAAO,CAACS,QAAzB,EAAmCR,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBC,IAAlB,EAAnC,EAA6DC,MAA7D;AACH;;AACD,QAAIR,OAAO,CAACH,gBAAR,KAA6B,CAAjC,EAAoC;AAChCI,MAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBK,KAAlB,CAAwBX,OAAO,CAACH,gBAAhC;AACH;;AACD,WAAOI,MAAP;AACH,GAZuB;;AAaxBW,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAIvB,MAAJ,CAAWoB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKJ,SAAX,GAAuBK,MAAM,CAACG,GAA9B,GAAoCH,MAAM,CAACI,GAAP,GAAaL,MAA3D;AACA,UAAMd,OAAO,GAAG,EAAE,GAAGJ;AAAL,KAAhB;AACAI,IAAAA,OAAO,CAACI,UAAR,GAAqB,EAArB;;AACA,WAAOW,MAAM,CAACI,GAAP,GAAaF,GAApB,EAAyB;AACrB,YAAMG,GAAG,GAAGL,MAAM,CAACT,MAAP,EAAZ;;AACA,cAAQc,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACIpB,UAAAA,OAAO,CAACI,UAAR,CAAmBiB,IAAnB,CAAwBhB,SAAS,CAACO,MAAV,CAAiBG,MAAjB,EAAyBA,MAAM,CAACT,MAAP,EAAzB,CAAxB;AACA;;AACJ,aAAK,CAAL;AACIN,UAAAA,OAAO,CAACS,QAAR,GAAmBJ,SAAS,CAACO,MAAV,CAAiBG,MAAjB,EAAyBA,MAAM,CAACT,MAAP,EAAzB,CAAnB;AACA;;AACJ,aAAK,CAAL;AACIN,UAAAA,OAAO,CAACH,gBAAR,GAA2ByB,YAAY,CAACP,MAAM,CAACJ,KAAP,EAAD,CAAvC;AACA;;AACJ;AACII,UAAAA,MAAM,CAACQ,QAAP,CAAgBH,GAAG,GAAG,CAAtB;AACA;AAZR;AAcH;;AACD,WAAOpB,OAAP;AACH,GApCuB;;AAqCxBwB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMzB,OAAO,GAAG,EAAE,GAAGJ;AAAL,KAAhB;AACAI,IAAAA,OAAO,CAACI,UAAR,GAAqB,EAArB;;AACA,QAAIqB,MAAM,CAACrB,UAAP,KAAsBM,SAAtB,IAAmCe,MAAM,CAACrB,UAAP,KAAsB,IAA7D,EAAmE;AAC/D,WAAK,MAAMsB,CAAX,IAAgBD,MAAM,CAACrB,UAAvB,EAAmC;AAC/BJ,QAAAA,OAAO,CAACI,UAAR,CAAmBiB,IAAnB,CAAwBhB,SAAS,CAACmB,QAAV,CAAmBE,CAAnB,CAAxB;AACH;AACJ;;AACD,QAAID,MAAM,CAAChB,QAAP,KAAoBC,SAApB,IAAiCe,MAAM,CAAChB,QAAP,KAAoB,IAAzD,EAA+D;AAC3DT,MAAAA,OAAO,CAACS,QAAR,GAAmBJ,SAAS,CAACmB,QAAV,CAAmBC,MAAM,CAAChB,QAA1B,CAAnB;AACH,KAFD,MAGK;AACDT,MAAAA,OAAO,CAACS,QAAR,GAAmBC,SAAnB;AACH;;AACD,QAAIe,MAAM,CAAC5B,gBAAP,KAA4Ba,SAA5B,IACAe,MAAM,CAAC5B,gBAAP,KAA4B,IADhC,EACsC;AAClCG,MAAAA,OAAO,CAACH,gBAAR,GAA2B8B,MAAM,CAACF,MAAM,CAAC5B,gBAAR,CAAjC;AACH,KAHD,MAIK;AACDG,MAAAA,OAAO,CAACH,gBAAR,GAA2B,CAA3B;AACH;;AACD,WAAOG,OAAP;AACH,GA3DuB;;AA4DxB4B,EAAAA,MAAM,CAAC5B,OAAD,EAAU;AACZ,UAAM6B,GAAG,GAAG,EAAZ;;AACA,QAAI7B,OAAO,CAACI,UAAZ,EAAwB;AACpByB,MAAAA,GAAG,CAACzB,UAAJ,GAAiBJ,OAAO,CAACI,UAAR,CAAmB0B,GAAnB,CAAwBJ,CAAD,IAAOA,CAAC,GAAGrB,SAAS,CAACuB,MAAV,CAAiBF,CAAjB,CAAH,GAAyBhB,SAAxD,CAAjB;AACH,KAFD,MAGK;AACDmB,MAAAA,GAAG,CAACzB,UAAJ,GAAiB,EAAjB;AACH;;AACDJ,IAAAA,OAAO,CAACS,QAAR,KAAqBC,SAArB,KACKmB,GAAG,CAACpB,QAAJ,GAAeT,OAAO,CAACS,QAAR,GACVJ,SAAS,CAACuB,MAAV,CAAiB5B,OAAO,CAACS,QAAzB,CADU,GAEVC,SAHV;AAIAV,IAAAA,OAAO,CAACH,gBAAR,KAA6Ba,SAA7B,KACKmB,GAAG,CAAChC,gBAAJ,GAAuBG,OAAO,CAACH,gBADpC;AAEA,WAAOgC,GAAP;AACH,GA3EuB;;AA4ExBE,EAAAA,WAAW,CAACN,MAAD,EAAS;AAChB,UAAMzB,OAAO,GAAG,EAAE,GAAGJ;AAAL,KAAhB;AACAI,IAAAA,OAAO,CAACI,UAAR,GAAqB,EAArB;;AACA,QAAIqB,MAAM,CAACrB,UAAP,KAAsBM,SAAtB,IAAmCe,MAAM,CAACrB,UAAP,KAAsB,IAA7D,EAAmE;AAC/D,WAAK,MAAMsB,CAAX,IAAgBD,MAAM,CAACrB,UAAvB,EAAmC;AAC/BJ,QAAAA,OAAO,CAACI,UAAR,CAAmBiB,IAAnB,CAAwBhB,SAAS,CAAC0B,WAAV,CAAsBL,CAAtB,CAAxB;AACH;AACJ;;AACD,QAAID,MAAM,CAAChB,QAAP,KAAoBC,SAApB,IAAiCe,MAAM,CAAChB,QAAP,KAAoB,IAAzD,EAA+D;AAC3DT,MAAAA,OAAO,CAACS,QAAR,GAAmBJ,SAAS,CAAC0B,WAAV,CAAsBN,MAAM,CAAChB,QAA7B,CAAnB;AACH,KAFD,MAGK;AACDT,MAAAA,OAAO,CAACS,QAAR,GAAmBC,SAAnB;AACH;;AACD,QAAIe,MAAM,CAAC5B,gBAAP,KAA4Ba,SAA5B,IACAe,MAAM,CAAC5B,gBAAP,KAA4B,IADhC,EACsC;AAClCG,MAAAA,OAAO,CAACH,gBAAR,GAA2B4B,MAAM,CAAC5B,gBAAlC;AACH,KAHD,MAIK;AACDG,MAAAA,OAAO,CAACH,gBAAR,GAA2B,CAA3B;AACH;;AACD,WAAOG,OAAP;AACH;;AAlGuB,CAArB;AAoGP,MAAMgC,aAAa,GAAG;AAAEC,EAAAA,WAAW,EAAE,CAAf;AAAkBC,EAAAA,gBAAgB,EAAE;AAApC,CAAtB;AACA,OAAO,MAAM7B,SAAS,GAAG;AACrBN,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGT,MAAM,CAACU,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAACmC,OAAR,CAAgBrB,MAAhB,KAA2B,CAA/B,EAAkC;AAC9Bb,MAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkB8B,KAAlB,CAAwBpC,OAAO,CAACmC,OAAhC;AACH;;AACD,QAAInC,OAAO,CAACqC,MAAR,KAAmB3B,SAAvB,EAAkC;AAC9BhB,MAAAA,SAAS,CAACK,MAAV,CAAiBC,OAAO,CAACqC,MAAzB,EAAiCpC,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBC,IAAlB,EAAjC,EAA2DC,MAA3D;AACH;;AACD,QAAIR,OAAO,CAACiC,WAAR,KAAwB,CAA5B,EAA+B;AAC3BhC,MAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBK,KAAlB,CAAwBX,OAAO,CAACiC,WAAhC;AACH;;AACD,QAAIjC,OAAO,CAACkC,gBAAR,KAA6B,CAAjC,EAAoC;AAChCjC,MAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBK,KAAlB,CAAwBX,OAAO,CAACkC,gBAAhC;AACH;;AACD,WAAOjC,MAAP;AACH,GAfoB;;AAgBrBW,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAIvB,MAAJ,CAAWoB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKJ,SAAX,GAAuBK,MAAM,CAACG,GAA9B,GAAoCH,MAAM,CAACI,GAAP,GAAaL,MAA3D;AACA,UAAMd,OAAO,GAAG,EAAE,GAAGgC;AAAL,KAAhB;;AACA,WAAOjB,MAAM,CAACI,GAAP,GAAaF,GAApB,EAAyB;AACrB,YAAMG,GAAG,GAAGL,MAAM,CAACT,MAAP,EAAZ;;AACA,cAAQc,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACIpB,UAAAA,OAAO,CAACmC,OAAR,GAAkBpB,MAAM,CAACqB,KAAP,EAAlB;AACA;;AACJ,aAAK,CAAL;AACIpC,UAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAACkB,MAAV,CAAiBG,MAAjB,EAAyBA,MAAM,CAACT,MAAP,EAAzB,CAAjB;AACA;;AACJ,aAAK,CAAL;AACIN,UAAAA,OAAO,CAACiC,WAAR,GAAsBX,YAAY,CAACP,MAAM,CAACJ,KAAP,EAAD,CAAlC;AACA;;AACJ,aAAK,CAAL;AACIX,UAAAA,OAAO,CAACkC,gBAAR,GAA2BZ,YAAY,CAACP,MAAM,CAACJ,KAAP,EAAD,CAAvC;AACA;;AACJ;AACII,UAAAA,MAAM,CAACQ,QAAP,CAAgBH,GAAG,GAAG,CAAtB;AACA;AAfR;AAiBH;;AACD,WAAOpB,OAAP;AACH,GAzCoB;;AA0CrBwB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMzB,OAAO,GAAG,EAAE,GAAGgC;AAAL,KAAhB;;AACA,QAAIP,MAAM,CAACU,OAAP,KAAmBzB,SAAnB,IAAgCe,MAAM,CAACU,OAAP,KAAmB,IAAvD,EAA6D;AACzDnC,MAAAA,OAAO,CAACmC,OAAR,GAAkBG,eAAe,CAACb,MAAM,CAACU,OAAR,CAAjC;AACH;;AACD,QAAIV,MAAM,CAACY,MAAP,KAAkB3B,SAAlB,IAA+Be,MAAM,CAACY,MAAP,KAAkB,IAArD,EAA2D;AACvDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAAC8B,QAAV,CAAmBC,MAAM,CAACY,MAA1B,CAAjB;AACH,KAFD,MAGK;AACDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3B,SAAjB;AACH;;AACD,QAAIe,MAAM,CAACQ,WAAP,KAAuBvB,SAAvB,IAAoCe,MAAM,CAACQ,WAAP,KAAuB,IAA/D,EAAqE;AACjEjC,MAAAA,OAAO,CAACiC,WAAR,GAAsBN,MAAM,CAACF,MAAM,CAACQ,WAAR,CAA5B;AACH,KAFD,MAGK;AACDjC,MAAAA,OAAO,CAACiC,WAAR,GAAsB,CAAtB;AACH;;AACD,QAAIR,MAAM,CAACS,gBAAP,KAA4BxB,SAA5B,IACAe,MAAM,CAACS,gBAAP,KAA4B,IADhC,EACsC;AAClClC,MAAAA,OAAO,CAACkC,gBAAR,GAA2BP,MAAM,CAACF,MAAM,CAACS,gBAAR,CAAjC;AACH,KAHD,MAIK;AACDlC,MAAAA,OAAO,CAACkC,gBAAR,GAA2B,CAA3B;AACH;;AACD,WAAOlC,OAAP;AACH,GAnEoB;;AAoErB4B,EAAAA,MAAM,CAAC5B,OAAD,EAAU;AACZ,UAAM6B,GAAG,GAAG,EAAZ;AACA7B,IAAAA,OAAO,CAACmC,OAAR,KAAoBzB,SAApB,KACKmB,GAAG,CAACM,OAAJ,GAAcI,eAAe,CAACvC,OAAO,CAACmC,OAAR,KAAoBzB,SAApB,GAAgCV,OAAO,CAACmC,OAAxC,GAAkD,IAAInB,UAAJ,EAAnD,CADlC;AAEAhB,IAAAA,OAAO,CAACqC,MAAR,KAAmB3B,SAAnB,KACKmB,GAAG,CAACQ,MAAJ,GAAarC,OAAO,CAACqC,MAAR,GACR3C,SAAS,CAACkC,MAAV,CAAiB5B,OAAO,CAACqC,MAAzB,CADQ,GAER3B,SAHV;AAIAV,IAAAA,OAAO,CAACiC,WAAR,KAAwBvB,SAAxB,KACKmB,GAAG,CAACI,WAAJ,GAAkBjC,OAAO,CAACiC,WAD/B;AAEAjC,IAAAA,OAAO,CAACkC,gBAAR,KAA6BxB,SAA7B,KACKmB,GAAG,CAACK,gBAAJ,GAAuBlC,OAAO,CAACkC,gBADpC;AAEA,WAAOL,GAAP;AACH,GAjFoB;;AAkFrBE,EAAAA,WAAW,CAACN,MAAD,EAAS;AAChB,UAAMzB,OAAO,GAAG,EAAE,GAAGgC;AAAL,KAAhB;;AACA,QAAIP,MAAM,CAACU,OAAP,KAAmBzB,SAAnB,IAAgCe,MAAM,CAACU,OAAP,KAAmB,IAAvD,EAA6D;AACzDnC,MAAAA,OAAO,CAACmC,OAAR,GAAkBV,MAAM,CAACU,OAAzB;AACH,KAFD,MAGK;AACDnC,MAAAA,OAAO,CAACmC,OAAR,GAAkB,IAAInB,UAAJ,EAAlB;AACH;;AACD,QAAIS,MAAM,CAACY,MAAP,KAAkB3B,SAAlB,IAA+Be,MAAM,CAACY,MAAP,KAAkB,IAArD,EAA2D;AACvDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAACqC,WAAV,CAAsBN,MAAM,CAACY,MAA7B,CAAjB;AACH,KAFD,MAGK;AACDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3B,SAAjB;AACH;;AACD,QAAIe,MAAM,CAACQ,WAAP,KAAuBvB,SAAvB,IAAoCe,MAAM,CAACQ,WAAP,KAAuB,IAA/D,EAAqE;AACjEjC,MAAAA,OAAO,CAACiC,WAAR,GAAsBR,MAAM,CAACQ,WAA7B;AACH,KAFD,MAGK;AACDjC,MAAAA,OAAO,CAACiC,WAAR,GAAsB,CAAtB;AACH;;AACD,QAAIR,MAAM,CAACS,gBAAP,KAA4BxB,SAA5B,IACAe,MAAM,CAACS,gBAAP,KAA4B,IADhC,EACsC;AAClClC,MAAAA,OAAO,CAACkC,gBAAR,GAA2BT,MAAM,CAACS,gBAAlC;AACH,KAHD,MAIK;AACDlC,MAAAA,OAAO,CAACkC,gBAAR,GAA2B,CAA3B;AACH;;AACD,WAAOlC,OAAP;AACH;;AA9GoB,CAAlB;AAgHP,MAAMwC,mBAAmB,GAAG;AAAEP,EAAAA,WAAW,EAAE;AAAf,CAA5B;AACA,OAAO,MAAMQ,eAAe,GAAG;AAC3B1C,EAAAA,MAAM,CAACC,OAAD,EAAUC,MAAM,GAAGT,MAAM,CAACU,MAAP,EAAnB,EAAoC;AACtC,QAAIF,OAAO,CAACqC,MAAR,KAAmB3B,SAAvB,EAAkC;AAC9BhB,MAAAA,SAAS,CAACK,MAAV,CAAiBC,OAAO,CAACqC,MAAzB,EAAiCpC,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBC,IAAlB,EAAjC,EAA2DC,MAA3D;AACH;;AACD,QAAIR,OAAO,CAACiC,WAAR,KAAwB,CAA5B,EAA+B;AAC3BhC,MAAAA,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBK,KAAlB,CAAwBX,OAAO,CAACiC,WAAhC;AACH;;AACD,WAAOhC,MAAP;AACH,GAT0B;;AAU3BW,EAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClB,UAAMC,MAAM,GAAGF,KAAK,YAAYG,UAAjB,GAA8B,IAAIvB,MAAJ,CAAWoB,KAAX,CAA9B,GAAkDA,KAAjE;AACA,QAAII,GAAG,GAAGH,MAAM,KAAKJ,SAAX,GAAuBK,MAAM,CAACG,GAA9B,GAAoCH,MAAM,CAACI,GAAP,GAAaL,MAA3D;AACA,UAAMd,OAAO,GAAG,EAAE,GAAGwC;AAAL,KAAhB;;AACA,WAAOzB,MAAM,CAACI,GAAP,GAAaF,GAApB,EAAyB;AACrB,YAAMG,GAAG,GAAGL,MAAM,CAACT,MAAP,EAAZ;;AACA,cAAQc,GAAG,KAAK,CAAhB;AACI,aAAK,CAAL;AACIpB,UAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAACkB,MAAV,CAAiBG,MAAjB,EAAyBA,MAAM,CAACT,MAAP,EAAzB,CAAjB;AACA;;AACJ,aAAK,CAAL;AACIN,UAAAA,OAAO,CAACiC,WAAR,GAAsBX,YAAY,CAACP,MAAM,CAACJ,KAAP,EAAD,CAAlC;AACA;;AACJ;AACII,UAAAA,MAAM,CAACQ,QAAP,CAAgBH,GAAG,GAAG,CAAtB;AACA;AATR;AAWH;;AACD,WAAOpB,OAAP;AACH,GA7B0B;;AA8B3BwB,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,UAAMzB,OAAO,GAAG,EAAE,GAAGwC;AAAL,KAAhB;;AACA,QAAIf,MAAM,CAACY,MAAP,KAAkB3B,SAAlB,IAA+Be,MAAM,CAACY,MAAP,KAAkB,IAArD,EAA2D;AACvDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAAC8B,QAAV,CAAmBC,MAAM,CAACY,MAA1B,CAAjB;AACH,KAFD,MAGK;AACDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3B,SAAjB;AACH;;AACD,QAAIe,MAAM,CAACQ,WAAP,KAAuBvB,SAAvB,IAAoCe,MAAM,CAACQ,WAAP,KAAuB,IAA/D,EAAqE;AACjEjC,MAAAA,OAAO,CAACiC,WAAR,GAAsBN,MAAM,CAACF,MAAM,CAACQ,WAAR,CAA5B;AACH,KAFD,MAGK;AACDjC,MAAAA,OAAO,CAACiC,WAAR,GAAsB,CAAtB;AACH;;AACD,WAAOjC,OAAP;AACH,GA7C0B;;AA8C3B4B,EAAAA,MAAM,CAAC5B,OAAD,EAAU;AACZ,UAAM6B,GAAG,GAAG,EAAZ;AACA7B,IAAAA,OAAO,CAACqC,MAAR,KAAmB3B,SAAnB,KACKmB,GAAG,CAACQ,MAAJ,GAAarC,OAAO,CAACqC,MAAR,GACR3C,SAAS,CAACkC,MAAV,CAAiB5B,OAAO,CAACqC,MAAzB,CADQ,GAER3B,SAHV;AAIAV,IAAAA,OAAO,CAACiC,WAAR,KAAwBvB,SAAxB,KACKmB,GAAG,CAACI,WAAJ,GAAkBjC,OAAO,CAACiC,WAD/B;AAEA,WAAOJ,GAAP;AACH,GAvD0B;;AAwD3BE,EAAAA,WAAW,CAACN,MAAD,EAAS;AAChB,UAAMzB,OAAO,GAAG,EAAE,GAAGwC;AAAL,KAAhB;;AACA,QAAIf,MAAM,CAACY,MAAP,KAAkB3B,SAAlB,IAA+Be,MAAM,CAACY,MAAP,KAAkB,IAArD,EAA2D;AACvDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3C,SAAS,CAACqC,WAAV,CAAsBN,MAAM,CAACY,MAA7B,CAAjB;AACH,KAFD,MAGK;AACDrC,MAAAA,OAAO,CAACqC,MAAR,GAAiB3B,SAAjB;AACH;;AACD,QAAIe,MAAM,CAACQ,WAAP,KAAuBvB,SAAvB,IAAoCe,MAAM,CAACQ,WAAP,KAAuB,IAA/D,EAAqE;AACjEjC,MAAAA,OAAO,CAACiC,WAAR,GAAsBR,MAAM,CAACQ,WAA7B;AACH,KAFD,MAGK;AACDjC,MAAAA,OAAO,CAACiC,WAAR,GAAsB,CAAtB;AACH;;AACD,WAAOjC,OAAP;AACH;;AAvE0B,CAAxB;;AAyEP,IAAI0C,UAAU,GAAG,CAAC,MAAM;AACpB,MAAI,OAAOA,UAAP,KAAsB,WAA1B,EACI,OAAOA,UAAP;AACJ,MAAI,OAAOC,IAAP,KAAgB,WAApB,EACI,OAAOA,IAAP;AACJ,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EACI,OAAOA,MAAP;AACJ,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EACI,OAAOA,MAAP;AACJ,QAAM,gCAAN;AACH,CAVgB,GAAjB;;AAWA,MAAMC,IAAI,GAAGJ,UAAU,CAACI,IAAX,KACPC,GAAD,IAASL,UAAU,CAACM,MAAX,CAAkBC,IAAlB,CAAuBF,GAAvB,EAA4B,QAA5B,EAAsCG,QAAtC,CAA+C,QAA/C,CADD,CAAb;;AAEA,SAASZ,eAAT,CAAyBS,GAAzB,EAA8B;AAC1B,QAAMI,GAAG,GAAGL,IAAI,CAACC,GAAD,CAAhB;AACA,QAAMK,GAAG,GAAG,IAAIpC,UAAJ,CAAemC,GAAG,CAACrC,MAAnB,CAAZ;;AACA,OAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACrC,MAAxB,EAAgC,EAAEuC,CAAlC,EAAqC;AACjCD,IAAAA,GAAG,CAACC,CAAD,CAAH,GAASF,GAAG,CAACG,UAAJ,CAAeD,CAAf,CAAT;AACH;;AACD,SAAOD,GAAP;AACH;;AACD,MAAMG,IAAI,GAAGb,UAAU,CAACa,IAAX,KACPJ,GAAD,IAAST,UAAU,CAACM,MAAX,CAAkBC,IAAlB,CAAuBE,GAAvB,EAA4B,QAA5B,EAAsCD,QAAtC,CAA+C,QAA/C,CADD,CAAb;;AAEA,SAASX,eAAT,CAAyBa,GAAzB,EAA8B;AAC1B,QAAMD,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACI,UAAxB,EAAoC,EAAEH,CAAtC,EAAyC;AACrCF,IAAAA,GAAG,CAAC9B,IAAJ,CAASoC,MAAM,CAACC,YAAP,CAAoBN,GAAG,CAACC,CAAD,CAAvB,CAAT;AACH;;AACD,SAAOE,IAAI,CAACJ,GAAG,CAACQ,IAAJ,CAAS,EAAT,CAAD,CAAX;AACH;;AACD,SAASrC,YAAT,CAAsBsC,IAAtB,EAA4B;AACxB,MAAIA,IAAI,CAACC,EAAL,CAAQlC,MAAM,CAACmC,gBAAf,CAAJ,EAAsC;AAClC,UAAM,IAAIpB,UAAU,CAACqB,KAAf,CAAqB,8CAArB,CAAN;AACH;;AACD,SAAOH,IAAI,CAACI,QAAL,EAAP;AACH;;AACD,IAAI1E,IAAI,CAACD,IAAL,KAAcA,IAAlB,EAAwB;AACpBC,EAAAA,IAAI,CAACD,IAAL,GAAYA,IAAZ;AACAE,EAAAA,SAAS;AACZ","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}