{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst any_1 = require(\"../../../../google/protobuf/any\");\n\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\n\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = 'ibc.core.client.v1';\nconst baseQueryClientStateRequest = {\n  clientId: ''\n};\nexports.QueryClientStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== '') {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientStateRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientStateRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = '';\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientStateRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = '';\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientStateResponse = {};\nexports.QueryClientStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientStateResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.proof = reader.bytes();\n          break;\n\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientStateResponse);\n\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = any_1.Any.fromJSON(object.clientState);\n    } else {\n      message.clientState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientStateResponse);\n\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = any_1.Any.fromPartial(object.clientState);\n    } else {\n      message.clientState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientStatesRequest = {};\nexports.QueryClientStatesRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientStatesRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientStatesRequest);\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientStatesRequest);\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientStatesResponse = {};\nexports.QueryClientStatesResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.clientStates) {\n      client_1.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientStatesResponse);\n    message.clientStates = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientStatesResponse);\n    message.clientStates = [];\n\n    if (object.clientStates !== undefined && object.clientStates !== null) {\n      for (const e of object.clientStates) {\n        message.clientStates.push(client_1.IdentifiedClientState.fromJSON(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.clientStates) {\n      obj.clientStates = message.clientStates.map(e => e ? client_1.IdentifiedClientState.toJSON(e) : undefined);\n    } else {\n      obj.clientStates = [];\n    }\n\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientStatesResponse);\n    message.clientStates = [];\n\n    if (object.clientStates !== undefined && object.clientStates !== null) {\n      for (const e of object.clientStates) {\n        message.clientStates.push(client_1.IdentifiedClientState.fromPartial(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConsensusStateRequest = {\n  clientId: '',\n  revisionNumber: long_1.default.UZERO,\n  revisionHeight: long_1.default.UZERO,\n  latestHeight: false\n};\nexports.QueryConsensusStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== '') {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n\n    if (message.latestHeight === true) {\n      writer.uint32(32).bool(message.latestHeight);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConsensusStateRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n\n        case 4:\n          message.latestHeight = reader.bool();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConsensusStateRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = long_1.default.fromString(object.revisionNumber);\n    } else {\n      message.revisionNumber = long_1.default.UZERO;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = long_1.default.fromString(object.revisionHeight);\n    } else {\n      message.revisionHeight = long_1.default.UZERO;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = Boolean(object.latestHeight);\n    } else {\n      message.latestHeight = false;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    message.latestHeight !== undefined && (obj.latestHeight = message.latestHeight);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConsensusStateRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = object.revisionNumber;\n    } else {\n      message.revisionNumber = long_1.default.UZERO;\n    }\n\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = object.revisionHeight;\n    } else {\n      message.revisionHeight = long_1.default.UZERO;\n    }\n\n    if (object.latestHeight !== undefined && object.latestHeight !== null) {\n      message.latestHeight = object.latestHeight;\n    } else {\n      message.latestHeight = false;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConsensusStateResponse = {};\nexports.QueryConsensusStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConsensusStateResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.proof = reader.bytes();\n          break;\n\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConsensusStateResponse);\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromJSON(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = bytesFromBase64(object.proof);\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConsensusStateResponse);\n\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromPartial(object.consensusState);\n    } else {\n      message.consensusState = undefined;\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = object.proof;\n    } else {\n      message.proof = new Uint8Array();\n    }\n\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    } else {\n      message.proofHeight = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConsensusStatesRequest = {\n  clientId: ''\n};\nexports.QueryConsensusStatesRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== '') {\n      writer.uint32(10).string(message.clientId);\n    }\n\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConsensusStatesRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConsensusStatesRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = String(object.clientId);\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConsensusStatesRequest);\n\n    if (object.clientId !== undefined && object.clientId !== null) {\n      message.clientId = object.clientId;\n    } else {\n      message.clientId = '';\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryConsensusStatesResponse = {};\nexports.QueryConsensusStatesResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.consensusStates) {\n      client_1.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConsensusStatesResponse);\n    message.consensusStates = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n          break;\n\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConsensusStatesResponse);\n    message.consensusStates = [];\n\n    if (object.consensusStates !== undefined && object.consensusStates !== null) {\n      for (const e of object.consensusStates) {\n        message.consensusStates.push(client_1.ConsensusStateWithHeight.fromJSON(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.consensusStates) {\n      obj.consensusStates = message.consensusStates.map(e => e ? client_1.ConsensusStateWithHeight.toJSON(e) : undefined);\n    } else {\n      obj.consensusStates = [];\n    }\n\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConsensusStatesResponse);\n    message.consensusStates = [];\n\n    if (object.consensusStates !== undefined && object.consensusStates !== null) {\n      for (const e of object.consensusStates) {\n        message.consensusStates.push(client_1.ConsensusStateWithHeight.fromPartial(e));\n      }\n    }\n\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    } else {\n      message.pagination = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseQueryClientParamsRequest = {};\nexports.QueryClientParamsRequest = {\n  encode(_, writer = minimal_1.default.Writer.create()) {\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientParamsRequest);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(_) {\n    const message = Object.assign({}, baseQueryClientParamsRequest);\n    return message;\n  },\n\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n\n  fromPartial(_) {\n    const message = Object.assign({}, baseQueryClientParamsRequest);\n    return message;\n  }\n\n};\nconst baseQueryClientParamsResponse = {};\nexports.QueryClientParamsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.params !== undefined) {\n      client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientParamsResponse);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.params = client_1.Params.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientParamsResponse);\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = client_1.Params.fromJSON(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryClientParamsResponse);\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = client_1.Params.fromPartial(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    return message;\n  }\n\n};\n\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n\n  ClientState(request) {\n    const data = exports.QueryClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientState', data);\n    return promise.then(data => exports.QueryClientStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ClientStates(request) {\n    const data = exports.QueryClientStatesRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientStates', data);\n    return promise.then(data => exports.QueryClientStatesResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ConsensusState(request) {\n    const data = exports.QueryConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.client.v1.Query', 'ConsensusState', data);\n    return promise.then(data => exports.QueryConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ConsensusStates(request) {\n    const data = exports.QueryConsensusStatesRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.client.v1.Query', 'ConsensusStates', data);\n    return promise.then(data => exports.QueryConsensusStatesResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n  ClientParams(request) {\n    const data = exports.QueryClientParamsRequest.encode(request).finish();\n    const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientParams', data);\n    return promise.then(data => exports.QueryClientParamsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n\n}\n\nexports.QueryClientImpl = QueryClientImpl;\n\nvar globalThis = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, 'base64').toString('binary'));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, 'binary').toString('base64'));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(''));\n}","map":{"version":3,"sources":["../../../../../../src/codec/ibc/core/client/v1/query.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryClientImpl = exports.QueryClientParamsResponse = exports.QueryClientParamsRequest = exports.QueryConsensusStatesResponse = exports.QueryConsensusStatesRequest = exports.QueryConsensusStateResponse = exports.QueryConsensusStateRequest = exports.QueryClientStatesResponse = exports.QueryClientStatesRequest = exports.QueryClientStateResponse = exports.QueryClientStateRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = 'ibc.core.client.v1';\nconst baseQueryClientStateRequest = { clientId: '' };\nexports.QueryClientStateRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientStateRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientStateRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientStateRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        return message;\n    },\n};\nconst baseQueryClientStateResponse = {};\nexports.QueryClientStateResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientState !== undefined) {\n            any_1.Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientStateResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientStateResponse);\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? any_1.Any.toJSON(message.clientState)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientStateResponse);\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = any_1.Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryClientStatesRequest = {};\nexports.QueryClientStatesRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientStatesRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientStatesRequest);\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageRequest.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientStatesRequest);\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryClientStatesResponse = {};\nexports.QueryClientStatesResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.clientStates) {\n            client_1.IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientStatesResponse);\n        message.clientStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientStates.push(client_1.IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientStatesResponse);\n        message.clientStates = [];\n        if (object.clientStates !== undefined && object.clientStates !== null) {\n            for (const e of object.clientStates) {\n                message.clientStates.push(client_1.IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clientStates) {\n            obj.clientStates = message.clientStates.map((e) => e ? client_1.IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientStates = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageResponse.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientStatesResponse);\n        message.clientStates = [];\n        if (object.clientStates !== undefined && object.clientStates !== null) {\n            for (const e of object.clientStates) {\n                message.clientStates.push(client_1.IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConsensusStateRequest = {\n    clientId: '',\n    revisionNumber: long_1.default.UZERO,\n    revisionHeight: long_1.default.UZERO,\n    latestHeight: false,\n};\nexports.QueryConsensusStateRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (!message.revisionNumber.isZero()) {\n            writer.uint32(16).uint64(message.revisionNumber);\n        }\n        if (!message.revisionHeight.isZero()) {\n            writer.uint32(24).uint64(message.revisionHeight);\n        }\n        if (message.latestHeight === true) {\n            writer.uint32(32).bool(message.latestHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConsensusStateRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.revisionNumber = reader.uint64();\n                    break;\n                case 3:\n                    message.revisionHeight = reader.uint64();\n                    break;\n                case 4:\n                    message.latestHeight = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConsensusStateRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = long_1.default.fromString(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = long_1.default.UZERO;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = long_1.default.fromString(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = long_1.default.UZERO;\n        }\n        if (object.latestHeight !== undefined && object.latestHeight !== null) {\n            message.latestHeight = Boolean(object.latestHeight);\n        }\n        else {\n            message.latestHeight = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n        message.latestHeight !== undefined &&\n            (obj.latestHeight = message.latestHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConsensusStateRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = long_1.default.UZERO;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = long_1.default.UZERO;\n        }\n        if (object.latestHeight !== undefined && object.latestHeight !== null) {\n            message.latestHeight = object.latestHeight;\n        }\n        else {\n            message.latestHeight = false;\n        }\n        return message;\n    },\n};\nconst baseQueryConsensusStateResponse = {};\nexports.QueryConsensusStateResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.consensusState !== undefined) {\n            any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proof.length !== 0) {\n            writer.uint32(18).bytes(message.proof);\n        }\n        if (message.proofHeight !== undefined) {\n            client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConsensusStateResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusState = any_1.Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proof = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConsensusStateResponse);\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = bytesFromBase64(object.proof);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? any_1.Any.toJSON(message.consensusState)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? client_1.Height.toJSON(message.proofHeight)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConsensusStateResponse);\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = any_1.Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConsensusStatesRequest = { clientId: '' };\nexports.QueryConsensusStatesRequest = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConsensusStatesRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConsensusStatesRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageRequest.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConsensusStatesRequest);\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryConsensusStatesResponse = {};\nexports.QueryConsensusStatesResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.consensusStates) {\n            client_1.ConsensusStateWithHeight.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryConsensusStatesResponse);\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusStates.push(client_1.ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryConsensusStatesResponse);\n        message.consensusStates = [];\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(client_1.ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? client_1.ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        message.pagination !== undefined &&\n            (obj.pagination = message.pagination\n                ? pagination_1.PageResponse.toJSON(message.pagination)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryConsensusStatesResponse);\n        message.consensusStates = [];\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(client_1.ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n};\nconst baseQueryClientParamsRequest = {};\nexports.QueryClientParamsRequest = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientParamsRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseQueryClientParamsRequest);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseQueryClientParamsRequest);\n        return message;\n    },\n};\nconst baseQueryClientParamsResponse = {};\nexports.QueryClientParamsResponse = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.params !== undefined) {\n            client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.default.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseQueryClientParamsResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = client_1.Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseQueryClientParamsResponse);\n        if (object.params !== undefined && object.params !== null) {\n            message.params = client_1.Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseQueryClientParamsResponse);\n        if (object.params !== undefined && object.params !== null) {\n            message.params = client_1.Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n};\nclass QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ClientState(request) {\n        const data = exports.QueryClientStateRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientState', data);\n        return promise.then((data) => exports.QueryClientStateResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ClientStates(request) {\n        const data = exports.QueryClientStatesRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientStates', data);\n        return promise.then((data) => exports.QueryClientStatesResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConsensusState(request) {\n        const data = exports.QueryConsensusStateRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Query', 'ConsensusState', data);\n        return promise.then((data) => exports.QueryConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ConsensusStates(request) {\n        const data = exports.QueryConsensusStatesRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Query', 'ConsensusStates', data);\n        return promise.then((data) => exports.QueryConsensusStatesResponse.decode(new minimal_1.default.Reader(data)));\n    }\n    ClientParams(request) {\n        const data = exports.QueryClientParamsRequest.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Query', 'ClientParams', data);\n        return promise.then((data) => exports.QueryClientParamsResponse.decode(new minimal_1.default.Reader(data)));\n    }\n}\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"script"}