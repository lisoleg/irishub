{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n  delegatorAddress: \"\",\n  withdrawAddress: \"\"\n};\nexport const DelegatorWithdrawInfo = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.withdrawAddress !== \"\") {\n      writer.uint32(18).string(message.withdrawAddress);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDelegatorWithdrawInfo\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.withdrawAddress = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseDelegatorWithdrawInfo\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n      message.withdrawAddress = String(object.withdrawAddress);\n    } else {\n      message.withdrawAddress = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseDelegatorWithdrawInfo\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n      message.withdrawAddress = object.withdrawAddress;\n    } else {\n      message.withdrawAddress = \"\";\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorOutstandingRewardsRecord = {\n  validatorAddress: \"\"\n};\nexport const ValidatorOutstandingRewardsRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    for (const v of message.outstandingRewards) {\n      DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorOutstandingRewardsRecord\n    };\n    message.outstandingRewards = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorOutstandingRewardsRecord\n    };\n    message.outstandingRewards = [];\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n      for (const e of object.outstandingRewards) {\n        message.outstandingRewards.push(DecCoin.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n\n    if (message.outstandingRewards) {\n      obj.outstandingRewards = message.outstandingRewards.map(e => e ? DecCoin.toJSON(e) : undefined);\n    } else {\n      obj.outstandingRewards = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorOutstandingRewardsRecord\n    };\n    message.outstandingRewards = [];\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n      for (const e of object.outstandingRewards) {\n        message.outstandingRewards.push(DecCoin.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n  validatorAddress: \"\"\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    if (message.accumulated !== undefined) {\n      ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorAccumulatedCommissionRecord\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorAccumulatedCommissionRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.accumulated !== undefined && object.accumulated !== null) {\n      message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n    } else {\n      message.accumulated = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorAccumulatedCommissionRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.accumulated !== undefined && object.accumulated !== null) {\n      message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n    } else {\n      message.accumulated = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorHistoricalRewardsRecord = {\n  validatorAddress: \"\",\n  period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    if (message.period !== 0) {\n      writer.uint32(16).uint64(message.period);\n    }\n\n    if (message.rewards !== undefined) {\n      ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorHistoricalRewardsRecord\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.period = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorHistoricalRewardsRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = Number(object.period);\n    } else {\n      message.period = 0;\n    }\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n    } else {\n      message.rewards = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.period !== undefined && (obj.period = message.period);\n    message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorHistoricalRewardsRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = object.period;\n    } else {\n      message.period = 0;\n    }\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n    } else {\n      message.rewards = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorCurrentRewardsRecord = {\n  validatorAddress: \"\"\n};\nexport const ValidatorCurrentRewardsRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    if (message.rewards !== undefined) {\n      ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorCurrentRewardsRecord\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorCurrentRewardsRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n    } else {\n      message.rewards = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorCurrentRewardsRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.rewards !== undefined && object.rewards !== null) {\n      message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n    } else {\n      message.rewards = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseDelegatorStartingInfoRecord = {\n  delegatorAddress: \"\",\n  validatorAddress: \"\"\n};\nexport const DelegatorStartingInfoRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.delegatorAddress !== \"\") {\n      writer.uint32(10).string(message.delegatorAddress);\n    }\n\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(18).string(message.validatorAddress);\n    }\n\n    if (message.startingInfo !== undefined) {\n      DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseDelegatorStartingInfoRecord\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.delegatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 3:\n          message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseDelegatorStartingInfoRecord\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = String(object.delegatorAddress);\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.startingInfo !== undefined && object.startingInfo !== null) {\n      message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n    } else {\n      message.startingInfo = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseDelegatorStartingInfoRecord\n    };\n\n    if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n      message.delegatorAddress = object.delegatorAddress;\n    } else {\n      message.delegatorAddress = \"\";\n    }\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.startingInfo !== undefined && object.startingInfo !== null) {\n      message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n    } else {\n      message.startingInfo = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseValidatorSlashEventRecord = {\n  validatorAddress: \"\",\n  height: 0,\n  period: 0\n};\nexport const ValidatorSlashEventRecord = {\n  encode(message, writer = Writer.create()) {\n    if (message.validatorAddress !== \"\") {\n      writer.uint32(10).string(message.validatorAddress);\n    }\n\n    if (message.height !== 0) {\n      writer.uint32(16).uint64(message.height);\n    }\n\n    if (message.period !== 0) {\n      writer.uint32(24).uint64(message.period);\n    }\n\n    if (message.validatorSlashEvent !== undefined) {\n      ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseValidatorSlashEventRecord\n    };\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.validatorAddress = reader.string();\n          break;\n\n        case 2:\n          message.height = longToNumber(reader.uint64());\n          break;\n\n        case 3:\n          message.period = longToNumber(reader.uint64());\n          break;\n\n        case 4:\n          message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseValidatorSlashEventRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = String(object.validatorAddress);\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = Number(object.height);\n    } else {\n      message.height = 0;\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = Number(object.period);\n    } else {\n      message.period = 0;\n    }\n\n    if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n      message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n    } else {\n      message.validatorSlashEvent = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n    message.height !== undefined && (obj.height = message.height);\n    message.period !== undefined && (obj.period = message.period);\n    message.validatorSlashEvent !== undefined && (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseValidatorSlashEventRecord\n    };\n\n    if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n      message.validatorAddress = object.validatorAddress;\n    } else {\n      message.validatorAddress = \"\";\n    }\n\n    if (object.height !== undefined && object.height !== null) {\n      message.height = object.height;\n    } else {\n      message.height = 0;\n    }\n\n    if (object.period !== undefined && object.period !== null) {\n      message.period = object.period;\n    } else {\n      message.period = 0;\n    }\n\n    if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n      message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n    } else {\n      message.validatorSlashEvent = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseGenesisState = {\n  previousProposer: \"\"\n};\nexport const GenesisState = {\n  encode(message, writer = Writer.create()) {\n    if (message.params !== undefined) {\n      Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n\n    if (message.feePool !== undefined) {\n      FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n    }\n\n    for (const v of message.delegatorWithdrawInfos) {\n      DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n\n    if (message.previousProposer !== \"\") {\n      writer.uint32(34).string(message.previousProposer);\n    }\n\n    for (const v of message.outstandingRewards) {\n      ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n    }\n\n    for (const v of message.validatorAccumulatedCommissions) {\n      ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n\n    for (const v of message.validatorHistoricalRewards) {\n      ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n    }\n\n    for (const v of message.validatorCurrentRewards) {\n      ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n    }\n\n    for (const v of message.delegatorStartingInfos) {\n      DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n    }\n\n    for (const v of message.validatorSlashEvents) {\n      ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseGenesisState\n    };\n    message.delegatorWithdrawInfos = [];\n    message.outstandingRewards = [];\n    message.validatorAccumulatedCommissions = [];\n    message.validatorHistoricalRewards = [];\n    message.validatorCurrentRewards = [];\n    message.delegatorStartingInfos = [];\n    message.validatorSlashEvents = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.params = Params.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.feePool = FeePool.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n          break;\n\n        case 4:\n          message.previousProposer = reader.string();\n          break;\n\n        case 5:\n          message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n          break;\n\n        case 6:\n          message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n          break;\n\n        case 7:\n          message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n          break;\n\n        case 8:\n          message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n          break;\n\n        case 9:\n          message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n          break;\n\n        case 10:\n          message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = { ...baseGenesisState\n    };\n    message.delegatorWithdrawInfos = [];\n    message.outstandingRewards = [];\n    message.validatorAccumulatedCommissions = [];\n    message.validatorHistoricalRewards = [];\n    message.validatorCurrentRewards = [];\n    message.delegatorStartingInfos = [];\n    message.validatorSlashEvents = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromJSON(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.feePool !== undefined && object.feePool !== null) {\n      message.feePool = FeePool.fromJSON(object.feePool);\n    } else {\n      message.feePool = undefined;\n    }\n\n    if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n      for (const e of object.delegatorWithdrawInfos) {\n        message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n      }\n    }\n\n    if (object.previousProposer !== undefined && object.previousProposer !== null) {\n      message.previousProposer = String(object.previousProposer);\n    } else {\n      message.previousProposer = \"\";\n    }\n\n    if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n      for (const e of object.outstandingRewards) {\n        message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n      }\n    }\n\n    if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n      for (const e of object.validatorAccumulatedCommissions) {\n        message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n      }\n    }\n\n    if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n      for (const e of object.validatorHistoricalRewards) {\n        message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n      }\n    }\n\n    if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n      for (const e of object.validatorCurrentRewards) {\n        message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n      }\n    }\n\n    if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n      for (const e of object.delegatorStartingInfos) {\n        message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n      }\n    }\n\n    if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n      for (const e of object.validatorSlashEvents) {\n        message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n    message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n\n    if (message.delegatorWithdrawInfos) {\n      obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map(e => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n    } else {\n      obj.delegatorWithdrawInfos = [];\n    }\n\n    message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n\n    if (message.outstandingRewards) {\n      obj.outstandingRewards = message.outstandingRewards.map(e => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n    } else {\n      obj.outstandingRewards = [];\n    }\n\n    if (message.validatorAccumulatedCommissions) {\n      obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map(e => e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined);\n    } else {\n      obj.validatorAccumulatedCommissions = [];\n    }\n\n    if (message.validatorHistoricalRewards) {\n      obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map(e => e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined);\n    } else {\n      obj.validatorHistoricalRewards = [];\n    }\n\n    if (message.validatorCurrentRewards) {\n      obj.validatorCurrentRewards = message.validatorCurrentRewards.map(e => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n    } else {\n      obj.validatorCurrentRewards = [];\n    }\n\n    if (message.delegatorStartingInfos) {\n      obj.delegatorStartingInfos = message.delegatorStartingInfos.map(e => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n    } else {\n      obj.delegatorStartingInfos = [];\n    }\n\n    if (message.validatorSlashEvents) {\n      obj.validatorSlashEvents = message.validatorSlashEvents.map(e => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n    } else {\n      obj.validatorSlashEvents = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = { ...baseGenesisState\n    };\n    message.delegatorWithdrawInfos = [];\n    message.outstandingRewards = [];\n    message.validatorAccumulatedCommissions = [];\n    message.validatorHistoricalRewards = [];\n    message.validatorCurrentRewards = [];\n    message.delegatorStartingInfos = [];\n    message.validatorSlashEvents = [];\n\n    if (object.params !== undefined && object.params !== null) {\n      message.params = Params.fromPartial(object.params);\n    } else {\n      message.params = undefined;\n    }\n\n    if (object.feePool !== undefined && object.feePool !== null) {\n      message.feePool = FeePool.fromPartial(object.feePool);\n    } else {\n      message.feePool = undefined;\n    }\n\n    if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n      for (const e of object.delegatorWithdrawInfos) {\n        message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n      }\n    }\n\n    if (object.previousProposer !== undefined && object.previousProposer !== null) {\n      message.previousProposer = object.previousProposer;\n    } else {\n      message.previousProposer = \"\";\n    }\n\n    if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n      for (const e of object.outstandingRewards) {\n        message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n      }\n    }\n\n    if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n      for (const e of object.validatorAccumulatedCommissions) {\n        message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n      }\n    }\n\n    if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n      for (const e of object.validatorHistoricalRewards) {\n        message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n      }\n    }\n\n    if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n      for (const e of object.validatorCurrentRewards) {\n        message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n      }\n    }\n\n    if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n      for (const e of object.delegatorStartingInfos) {\n        message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n      }\n    }\n\n    if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n      for (const e of object.validatorSlashEvents) {\n        message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n\n  return long.toNumber();\n}\n\nif (util.Long !== Long) {\n  util.Long = Long;\n  configure();\n}","map":{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js"],"names":["Long","util","configure","Writer","Reader","DecCoin","ValidatorAccumulatedCommission","ValidatorHistoricalRewards","ValidatorCurrentRewards","DelegatorStartingInfo","ValidatorSlashEvent","Params","FeePool","protobufPackage","baseDelegatorWithdrawInfo","delegatorAddress","withdrawAddress","DelegatorWithdrawInfo","encode","message","writer","create","uint32","string","decode","input","length","reader","Uint8Array","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseValidatorOutstandingRewardsRecord","validatorAddress","ValidatorOutstandingRewardsRecord","v","outstandingRewards","fork","ldelim","push","e","map","baseValidatorAccumulatedCommissionRecord","ValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","period","ValidatorHistoricalRewardsRecord","uint64","rewards","longToNumber","Number","baseValidatorCurrentRewardsRecord","ValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","DelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","height","ValidatorSlashEventRecord","validatorSlashEvent","baseGenesisState","previousProposer","GenesisState","params","feePool","delegatorWithdrawInfos","validatorAccumulatedCommissions","validatorHistoricalRewards","validatorCurrentRewards","delegatorStartingInfos","validatorSlashEvents","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"]},"metadata":{},"sourceType":"module"}