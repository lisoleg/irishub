{"version":3,"sources":["../../../../src/modules/common/transfers/transfers.js"],"names":["getDefaultState","GetTxsEvent","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","Object","assign","QUERY","query","key","value","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getGetTxsEvent","params","actions","init","dispatch","rootGetters","console","log","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","ServiceGetTxsEvent","subscribe","all","axios","get","event","data","pagination","next_key","next_values","keys","prop","Array","isArray","error","SpVuexError"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport SpVuexError from '../../../errors/SpVuexError'\n\nconst getDefaultState = () => {\n\treturn {\n\t\tGetTxsEvent: {},\n\t\t_Subscriptions: new Set(),\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tQUERY(state, { query, key, value }) {\n\t\t\tstate[query][JSON.stringify(key)] = value\n\t\t},\n\t\tSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.add(subscription)\n\t\t},\n\t\tUNSUBSCRIBE(state, subscription) {\n\t\t\tstate._Subscriptions.delete(subscription)\n\t\t},\n\t},\n\tgetters: {\n\t\tgetGetTxsEvent: (state) => (params = {}) => {\n\t\t\treturn state.GetTxsEvent[JSON.stringify(params)] ?? {}\n\t\t},\n\t},\n\tactions: {\n\t\tinit({ dispatch, rootGetters }) {\n\t\t\tconsole.log('Vuex nodule: common.transfers initialized!')\n\t\t\tif (rootGetters['common/env/client']) {\n\t\t\t\trootGetters['common/env/client'].on('newblock', () => {\n\t\t\t\t\tdispatch('StoreUpdate')\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tresetState({ commit }) {\n\t\t\tcommit('RESET_STATE')\n\t\t},\n\t\tunsubscribe({ commit }, subscription) {\n\t\t\tcommit('UNSUBSCRIBE', subscription)\n\t\t},\n\t\tasync StoreUpdate({ state, dispatch }) {\n\t\t\tstate._Subscriptions.forEach((subscription) => {\n\t\t\t\tdispatch(subscription.action, subscription.payload)\n\t\t\t})\n\t\t},\n\t\tasync ServiceGetTxsEvent({ commit, rootGetters }, { subscribe = false, all = true, ...key }) {\n\t\t\ttry {\n\t\t\t\tlet value = (\n\t\t\t\t\tawait axios.get(rootGetters['common/env/apiCosmos'] + '/cosmos/tx/v1beta1/txs?events=' + key.event)\n\t\t\t\t).data\n\n\t\t\t\twhile (all && value.pagination && value.pagination.next_key != null) {\n\t\t\t\t\tlet next_values = await axios.get(\n\t\t\t\t\t\trootGetters['common/env/apiCosmos'] +\n\t\t\t\t\t\t\t'/cosmos/tx/v1beta1/txs?events=' +\n\t\t\t\t\t\t\tkey.event +\n\t\t\t\t\t\t\t'&pagination.key=' +\n\t\t\t\t\t\t\tvalue.pagination.next_key,\n\t\t\t\t\t).data\n\n\t\t\t\t\tfor (let prop of Object.keys(next_values)) {\n\t\t\t\t\t\tif (Array.isArray(next_values[prop])) {\n\t\t\t\t\t\t\tvalue[prop] = [...value[prop], ...next_values[prop]]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue[prop] = next_values[prop]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(value)\n\t\t\t\t}\n\n\t\t\t\tcommit('QUERY', { query: 'GetTxsEvent', key, value })\n\t\t\t\tif (subscribe) commit('SUBSCRIBE', { action: 'ServiceGetTxsEvent', payload: key })\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\n\t\t\t\t\tnew SpVuexError('QueryClient:ServiceGetTxsEvent', 'API Node Unavailable. Could not perform query.'),\n\t\t\t\t)\n\t\t\t}\n\t\t},\n\t},\n}\n"],"file":"transfers.js"}