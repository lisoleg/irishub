{"version":3,"sources":["../../../../src/modules/common/relayers/relayers.js"],"names":["ibcRegistry","Registry","defaultRegistryTypes","MsgCreateClient","MsgUpdateClient","MsgConnectionOpenInit","MsgConnectionOpenTry","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgChannelOpenInit","MsgChannelOpenTry","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgRecvPacket","MsgAcknowledgement","MsgTimeout","MsgTransfer","getDefaultState","relayers","transientLog","msg","relayerLinks","state","namespaced","getters","getRelayer","name","find","x","getRelayers","getRelayerLink","chainFromChannel","channel","status","src","channelId","chainIdB","chainToChannel","dest","log","mutations","RESET_STATE","Object","assign","SET_RELAYERS","CREATE_RELAYER","relayer","LINK_RELAYER","link","linkDetails","relayerIndex","findIndex","CONNECT_RELAYER","channelDetails","RUN_RELAYER","running","STOP_RELAYER","SET_LOG_MSG","LAST_QUERIED_HEIGHTS","heights","actions","init","commit","rootGetters","dispatch","forEach","createRelayer","prefix","endpoint","gasPrice","chainId","external","DirectSecp256k1HdWallet","fromMnemonic","hdPaths","signerA","signerB","getAccounts","accountB","optionsA","GasPrice","fromString","registry","Tendermint34Client","connect","tmClientA","signingClientA","StarportSigningClient","getChainId","chainIdA","optionsB","tmClientB","signingClientB","targetAddress","address","root","loadRelayer","SpVuexError","accountA","info","error","warn","verbose","debug","logger","clientA","IbcClient","clientB","Link","createWithExistingConnections","endA","connectionID","endB","linkData","clientID","console","linkRelayer","createWithNewConnections","connectRelayer","relayerLink","createChannel","channels","channelData","runRelayer","options","poll","maxAgeDest","maxAgeSrc","stopRelayer","relayerLoop","nextRelay","checkAndRelayPacketsAndAcks","updateClientIfStale"],"mappings":"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","sourcesContent":["import StarportSigningClient from './libs/starportSigningClient'\nimport SpVuexError from '../../../errors/SpVuexError'\nimport { IbcClient, Link } from '@confio/relayer/build'\nimport { Registry, DirectSecp256k1HdWallet } from '@cosmjs/proto-signing'\nimport { stringToPath } from '@cosmjs/crypto'\nimport { sleep } from '@cosmjs/utils'\nimport { GasPrice } from '@cosmjs/launchpad'\nimport { defaultRegistryTypes } from '@cosmjs/stargate'\nimport { Tendermint34Client } from '@cosmjs/tendermint-rpc'\nimport { MsgTransfer } from '@confio/relayer/build/codec/ibc/applications/transfer/v1/tx'\nimport {\n\tMsgAcknowledgement,\n\tMsgChannelOpenAck,\n\tMsgChannelOpenConfirm,\n\tMsgChannelOpenInit,\n\tMsgChannelOpenTry,\n\tMsgRecvPacket,\n\tMsgTimeout,\n} from '@confio/relayer/build/codec/ibc/core/channel/v1/tx'\nimport { MsgCreateClient, MsgUpdateClient } from '@confio/relayer/build/codec/ibc/core/client/v1/tx'\nimport {\n\tMsgConnectionOpenAck,\n\tMsgConnectionOpenConfirm,\n\tMsgConnectionOpenInit,\n\tMsgConnectionOpenTry,\n} from '@confio/relayer/build/codec/ibc/core/connection/v1/tx'\n\nfunction ibcRegistry() {\n\treturn new Registry([\n\t\t...defaultRegistryTypes,\n\t\t['/ibc.core.client.v1.MsgCreateClient', MsgCreateClient],\n\t\t['/ibc.core.client.v1.MsgUpdateClient', MsgUpdateClient],\n\t\t['/ibc.core.connection.v1.MsgConnectionOpenInit', MsgConnectionOpenInit],\n\t\t['/ibc.core.connection.v1.MsgConnectionOpenTry', MsgConnectionOpenTry],\n\t\t['/ibc.core.connection.v1.MsgConnectionOpenAck', MsgConnectionOpenAck],\n\t\t['/ibc.core.connection.v1.MsgConnectionOpenConfirm', MsgConnectionOpenConfirm],\n\t\t['/ibc.core.channel.v1.MsgChannelOpenInit', MsgChannelOpenInit],\n\t\t['/ibc.core.channel.v1.MsgChannelOpenTry', MsgChannelOpenTry],\n\t\t['/ibc.core.channel.v1.MsgChannelOpenAck', MsgChannelOpenAck],\n\t\t['/ibc.core.channel.v1.MsgChannelOpenConfirm', MsgChannelOpenConfirm],\n\t\t['/ibc.core.channel.v1.MsgRecvPacket', MsgRecvPacket],\n\t\t['/ibc.core.channel.v1.MsgAcknowledgement', MsgAcknowledgement],\n\t\t['/ibc.core.channel.v1.MsgTimeout', MsgTimeout],\n\t\t['/ibc.applications.transfer.v1.MsgTransfer', MsgTransfer],\n\t])\n}\nconst getDefaultState = () => {\n\treturn {\n\t\trelayers: [],\n\t\ttransientLog: {\n\t\t\tmsg: '',\n\t\t},\n\t\trelayerLinks: {},\n\t}\n}\n// initial state\nconst state = getDefaultState()\nexport default {\n\tnamespaced: true,\n\tstate,\n\tgetters: {\n\t\tgetRelayer: (state) => (name) => {\n\t\t\treturn state.relayers.find((x) => x.name == name)\n\t\t},\n\t\tgetRelayers: (state) => state.relayers,\n\t\tgetRelayerLink: (state) => (name) => {\n\t\t\treturn state.relayerLinks[name]\n\t\t},\n\t\tchainFromChannel: (state) => (channel) => {\n\t\t\treturn state.relayers.find((x) => x.status == 'connected' && x.src?.channelId == channel)?.chainIdB ?? channel\n\t\t},\n\t\tchainToChannel: (state) => (channel) => {\n\t\t\treturn state.relayers.find((x) => x.status == 'connected' && x.dest?.channelId == channel)?.chainIdB ?? channel\n\t\t},\n\t\tlog: (state) => state.transientLog.msg,\n\t},\n\tmutations: {\n\t\tRESET_STATE(state) {\n\t\t\tObject.assign(state, getDefaultState())\n\t\t},\n\t\tSET_RELAYERS(state, relayers) {\n\t\t\tstate.relayers = relayers\n\t\t},\n\t\tCREATE_RELAYER(state, relayer) {\n\t\t\tstate.relayers = [...state.relayers, relayer]\n\t\t},\n\t\tLINK_RELAYER(state, { name, link, ...linkDetails }) {\n\t\t\tlet relayerIndex = state.relayers.findIndex((x) => x.name == name)\n\t\t\tif (state.relayers[relayerIndex].status == 'connected') {\n\t\t\t\tstate.relayers[relayerIndex] = {\n\t\t\t\t\t...state.relayers[relayerIndex],\n\t\t\t\t\t...linkDetails,\n\t\t\t\t\tstatus: 'connected',\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstate.relayers[relayerIndex] = {\n\t\t\t\t\t...state.relayers[relayerIndex],\n\t\t\t\t\t...linkDetails,\n\t\t\t\t\tstatus: 'linked',\n\t\t\t\t}\n\t\t\t}\n\t\t\tstate.relayerLinks[name] = link\n\t\t},\n\t\tCONNECT_RELAYER(state, { name, ...channelDetails }) {\n\t\t\tlet relayerIndex = state.relayers.findIndex((x) => x.name == name)\n\t\t\tstate.relayers[relayerIndex] = {\n\t\t\t\t...state.relayers[relayerIndex],\n\t\t\t\t...channelDetails,\n\t\t\t\tstatus: 'connected',\n\t\t\t}\n\t\t},\n\t\tRUN_RELAYER(state, name) {\n\t\t\tstate.relayers.find((x) => x.name == name).running = true\n\t\t},\n\t\tSTOP_RELAYER(state, name) {\n\t\t\tstate.relayers.find((x) => x.name == name).running = false\n\t\t},\n\t\tSET_LOG_MSG(state, msg) {\n\t\t\tstate.transientLog.msg = msg\n\t\t},\n\t\tLAST_QUERIED_HEIGHTS(state, { name, heights }) {\n\t\t\tstate.relayers.find((x) => x.name == name).heights = heights\n\t\t},\n\t},\n\tactions: {\n\t\tinit({ commit, rootGetters, dispatch }) {\n\t\t\tcommit('RESET_STATE')\n\t\t\tconst relayers = rootGetters['common/wallet/relayers']\n\t\t\tcommit('SET_RELAYERS', relayers)\n\t\t\trelayers.forEach((relayer) => {\n\t\t\t\tif (relayer.status == 'linked' || relayer.status == 'connected') {\n\t\t\t\t\tdispatch('loadRelayer', relayer.name)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync createRelayer(\n\t\t\t{ commit, rootGetters, getters, dispatch },\n\t\t\t{ name, prefix, endpoint, gasPrice, chainId, channelId, external },\n\t\t) {\n\t\t\tlet relayer\n\t\t\tif (!external) {\n\t\t\t\trelayer = {\n\t\t\t\t\tname,\n\t\t\t\t\tprefix,\n\t\t\t\t\tendpoint,\n\t\t\t\t\tgasPrice,\n\t\t\t\t\texternal: false,\n\t\t\t\t\tstatus: 'created',\n\t\t\t\t\theights: {},\n\t\t\t\t\trunning: false,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trelayer = {\n\t\t\t\t\tname,\n\t\t\t\t\texternal: true,\n\t\t\t\t\tstatus: 'connected',\n\t\t\t\t\tchainIdB: chainId,\n\t\t\t\t\tsrc: {\n\t\t\t\t\t\tchannelId: channelId,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!external) {\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t})\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t})\n\t\t\t\tconst [accountB] = await signerB.getAccounts()\n\t\t\t\tconst optionsA = {\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(rootGetters['common/env/apiTendermint'])\n\t\t\t\tconst signingClientA = new StarportSigningClient(tmClientA, signerA, optionsA)\n\t\t\t\trelayer.chainIdA = await signingClientA.getChainId()\n\t\t\t\tconst optionsB = {\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(relayer.endpoint)\n\t\t\t\tconst signingClientB = new StarportSigningClient(tmClientB, signerB, optionsB)\n\t\t\t\trelayer.chainIdB = await signingClientB.getChainId()\n\t\t\t\trelayer.targetAddress = accountB.address\n\t\t\t}\n\t\t\tcommit('CREATE_RELAYER', relayer)\n\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\troot: true,\n\t\t\t})\n\t\t},\n\t\tasync loadRelayer({ commit, rootGetters, getters, dispatch }, name) {\n\t\t\tconst relayer = getters['getRelayer'](name)\n\t\t\tif (relayer.status !== 'linked' && relayer.status !== 'connected') {\n\t\t\t\tthrow new SpVuexError('relayers:connectRelayer', 'Relayer already connected.')\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t})\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t})\n\t\t\t\tconst [accountA] = await signerA.getAccounts()\n\t\t\t\tconst [accountB] = await signerB.getAccounts()\n\t\t\t\tconst transientLog = {\n\t\t\t\t\tlog: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tinfo: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\terror: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\twarn: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tverbose: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tdebug: () => {\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tconst optionsA = {\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(rootGetters['common/env/apiTendermint'])\n\t\t\t\tconst signingClientA = new StarportSigningClient(tmClientA, signerA, optionsA)\n\t\t\t\tconst chainIdA = await signingClientA.getChainId()\n\t\t\t\tconst optionsB = {\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(relayer.endpoint)\n\t\t\t\tconst signingClientB = new StarportSigningClient(tmClientB, signerB, optionsB)\n\t\t\t\tconst chainIdB = await signingClientB.getChainId()\n\n\t\t\t\tlet clientA = new IbcClient(signingClientA, tmClientA, accountA.address, chainIdA, optionsA)\n\t\t\t\tlet clientB = new IbcClient(signingClientB, tmClientB, accountB.address, chainIdB, optionsB)\n\t\t\t\tconst link = await Link.createWithExistingConnections(\n\t\t\t\t\tclientA,\n\t\t\t\t\tclientB,\n\t\t\t\t\trelayer.endA.connectionID,\n\t\t\t\t\trelayer.endB.connectionID,\n\t\t\t\t)\n\t\t\t\tconst linkData = {\n\t\t\t\t\tname,\n\t\t\t\t\tlink,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\tendA: {\n\t\t\t\t\t\tclientID: link.endA.clientID,\n\t\t\t\t\t\tconnectionID: link.endA.connectionID,\n\t\t\t\t\t},\n\t\t\t\t\tendB: {\n\t\t\t\t\t\tclientID: link.endB.clientID,\n\t\t\t\t\t\tconnectionID: link.endB.connectionID,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tcommit('LINK_RELAYER', linkData)\n\t\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\t\troot: true,\n\t\t\t\t})\n\t\t\t\tif (relayer.status != 'connected') {\n\t\t\t\t\tawait dispatch('connectRelayer', relayer.name)\n\t\t\t\t} else {\n\t\t\t\t\tif (relayer.running) {\n\t\t\t\t\t\tdispatch('runRelayer', relayer.name)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t},\n\t\tasync linkRelayer({ commit, rootGetters, getters, dispatch }, { name }) {\n\t\t\tconst relayer = getters['getRelayer'](name)\n\t\t\tif (relayer.status !== 'created') {\n\t\t\t\tthrow new SpVuexError('relayers:connectRelayer', 'Relayer already connected.')\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t})\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'], {\n\t\t\t\t\thdPaths: [stringToPath(rootGetters['common/wallet/getPath'])],\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t})\n\t\t\t\tconst [accountA] = await signerA.getAccounts()\n\t\t\t\tconst [accountB] = await signerB.getAccounts()\n\t\t\t\tconst transientLog = {\n\t\t\t\t\tlog: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tinfo: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\terror: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\twarn: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tverbose: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG', msg)\n\t\t\t\t\t},\n\t\t\t\t\tdebug: () => {\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tconst optionsA = {\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(rootGetters['common/wallet/gasPrice']),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(rootGetters['common/env/apiTendermint'])\n\t\t\t\tconst signingClientA = new StarportSigningClient(tmClientA, signerA, optionsA)\n\t\t\t\tconst chainIdA = await signingClientA.getChainId()\n\t\t\t\tconst optionsB = {\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t}\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(relayer.endpoint)\n\t\t\t\tconst signingClientB = new StarportSigningClient(tmClientB, signerB, optionsB)\n\t\t\t\tconst chainIdB = await signingClientB.getChainId()\n\n\t\t\t\tlet clientA = new IbcClient(signingClientA, tmClientA, accountA.address, chainIdA, optionsA)\n\t\t\t\tlet clientB = new IbcClient(signingClientB, tmClientB, accountB.address, chainIdB, optionsB)\n\t\t\t\tconst link = await Link.createWithNewConnections(clientA, clientB)\n\t\t\t\tconst linkData = {\n\t\t\t\t\tname,\n\t\t\t\t\tlink,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\tendA: {\n\t\t\t\t\t\tclientID: link.endA.clientID,\n\t\t\t\t\t\tconnectionID: link.endA.connectionID,\n\t\t\t\t\t},\n\t\t\t\t\tendB: {\n\t\t\t\t\t\tclientID: link.endB.clientID,\n\t\t\t\t\t\tconnectionID: link.endB.connectionID,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tcommit('LINK_RELAYER', linkData)\n\t\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\t\troot: true,\n\t\t\t\t})\n\t\t\t\tawait dispatch('connectRelayer', name)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t},\n\t\tasync connectRelayer({ commit, getters, dispatch }, name) {\n\t\t\tconst relayerLink = getters['getRelayerLink'](name)\n\t\t\tconst channels = await relayerLink.createChannel('A', 'transfer', 'transfer', 1, 'ics20-1')\n\t\t\tconst channelData = {\n\t\t\t\tname,\n\t\t\t\t...channels,\n\t\t\t}\n\t\t\tcommit('CONNECT_RELAYER', channelData)\n\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\troot: true,\n\t\t\t})\n\t\t\tdispatch('runRelayer', name)\n\t\t},\n\t\tasync runRelayer({ commit, getters, dispatch }, name) {\n\t\t\tconst relayerLink = getters['getRelayerLink'](name)\n\t\t\tcommit('RUN_RELAYER', name)\n\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\troot: true,\n\t\t\t})\n\t\t\tdispatch('relayerLoop', {\n\t\t\t\tname,\n\t\t\t\tlink: relayerLink,\n\t\t\t\toptions: { poll: 1, maxAgeDest: 86400, maxAgeSrc: 86400 },\n\t\t\t})\n\t\t},\n\t\tasync stopRelayer({ commit }, name) {\n\t\t\tcommit('STOP_RELAYER', name)\n\t\t},\n\t\tasync relayerLoop({ getters, commit, dispatch }, { name, link, options }) {\n\t\t\tlet relayer = getters['getRelayer'](name)\n\t\t\tlet nextRelay = relayer.heights ?? {}\n\t\t\twhile (getters['getRelayer'](name).running) {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: make timeout windows more configurable\n\t\t\t\t\tnextRelay = await link.checkAndRelayPacketsAndAcks(nextRelay, 2, 6)\n\t\t\t\t\tcommit('LAST_QUERIED_HEIGHTS', { name, heights: nextRelay })\n\t\t\t\t\tdispatch('common/wallet/updateRelayers', getters['getRelayers'], {\n\t\t\t\t\t\troot: true,\n\t\t\t\t\t})\n\t\t\t\t\tawait link.updateClientIfStale('A', options.maxAgeDest)\n\t\t\t\t\tawait link.updateClientIfStale('B', options.maxAgeSrc)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(`Caught error: `, e)\n\t\t\t\t}\n\t\t\t\tawait sleep(options.poll * 1000)\n\t\t\t}\n\t\t},\n\t},\n}\n"],"file":"relayers.js"}