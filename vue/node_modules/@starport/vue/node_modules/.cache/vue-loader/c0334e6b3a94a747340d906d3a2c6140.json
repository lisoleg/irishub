{"remainingRequest":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/checkers/vue/node_modules/@starport/vue/src/components/SpAmountSelect/SpAmountSelect.vue?vue&type=template&id=0b322f4b&ts=true","dependencies":[{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/src/components/SpAmountSelect/SpAmountSelect.vue","mtime":1642435938477},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js","mtime":1642436200217},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1642436202647},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1642436203297},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1642436203947},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1642436202547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdCI+CiAgICA8ZGl2IGNsYXNzPSJzcC1hbW91bnQtc2VsZWN0X19vdmVybGF5IiB2LWlmPSJtb2RhbE9wZW4iIHYtb246Y2xpY2s9Im1vZGFsT3BlbiA9IGZhbHNlIj48L2Rpdj4KICAgIDxkaXYgY2xhc3M9InNwLWZvcm0tZ3JvdXAiIDpjbGFzcz0ieyAnc3AtYW1vdW50LXNlbGVjdF9fb3ZlcmxheV9fb3Blbic6IG1vZGFsT3BlbiB9Ij4KICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub20iIDpjbGFzcz0ieyAnc3AtZm9jdXNlZCc6IGZvY3VzZWQgfSI+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX3NlbGVjdGVkIiB2LW9uOmNsaWNrPSJ0b2dnbGVNb2RhbCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1hbW91bnQtc2VsZWN0X19kZW5vbV9fbmFtZSI+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX2JhbGFuY2UiCiAgICAgICAgICAgICAgOmNsYXNzPSJ7CiAgICAgICAgICAgICAgICAnc3AtYW1vdW50LXNlbGVjdF9fZGVub21fX2JhbGFuY2VfX2ZhaWwnOiBwYXJzZUFtb3VudChmdWxsZGVub20uYW1vdW50KSAtIHBhcnNlQW1vdW50KGFtb3VudCkgPCAwLAogICAgICAgICAgICAgIH0iCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8c3Ryb25nPkF2YWlsLjwvc3Ryb25nPgogICAgICAgICAgICAgIHt7IHBhcnNlQW1vdW50KGZ1bGxkZW5vbS5hbW91bnQpIC0gcGFyc2VBbW91bnQoYW1vdW50KSB9fS97eyBmdWxsZGVub20uYW1vdW50IH19CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1kZW5vbS1tYXJrZXIiIDpzdHlsZT0iJ2JhY2tncm91bmQ6ICMnICsgZnVsbGRlbm9tLmNvbG9yIiAvPgogICAgICAgICAgICA8dGVtcGxhdGUgdi1pZj0iZnVsbGRlbm9tLmRlbm9tLmluZGV4T2YoJ2liYy8nKSA9PSAwIj4KICAgICAgICAgICAgICBJQkMve3sgZGVub21UcmFjZXNbZnVsbGRlbm9tLmRlbm9tLnNwbGl0KCcvJylbMV1dPy5kZW5vbV90cmFjZS5wYXRoLnRvVXBwZXJDYXNlKCkgPz8gJycgfX0ve3sKICAgICAgICAgICAgICAgIGRlbm9tVHJhY2VzW2Z1bGxkZW5vbS5kZW5vbS5zcGxpdCgnLycpWzFdXT8uZGVub21fdHJhY2UuYmFzZV9kZW5vbS50b1VwcGVyQ2FzZSgpID8/ICdVTktOT1dOJwogICAgICAgICAgICAgIH19CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+CiAgICAgICAgICAgICAge3sgZnVsbGRlbm9tLmRlbm9tLnRvVXBwZXJDYXNlKCkgfX0KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX2NvbnRyb2xzIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX3JlbW92ZSIgdi1pZj0ibW9kYWxPcGVuICYmICFsYXN0IiB2LW9uOmNsaWNrPSJzZWxmUmVtb3ZlIj5SZW1vdmU8L2Rpdj4KICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAgICdzcC1pY29uIHNwLWljb24tRG93bkNhcmV0JzogIW1vZGFsT3BlbiwKICAgICAgICAgICAgICAgICdzcC1pY29uIHNwLWljb24tVXBDYXJldCc6IG1vZGFsT3BlbiwKICAgICAgICAgICAgICB9IgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsIiB2LWlmPSJtb2RhbE9wZW4iPgogICAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19zZWFyY2giPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1pY29uIHNwLWljb24tU2VhcmNoIiAvPgogICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgIHYtbW9kZWw9InNlYXJjaFRlcm0iCiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaC4uLiIKICAgICAgICAgICAgICBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19zZWFyY2hfX2lucHV0IgogICAgICAgICAgICAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1saW5lIj48L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InNwLWFtb3VudC1zZWxlY3RfX2Rlbm9tX19tb2RhbF9faGVhZGVyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19oZWFkZXJfX3Rva2VuIj5UT0tFTjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1hbW91bnQtc2VsZWN0X19kZW5vbV9fbW9kYWxfX2hlYWRlcl9fYW1vdW50Ij5BTU9VTlQ8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdgogICAgICAgICAgICBjbGFzcz0ic3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19pdGVtIgogICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAnc3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19pdGVtX19zZWxlY3RlZCc6IGF2YWlsLmRlbm9tID09IGZ1bGxkZW5vbS5kZW5vbSwKICAgICAgICAgICAgICAnc3AtYW1vdW50LXNlbGVjdF9fZGVub21fX21vZGFsX19pdGVtX19kaXNhYmxlZCc6IGVuYWJsZWREZW5vbXMuZmluZEluZGV4KCh4KSA9PiB4ID09IGF2YWlsKSA9PSAtMSwKICAgICAgICAgICAgfSIKICAgICAgICAgICAgdi1vbjpjbGljaz0ic2V0RGVub20oYXZhaWwpIgogICAgICAgICAgICB2LWZvcj0iYXZhaWwgaW4gZmlsdGVyZWREZW5vbXMiCiAgICAgICAgICAgIHYtYmluZDprZXk9IidkZW5vbV8nICsgYXZhaWwuZGVub20iCiAgICAgICAgICA+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNwLWFtb3VudC1zZWxlY3RfX2Rlbm9tX19uYW1lIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1kZW5vbS1tYXJrZXIiIDpzdHlsZT0iJ2JhY2tncm91bmQ6ICMnICsgYXZhaWwuY29sb3IiIC8+CgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPSJhdmFpbC5kZW5vbS5pbmRleE9mKCdpYmMvJykgPT0gMCI+CiAgICAgICAgICAgICAgICBJQkMve3sgZGVub21UcmFjZXNbYXZhaWwuZGVub20uc3BsaXQoJy8nKVsxXV0/LmRlbm9tX3RyYWNlLnBhdGgudG9VcHBlckNhc2UoKSA/PyAnJyB9fS97ewogICAgICAgICAgICAgICAgICBkZW5vbVRyYWNlc1thdmFpbC5kZW5vbS5zcGxpdCgnLycpWzFdXT8uZGVub21fdHJhY2UuYmFzZV9kZW5vbS50b1VwcGVyQ2FzZSgpID8/ICdVTktOT1dOJwogICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2U+CiAgICAgICAgICAgICAgICB7eyBhdmFpbC5kZW5vbS50b1VwcGVyQ2FzZSgpIH19CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNwLWFtb3VudC1zZWxlY3RfX2Rlbm9tX19iYWxhbmNlIj4KICAgICAgICAgICAgICB7eyBhdmFpbC5hbW91bnQgfX0KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxpbnB1dAogICAgICAgIGNsYXNzPSJzcC1pbnB1dCBzcC1pbnB1dC1sYXJnZSIKICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICdzcC1lcnJvcic6IGZ1bGxkZW5vbS5hbW91bnQgIT0gJycgJiYgcGFyc2VBbW91bnQoZnVsbGRlbm9tLmFtb3VudCkgLSBwYXJzZUFtb3VudChhbW91bnQpIDwgMCwKICAgICAgICB9IgogICAgICAgIG5hbWU9InJjcHQiCiAgICAgICAgdi1tb2RlbD0iYW1vdW50IgogICAgICAgIHBsYWNlaG9sZGVyPSIwIgogICAgICAgIHYtb246Zm9jdXM9ImZvY3VzZWQgPSB0cnVlIgogICAgICAgIHYtb246Ymx1cj0iZm9jdXNlZCA9IGZhbHNlIgogICAgICAvPgogICAgPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/lisoleg/checkers/vue/node_modules/@starport/vue/src/components/SpAmountSelect/SpAmountSelect.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAClF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;cACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;cACnG,CAAC;YACH;cACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACtB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACjF,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;cACnD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC1F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9F,CAAC;YACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACd,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,CAAC,CAAC,CAAC,CAAC;cACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE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AE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzE,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACpG,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpC;YACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;cAErE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;kBACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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","file":"/home/lisoleg/checkers/vue/node_modules/@starport/vue/src/components/SpAmountSelect/SpAmountSelect.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"sp-amount-select\">\n    <div class=\"sp-amount-select__overlay\" v-if=\"modalOpen\" v-on:click=\"modalOpen = false\"></div>\n    <div class=\"sp-form-group\" :class=\"{ 'sp-amount-select__overlay__open': modalOpen }\">\n      <div class=\"sp-amount-select__denom\" :class=\"{ 'sp-focused': focused }\">\n        <div class=\"sp-amount-select__denom__selected\" v-on:click=\"toggleModal\">\n          <div class=\"sp-amount-select__denom__name\">\n            <div\n              class=\"sp-amount-select__denom__balance\"\n              :class=\"{\n                'sp-amount-select__denom__balance__fail': parseAmount(fulldenom.amount) - parseAmount(amount) < 0,\n              }\"\n            >\n              <strong>Avail.</strong>\n              {{ parseAmount(fulldenom.amount) - parseAmount(amount) }}/{{ fulldenom.amount }}\n            </div>\n            <div class=\"sp-denom-marker\" :style=\"'background: #' + fulldenom.color\" />\n            <template v-if=\"fulldenom.denom.indexOf('ibc/') == 0\">\n              IBC/{{ denomTraces[fulldenom.denom.split('/')[1]]?.denom_trace.path.toUpperCase() ?? '' }}/{{\n                denomTraces[fulldenom.denom.split('/')[1]]?.denom_trace.base_denom.toUpperCase() ?? 'UNKNOWN'\n              }}\n            </template>\n            <template v-else>\n              {{ fulldenom.denom.toUpperCase() }}\n            </template>\n          </div>\n          <div class=\"sp-amount-select__denom__controls\">\n            <div class=\"sp-amount-select__denom__remove\" v-if=\"modalOpen && !last\" v-on:click=\"selfRemove\">Remove</div>\n            <span\n              :class=\"{\n                'sp-icon sp-icon-DownCaret': !modalOpen,\n                'sp-icon sp-icon-UpCaret': modalOpen,\n              }\"\n            />\n          </div>\n        </div>\n        <div class=\"sp-amount-select__denom__modal\" v-if=\"modalOpen\">\n          <div class=\"sp-amount-select__denom__modal__search\">\n            <div class=\"sp-icon sp-icon-Search\" />\n            <input\n              type=\"text\"\n              v-model=\"searchTerm\"\n              placeholder=\"Search...\"\n              class=\"sp-amount-select__denom__modal__search__input\"\n            />\n          </div>\n          <div class=\"sp-line\"></div>\n          <div class=\"sp-amount-select__denom__modal__header\">\n            <div class=\"sp-amount-select__denom__modal__header__token\">TOKEN</div>\n            <div class=\"sp-amount-select__denom__modal__header__amount\">AMOUNT</div>\n          </div>\n          <div\n            class=\"sp-amount-select__denom__modal__item\"\n            :class=\"{\n              'sp-amount-select__denom__modal__item__selected': avail.denom == fulldenom.denom,\n              'sp-amount-select__denom__modal__item__disabled': enabledDenoms.findIndex((x) => x == avail) == -1,\n            }\"\n            v-on:click=\"setDenom(avail)\"\n            v-for=\"avail in filteredDenoms\"\n            v-bind:key=\"'denom_' + avail.denom\"\n          >\n            <div class=\"sp-amount-select__denom__name\">\n              <div class=\"sp-denom-marker\" :style=\"'background: #' + avail.color\" />\n\n              <template v-if=\"avail.denom.indexOf('ibc/') == 0\">\n                IBC/{{ denomTraces[avail.denom.split('/')[1]]?.denom_trace.path.toUpperCase() ?? '' }}/{{\n                  denomTraces[avail.denom.split('/')[1]]?.denom_trace.base_denom.toUpperCase() ?? 'UNKNOWN'\n                }}\n              </template>\n              <template v-else>\n                {{ avail.denom.toUpperCase() }}\n              </template>\n            </div>\n            <div class=\"sp-amount-select__denom__balance\">\n              {{ avail.amount }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <input\n        class=\"sp-input sp-input-large\"\n        :class=\"{\n          'sp-error': fulldenom.amount != '' && parseAmount(fulldenom.amount) - parseAmount(amount) < 0,\n        }\"\n        name=\"rcpt\"\n        v-model=\"amount\"\n        placeholder=\"0\"\n        v-on:focus=\"focused = true\"\n        v-on:blur=\"focused = false\"\n      />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { Amount, ColoredAmount, DenomTraces } from '../../utils/interfaces'\nimport { str2rgba } from '../../utils/helpers'\n\nexport interface SpAmountSelectState {\n  amount: string\n  denom: string | null\n  focused: boolean\n  modalOpen: boolean\n  searchTerm: string\n  denomTraces: DenomTraces\n}\n\nexport default defineComponent({\n  name: 'SpAmountSelect',\n  data: function (): SpAmountSelectState {\n    return {\n      amount: '',\n      denom: null,\n      focused: false,\n      modalOpen: false,\n      searchTerm: '',\n      denomTraces: {} as DenomTraces,\n    }\n  },\n  props: {\n    modelValue: {\n      type: Object as PropType<Amount>,\n    },\n    available: {\n      type: Array as PropType<Array<Amount>>,\n    },\n    index: { type: Number as PropType<number> },\n    selected: {\n      type: Array as PropType<Array<string>>,\n    },\n    last: {\n      type: Boolean as PropType<boolean>,\n    },\n  },\n  emits: ['update:modelValue', 'self-remove'],\n  mounted: function () {\n    this.amount = this.modelValue?.amount + '' ?? ''\n    this.denom = this.modelValue?.denom ?? null\n  },\n  computed: {\n    currentVal: function (): Amount {\n      return { amount: this.amount, denom: this.denom ?? '' }\n    },\n    fulldenom: function (): ColoredAmount {\n      return (\n        this.denoms.find((x: ColoredAmount) => x.denom == this.denom) ?? {\n          amount: '',\n          denom: '',\n          color: '',\n        }\n      )\n    },\n    enabledDenoms: function (): Array<Amount> {\n      return (\n        this.available?.filter(\n          (x) =>\n            this.selected?.findIndex((y) => y == x.denom) == -1 ||\n            this.selected?.findIndex((y) => y == x.denom) == this.index,\n        ) ?? []\n      )\n    },\n    denoms: function (): Array<ColoredAmount> {\n      return (\n        this.available?.map((x: Amount) => {\n          this.addMapping(x)\n          const y: ColoredAmount = { amount: '0', denom: '', color: '' }\n          y.amount = x.amount\n          y.denom = x.denom\n          y.color = str2rgba(x.denom.toUpperCase())\n          return x as ColoredAmount\n        }) ?? []\n      )\n    },\n    filteredDenoms: function (): Array<ColoredAmount> {\n      return this.searchTerm == ''\n        ? this.denoms\n        : this.denoms.filter((x) => x.denom.toUpperCase().indexOf(this.searchTerm.toUpperCase()) !== -1)\n    },\n  },\n  methods: {\n    toggleModal: function (): void {\n      this.modalOpen = !this.modalOpen\n    },\n    selfRemove: function (): void {\n      this.$emit('self-remove')\n    },\n    addMapping: async function (balance: Amount): Promise<void> {\n      if (balance.denom.indexOf('ibc/') == 0) {\n        const denom = balance.denom.split('/')\n        const hash = denom[1]\n        this.denomTraces[hash] = await this.$store.dispatch('ibc.applications.transfer.v1/QueryDenomTrace', {\n          options: { subscribe: false, all: false },\n          params: { hash },\n        })\n      }\n    },\n    setDenom: function (avail: Amount): void {\n      if (this.enabledDenoms.findIndex((x) => x == avail) != -1) {\n        this.denom = avail.denom\n        this.modalOpen = false\n      }\n    },\n    parseAmount: function (amount: string): number {\n      return amount == '' ? 0 : parseInt(amount)\n    },\n  },\n  watch: {\n    modelValue: function (newVal: Amount): void {\n      this.amount = newVal.amount\n      this.denom = newVal.denom\n    },\n    amount: function (newVal: string, oldVal: string): void {\n      if (newVal != oldVal) {\n        this.$emit('update:modelValue', this.currentVal)\n      }\n    },\n    denom: function (newVal: string, oldVal: string): void {\n      if (newVal != oldVal) {\n        this.$emit('update:modelValue', this.currentVal)\n      }\n    },\n  },\n})\n</script>\n"]}]}