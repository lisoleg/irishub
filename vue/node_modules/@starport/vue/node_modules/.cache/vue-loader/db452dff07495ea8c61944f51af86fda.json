{"remainingRequest":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue?vue&type=template&id=4eea7f0a&ts=true","dependencies":[{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue","mtime":1650118404784},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js","mtime":1642436200217},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1642436202647},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1642436203297},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1642436203947},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1642436202547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzIj4KICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19faGVhZGVyIHNwLWNvbXBvbmVudC10aXRsZSI+CiAgICAgIDxoMz7miJHnmoRORlQ8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW4gc3AtYm94IHNwLXNoYWRvdyI+CiAgICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19fbWFpbl9faGVhZGVyIiB2LWlmPSJhZGRyZXNzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW5fX2hlYWRlcl9fdG9rZW4iPk5GVDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19fbWFpbl9faGVhZGVyX19hbW91bnQiPuaVsOmHjzwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19oZWFkZXIiIHYtZWxzZT4KICAgICAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW5fX2hlYWRlcl9fbWVzc2FnZSI+WW91ciBjdXJyZW50IGFjY291bnQgYmFsYW5jZSB3aWxsIGFwcGVhciBoZXJlPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19pdGVtIiB2LWZvcj0iYmFsYW5jZSBpbiBmdWxsQmFsYW5jZXMiIHYtYmluZDprZXk9IidkZW5vbV8nICsgYmFsYW5jZS5kZW5vbSI+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19kZW5vbV9fbmFtZSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzcC1kZW5vbS1tYXJrZXIiIDpzdHlsZT0iJ2JhY2tncm91bmQ6ICMnICsgYmFsYW5jZS5jb2xvciIgLz4KICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPSJiYWxhbmNlLmRlbm9tLmluZGV4T2YoJ2liYy8nKSA9PSAwIj4KICAgICAgICAgICAgSUJDL3t7IGRlbm9tVHJhY2VzW2JhbGFuY2UuZGVub20uc3BsaXQoJy8nKVsxXV0/LmRlbm9tX3RyYWNlLnBhdGgudG9VcHBlckNhc2UoKSA/PyAnJyB9fS97ewogICAgICAgICAgICAgIGRlbm9tVHJhY2VzW2JhbGFuY2UuZGVub20uc3BsaXQoJy8nKVsxXV0/LmRlbm9tX3RyYWNlLmJhc2VfZGVub20udG9VcHBlckNhc2UoKSA/PyAnVU5LTk9XTicKICAgICAgICAgICAgfX0KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPgogICAgICAgICAgICB7eyBiYWxhbmNlLmRlbm9tLnRvVXBwZXJDYXNlKCkgfX0KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19kZW5vbV9fYmFsYW5jZSI+CiAgICAgICAgICB7eyBiYWxhbmNlLmFtb3VudCB9fQogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACltG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACxd,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"sp-assets\">\n    <div class=\"sp-assets__header sp-component-title\">\n      <h3>我的NFT</h3>\n    </div>\n    <div class=\"sp-assets__main sp-box sp-shadow\">\n      <div class=\"sp-assets__main__header\" v-if=\"address\">\n        <div class=\"sp-assets__main__header__token\">NFT</div>\n        <div class=\"sp-assets__main__header__amount\">数量</div>\n      </div>\n      <div class=\"sp-assets__main__header\" v-else>\n        <div class=\"sp-assets__main__header__message\">Your current account balance will appear here</div>\n      </div>\n\n      <div class=\"sp-assets__main__item\" v-for=\"balance in fullBalances\" v-bind:key=\"'denom_' + balance.denom\">\n        <div class=\"sp-assets__main__denom__name\">\n          <div class=\"sp-denom-marker\" :style=\"'background: #' + balance.color\" />\n          <template v-if=\"balance.denom.indexOf('ibc/') == 0\">\n            IBC/{{ denomTraces[balance.denom.split('/')[1]]?.denom_trace.path.toUpperCase() ?? '' }}/{{\n              denomTraces[balance.denom.split('/')[1]]?.denom_trace.base_denom.toUpperCase() ?? 'UNKNOWN'\n            }}\n          </template>\n          <template v-else>\n            {{ balance.denom.toUpperCase() }}\n          </template>\n        </div>\n        <div class=\"sp-assets__main__denom__balance\">\n          {{ balance.amount }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { Amount, ColoredAmount, DenomTraces } from '../../utils/interfaces'\nimport { str2rgba } from '../../utils/helpers'\n\nexport interface SpAmountSelectState {\n  denomTraces: DenomTraces\n}\n\nexport default defineComponent({\n  name: 'SpNFTAssets',\n  props: {\n    balances: Array as PropType<Array<Amount>>,\n  },\n  data() {\n    return {\n      denomTraces: {} as DenomTraces,\n    }\n  },\n  computed: {\n    address: function (): string {\n      return this.$store.getters['common/wallet/address']\n    },\n    fullBalances: function (): Array<ColoredAmount> {\n      return (\n        this.balances?.map((x: Amount) => {\n          this.addMapping(x)\n          const y: ColoredAmount = { amount: '0', denom: '', color: '' }\n          y.amount = x.amount\n          y.denom = x.denom\n          y.color = str2rgba(x.denom.toUpperCase())\n          return x as ColoredAmount\n        }) ?? []\n      )\n    },\n  },\n  methods: {\n    addMapping: async function (balance: Amount): Promise<void> {\n      if (balance.denom.indexOf('ibc/') == 0) {\n        const denom = balance.denom.split('/')\n        const hash = denom[1]\n        this.denomTraces[hash] = await this.$store.dispatch('ibc.applications.transfer.v1/QueryDenomTrace', {\n          options: { subscribe: false, all: false },\n          params: { hash },\n        })\n      }\n    },\n  },\n})\n</script>\n"]}]}