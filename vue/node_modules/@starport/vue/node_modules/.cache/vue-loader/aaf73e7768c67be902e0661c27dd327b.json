{"remainingRequest":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue?vue&type=template&id=60e97d6e&ts=true","dependencies":[{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue","mtime":1650277763668},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1650206516231},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1650206520101},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1650206520131},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1650206520131}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzIj4KICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19faGVhZGVyIHNwLWNvbXBvbmVudC10aXRsZSI+CiAgICAgIDxoMz7miJHnmoRORlQ8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW4gc3AtYm94IHNwLXNoYWRvdyI+CiAgICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19fbWFpbl9faGVhZGVyIiB2LWlmPSJhZGRyZXNzKCkiPgogICAgICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19fbWFpbl9faGVhZGVyX190b2tlbiI+TkZUPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19oZWFkZXJfX2Ftb3VudCI+5pWw6YePPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW5fX2hlYWRlciIgdi1lbHNlPgogICAgICAgIDxkaXYgY2xhc3M9InNwLWFzc2V0c19fbWFpbl9faGVhZGVyX19tZXNzYWdlIj5Zb3VyIGN1cnJlbnQgYWNjb3VudCBiYWxhbmNlIHdpbGwgYXBwZWFyIGhlcmU8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW5fX2l0ZW0iIHYtZm9yPSJiYWxhbmNlIGluIGZ1bGxCYWxhbmNlcyIgdi1iaW5kOmtleT0iJ2Rlbm9tXycgKyBiYWxhbmNlLmRlbm9tIj4KICAgICAgICA8ZGl2IGNsYXNzPSJzcC1hc3NldHNfX21haW5fX2Rlbm9tX19uYW1lIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InNwLWRlbm9tLW1hcmtlciIgOnN0eWxlPSInYmFja2dyb3VuZDogIycgKyBiYWxhbmNlLmNvbG9yIiAvPgogICAgICAgICAgICB7eyBiYWxhbmNlIH19CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ic3AtYXNzZXRzX19tYWluX19kZW5vbV9fYmFsYW5jZSI+CiAgICAgICAgICAxCiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACltG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACrE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1C;QACF,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"sp-assets\">\n    <div class=\"sp-assets__header sp-component-title\">\n      <h3>我的NFT</h3>\n    </div>\n    <div class=\"sp-assets__main sp-box sp-shadow\">\n      <div class=\"sp-assets__main__header\" v-if=\"address()\">\n        <div class=\"sp-assets__main__header__token\">NFT</div>\n        <div class=\"sp-assets__main__header__amount\">数量</div>\n      </div>\n      <div class=\"sp-assets__main__header\" v-else>\n        <div class=\"sp-assets__main__header__message\">Your current account balance will appear here</div>\n      </div>\n\n      <div class=\"sp-assets__main__item\" v-for=\"balance in fullBalances\" v-bind:key=\"'denom_' + balance.denom\">\n        <div class=\"sp-assets__main__denom__name\">\n          <div class=\"sp-denom-marker\" :style=\"'background: #' + balance.color\" />\n            {{ balance }}\n        </div>\n        <div class=\"sp-assets__main__denom__balance\">\n          1\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport { str2rgba } from '../../utils/helpers'\n\n\n\nimport { BaseTest, NFTObj } from '../../utils/interfaces'\n\n\n\nexport default defineComponent({\n  name: 'SpNFTAssets',\n  data() {\n    return {\n      nfts: {} as String[],\n    }\n  },\n  computed: {\n    fullBalances: function (): String[] {\n      return this.nfts;\n    },\n  },\n  methods: {\n    address: function (): string {\n      return this.$store.getters['common/wallet/address']\n    },\n    gotNFTBalances: async function (): Promise<void> {\n      await BaseTest.getClient()\n        .nft.queryOwner(this.address(),'gws')\n        .then(res => {\n          console.log(JSON.stringify(res));\n          let x:NFTObj = JSON.parse(JSON.stringify(res));\n          this.nfts=x.owner.idCollectionsList[0].tokenIdsList;\n        })\n        .catch(error => {\n          console.log(error);\n        })\n      }\n  },\n  created: function (): void {\n    this.gotNFTBalances();\n  },\n  beforeUpdate: function (): void {\n    this.gotNFTBalances();\n  },\n})\n</script>\n"]}]}