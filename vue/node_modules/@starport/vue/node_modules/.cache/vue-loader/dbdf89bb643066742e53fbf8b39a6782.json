{"remainingRequest":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpMnemonic/SpMnemonic.vue?vue&type=template&id=78fae3ee&ts=true","dependencies":[{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpMnemonic/SpMnemonic.vue","mtime":1642448478117},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js","mtime":1642436200217},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1642436202647},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1642436203297},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/templateLoader.js","mtime":1642436203947},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1642436200407},{"path":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1642436202547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ic3AtbW5lbW9uaWMiPgogICAgPHVsIGNsYXNzPSJzcC1tbmVtb25pY19fbGlzdCI+CiAgICAgIDxsaSBjbGFzcz0ic3AtbW5lbW9uaWNfX2xpc3RfX2l0ZW0iIHYtZm9yPSIod29yZCwgaW5kZXgpIGluIGZpcnN0SGFsZldvcmRzIiB2LWJpbmQ6a2V5PSInd29yZCcgKyBpbmRleCArIDEiPgogICAgICAgIDxzcGFuPnt7IGluZGV4ICsgMSB9fTwvc3Bhbj4ge3sgd29yZCB9fQogICAgICA8L2xpPgogICAgPC91bD4KICAgIDx1bCBjbGFzcz0ic3AtbW5lbW9uaWNfX2xpc3QiPgogICAgICA8bGkKICAgICAgICBjbGFzcz0ic3AtbW5lbW9uaWNfX2xpc3RfX2l0ZW0iCiAgICAgICAgdi1mb3I9Iih3b3JkLCBpbmRleCkgaW4gc2Vjb25kSGFsZldvcmRzIgogICAgICAgIHYtYmluZDprZXk9Iid3b3JkJyArIGluZGV4ICsgMSArIGZpcnN0SGFsZldvcmRzLmxlbmd0aCIKICAgICAgPgogICAgICAgIDxzcGFuPnt7IGluZGV4ICsgMSArIGZpcnN0SGFsZldvcmRzLmxlbmd0aCB9fTwvc3Bhbj4ge3sgd29yZCB9fQogICAgICA8L2xpPgogICAgPC91bD4KICAgIDxkaXYgY2xhc3M9InNwLW1uZW1vbmljX19jb3B5Ij4KICAgICAgPFNwTGlua0ljb24gaWNvbj0iQ29weSIgdGV4dD0i5ou36LSd5Yqp6K6w6K+NIiB2LW9uOmNsaWNrPSJjb3B5TW5lbW9uaWMiIC8+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpMnemonic/SpMnemonic.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;MACxC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD;QACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;MAChE,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAClE,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/lisoleg/cosmos/checkers/vue/node_modules/@starport/vue/src/components/SpMnemonic/SpMnemonic.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"sp-mnemonic\">\n    <ul class=\"sp-mnemonic__list\">\n      <li class=\"sp-mnemonic__list__item\" v-for=\"(word, index) in firstHalfWords\" v-bind:key=\"'word' + index + 1\">\n        <span>{{ index + 1 }}</span> {{ word }}\n      </li>\n    </ul>\n    <ul class=\"sp-mnemonic__list\">\n      <li\n        class=\"sp-mnemonic__list__item\"\n        v-for=\"(word, index) in secondHalfWords\"\n        v-bind:key=\"'word' + index + 1 + firstHalfWords.length\"\n      >\n        <span>{{ index + 1 + firstHalfWords.length }}</span> {{ word }}\n      </li>\n    </ul>\n    <div class=\"sp-mnemonic__copy\">\n      <SpLinkIcon icon=\"Copy\" text=\"拷贝助记词\" v-on:click=\"copyMnemonic\" />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\nimport SpLinkIcon from '../SpLinkIcon'\nimport { copyToClipboard } from '../../utils/helpers'\n\nexport default defineComponent({\n  name: 'SpMnemonic',\n  props: {\n    mnemonic: {\n      type: String as PropType<string>,\n      required: true,\n    },\n  },\n  components: {\n    SpLinkIcon,\n  },\n  computed: {\n    words: function (): Array<string> {\n      return this.mnemonic.split(' ')\n    },\n    firstHalfWords: function (): Array<string> {\n      return this.words.slice(0, this.words.length / 2)\n    },\n    secondHalfWords: function (): Array<string> {\n      return this.words.slice(this.words.length / 2)\n    },\n  },\n  methods: {\n    copyMnemonic: function (): void {\n      copyToClipboard(this.mnemonic)\n    },\n  },\n})\n</script>\n"]}]}