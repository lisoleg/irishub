{"remainingRequest":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js??clonedRuleSet-131.use[3]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue","mtime":1650464938118},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1650206516231},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1650206520101},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1650206520131},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/babel.config.js","mtime":1650206513441},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js","mtime":1650206520081},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1650206516231},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1650206520101},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1650206520131}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgQmFzZVRlc3QgfSBmcm9tICcuLi8uLi91dGlscy9pbnRlcmZhY2VzJzsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnU3BORlRBc3NldHMnLAogIHByb3BzOiB7CiAgICBhZGRyZXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuZnRzOiB7fQogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgZnVsbEJhbGFuY2VzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0aGlzLm5mdHM7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnb3RORlRCYWxhbmNlczogYXN5bmMgZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5hZGRyZXNzKSB7CiAgICAgICAgYXdhaXQgQmFzZVRlc3QuZ2V0Q2xpZW50KCkubmZ0LnF1ZXJ5T3duZXIodGhpcy5hZGRyZXNzLCAnZ3dzJykudGhlbihyZXMgPT4gewogICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVzKSk7CiAgICAgICAgICBsZXQgeCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVzKSk7CgogICAgICAgICAgaWYgKHgub3duZXIpIHsKICAgICAgICAgICAgdGhpcy5uZnRzID0geC5vd25lcj8uaWRDb2xsZWN0aW9uc0xpc3RbMF0/LnRva2VuSWRzTGlzdDsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuZ290TkZUQmFsYW5jZXMoKTsKICB9LAogIHdhdGNoOiB7CiAgICBhZGRyZXNzOiBmdW5jdGlvbiAobmV3QWRkciwgb2xkQWRkcikgewogICAgICBpZiAobmV3QWRkciAhPSBvbGRBZGRyKSB7CiAgICAgICAgdGhpcy5nb3RORlRCYWxhbmNlcygpOwogICAgICB9CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTAssets/SpNFTAssets.vue?vue&type=script&lang=ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAA0C,KAA1C;AAEA,SAAS,QAAT,QAAiC,wBAAjC;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,IAAI,EAAE,aADuB;AAE7B,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE;AADC;AADJ,GAFsB;;AAO7B,EAAA,IAAI,GAAA;AACF,WAAO;AACL,MAAA,IAAI,EAAE;AADD,KAAP;AAGD,GAX4B;;AAY7B,EAAA,QAAQ,EAAE;AACR,IAAA,YAAY,EAAE,YAAA;AACZ,aAAO,KAAK,IAAZ;AACD;AAHO,GAZmB;AAiB7B,EAAA,OAAO,EAAE;AACP,IAAA,cAAc,EAAE,kBAAK;AACnB,UAAI,KAAK,OAAT,EAAkB;AAChB,cAAM,QAAQ,CAAC,SAAT,GACH,GADG,CACC,UADD,CACY,KAAK,OADjB,EACyB,KADzB,EAEH,IAFG,CAEE,GAAG,IAAG;AACV,UAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,SAAL,CAAe,GAAf,CAAZ;AACA,cAAI,CAAC,GAAU,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,GAAf,CAAX,CAAf;;AACA,cAAI,CAAC,CAAC,KAAN,EAAY;AACV,iBAAK,IAAL,GAAU,CAAC,CAAC,KAAF,EAAS,iBAAT,CAA2B,CAA3B,GAA+B,YAAzC;AACD;AACF,SARG,EASH,KATG,CASG,KAAK,IAAG;AACb,UAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACD,SAXG,CAAN;AAYD;AACF;AAhBM,GAjBoB;AAmC7B,EAAA,OAAO,EAAE,YAAA;AACP,SAAK,cAAL;AACD,GArC4B;AAsC7B,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE,UAAU,OAAV,EAAmB,OAAnB,EAA0B;AACjC,UAAI,OAAO,IAAI,OAAf,EAAyB;AACvB,aAAK,cAAL;AACD;AACF;AALI;AAtCsB,CAAD,CAA9B","sourcesContent":["\nimport { defineComponent, PropType } from 'vue'\nimport { str2rgba } from '../../utils/helpers'\nimport { BaseTest, NFTObj } from '../../utils/interfaces'\n\nexport default defineComponent({\n  name: 'SpNFTAssets',\n  props: {     \n    address: {\n      type: String as PropType<string>,\n    } \n  },\n  data() {\n    return {\n      nfts: {} as String[],\n    }\n  },\n  computed: {\n    fullBalances: function (): String[] {\n      return this.nfts;\n    },\n  },\n  methods: {\n    gotNFTBalances: async function (): Promise<void> {\n      if (this.address) {\n        await BaseTest.getClient()\n          .nft.queryOwner(this.address,'gws')\n          .then(res => {\n            console.log(JSON.stringify(res));\n            let x:NFTObj = JSON.parse(JSON.stringify(res));\n            if (x.owner){\n              this.nfts=x.owner?.idCollectionsList[0]?.tokenIdsList;\n            }\n          })\n          .catch(error => {\n            console.log(error);\n          })\n      }\n    }\n  },\n  mounted: function (): void {\n    this.gotNFTBalances();\n  },\n  watch: {\n    address: function (newAddr, oldAddr): void {\n      if (newAddr != oldAddr ) {\n        this.gotNFTBalances();\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}