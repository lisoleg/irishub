{"remainingRequest":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js??clonedRuleSet-86.use[3]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTSend/SpNFTSend.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTSend/SpNFTSend.vue","mtime":1651682119560},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/babel.config.js","mtime":1650206513441},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/thread-loader/dist/cjs.js","mtime":1650206520081},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/babel-loader/lib/index.js","mtime":1650206516231},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/ts-loader/index.js","mtime":1650206520101},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js","mtime":1650206516391},{"path":"/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js","mtime":1650206520131}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/lisoleg/cosmos/irisnet/irishub/vue/node_modules/@starport/vue/src/components/SpNFTSend/SpNFTSend.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { defineComponent, PropType } from 'vue'\nimport SpButton from '../SpButton'\nimport SpNFTAssets from '../SpNFTAssets'\nimport SpNFTAmountSelect from '../SpNFTAmountSelect'\nimport { Bech32 } from '@cosmjs/encoding'\nimport { Amount, DenomTraces, Relayer} from '../../utils/interfaces'\nimport long from 'long';\n\nexport interface TransferData {\n  recipient: string\n  channel: string\n  amount: Array<Amount>\n  memo: string\n  fees: Array<Amount>\n}\n\nexport interface SpNFTSendState {\n  transfer: TransferData\n  feesOpen: boolean\n  memoOpen: boolean\n  inFlight: boolean\n  bankAddress: string\n  staking: Record<string, unknown>\n  denomTraces: DenomTraces\n}\n\n\nexport default defineComponent({\n  name: 'SpNFTSend',\n  components: {\n    SpButton,\n    SpNFTAmountSelect,\n    SpNFTAssets\n  },\n  props: {\n    address: {\n      type: String as PropType<string>,\n    },\n    refresh: {\n      type: Boolean as PropType<boolean>,\n    },\n  },\n  data: function (): SpNFTSendState {\n    return {\n      transfer: {\n        recipient: '',\n        channel: '',\n        amount: [],\n        memo: '',\n        fees: [],\n      } as TransferData,\n      feesOpen: false,\n      memoOpen: false,\n      inFlight: false,\n      bankAddress: '',\n      staking: {},\n      denomTraces: {} as DenomTraces,\n    }\n  },\n  beforeCreate: function (): void {\n    const vuexModule = ['irismod.nft']\n    for (let i = 1; i <= vuexModule.length; i++) {\n      const submod = vuexModule.slice(0, i)\n      if (!this.$store.hasModule(submod)) {\n        console.log('Module `irismod.nft` has not been registered!')\n        this._depsLoaded = false\n        break\n      }\n    }\n  },\n  mounted: function (): void {\n    this.bankAddress = this.address ?? ''\n    //this.staking = this.$store.getters['cosmos.staking.v1beta1/getParams']()\n    if (this._depsLoaded) {\n      if (this.bankAddress != '') {\n//         this.$store.dispatch('irismod.nft/QueryOwner', {\n              // params: {},\n              // query: { owner: this.address }, \n//  //         options: { all: true, subscribe: this.refresh },\n//         })\n      }\n    }\n  },\n  watch: {\n    balances: function (newBal: any, oldBal: any): void {\n      if (newBal != oldBal && newBal[0]?.denom && oldBal.length == 0) {\n        this.transfer.amount = [{ amount: '1', denom: newBal?.id_collections[0]?.token_ids[0] }]\n        this.transfer.fees = [{ amount: '1', denom: \"metab\" }]\n      }\n    },\n    address: function (newAddr: string, oldAddr: string): void {\n      if (this._depsLoaded) {\n        if (newAddr != oldAddr) {\n          this.bankAddress = newAddr\n          if (this.bankAddress != '') {\n            // this.$store.dispatch('irismod.nft/QueryOwner', {\n            //   query: { owner: this.bankAddress, denomId:\"gws\" },\n //             options: { all: true, subscribe: this.refresh },\n            // })\n          }\n        }\n      }\n    },\n  },\n  computed: {\n    validForm: function (): boolean {\n      if (\n        this.transfer.amount.every(\n          (x) => !isNaN(this.parseAmount(x.amount)) && x.amount != '' && this.parseAmount(x.amount) != 0,\n        ) &&\n        this.transfer.fees.every((x) => !isNaN(this.parseAmount(x.amount))) &&\n        this.validAddress &&\n        this.address\n      ) {\n        return true\n      } else {\n        return false\n      }\n    },\n    balances: function (): any {\n      if (this._depsLoaded &&  this.bankAddress != '') {\n        this.$store.getters['irismod.nft/getOwner']({\n              params: {},\n              query: { owner: this.address }, \n              })?.owner?.id_collections; \n       } else {\n        return []\n       }\n    },\n    nextToAdd: function (): Amount | null {\n      // const i = this.balances.findIndex((x) => !this.selectedDenoms.includes(x.denom))\n      // if (i == -1) {\n        return null\n      // } else {\n      //   return this.balances[i]\n      // }\n    },\n    nextFeeToAdd: function (): Amount | null {\n      // const i = this.balances.findIndex((x) => !this.selectedFeeDenoms.includes(x.denom))\n      // if (i == -1) {\n        return null\n      // } else {\n      //   return this.balances[i]\n      // }\n    },\n    selectedDenoms: function (): Array<string> {\n      return this.transfer.amount.map((x) => x.denom)\n    },\n    selectedFeeDenoms: function (): Array<string> {\n      return this.transfer.fees.map((x) => x.denom)\n    },\n    fullBalances: function (): any {\n      // return this.balances.map((x) => {\n      //   this.addMapping(x)\n      //   return x\n      // })\n      return null\n    },\n    relayers: function (): Array<Relayer> {\n      return this.$store.hasModule(['common', 'relayers']) ? this.$store.getters['common/relayers/getRelayers'] : []\n    },\n    availableChannels: function (): Array<Relayer> {\n      return this.relayers?.filter((x) => x.status == 'connected') ?? []\n    },\n    depsLoaded: function (): boolean {\n      return this._depsLoaded\n    },\n    validAddress: function (): boolean {\n      let toAddress\n      try {\n        toAddress = !!Bech32.decode(this.transfer.recipient)\n      } catch {\n        toAddress = false\n      }\n      return toAddress\n    },\n  },\n  methods: {\n    parseAmount(amount: string): number {\n      return amount == '' ? 0 : parseInt(amount)\n    },\n    addMapping: async function (balance: Amount): Promise<void> {\n      if (balance.denom.indexOf('ibc/') == 0) {\n        const denom = balance.denom.split('/')\n        const hash = denom[1]\n        this.denomTraces[hash] = await this.$store.dispatch('ibc.applications.transfer.v1/QueryDenomTrace', {\n          options: { subscribe: false, all: false },\n          params: { hash },\n        })\n      }\n    },\n    resetTransaction: function (): void {\n      this.transfer.amount = [{ amount: '', denom: this.balances[0].denom }]\n      this.transfer.recipient = ''\n      this.transfer.memo = ''\n      this.transfer.channel = ''\n      this.transfer.fees = [{ amount: '', denom: this.balances[0].denom }]\n      this.feesOpen = false\n      this.memoOpen = false\n    },\n    resetFees: function (): void {\n      this.transfer.fees = [{ amount: '', denom: this.balances[0].denom }]\n    },\n    addToken: function (): void {\n      this.transfer.amount.push({\n        amount: '',\n        denom: this.nextToAdd?.denom ?? '',\n      })\n    },\n    addFeeToken: function (): void {\n      this.transfer.fees.push({\n        amount: '',\n        denom: this.nextFeeToAdd?.denom ?? '',\n      })\n    },\n    \n    sendTransaction: async function (): Promise<void> {\n      if (this._depsLoaded && this.address) {\n        if (this.validForm && !this.inFlight) {\n          if (this.transfer.channel == '') {\n            const value = {\n              amount: this.transfer.amount,\n              toAddress: this.transfer.recipient,\n              fromAddress: this.bankAddress,\n            }\n\n            this.inFlight = true\n            this.transfer.fees.forEach((x) => {\n              if (x.amount == '') {\n                x.amount = '0'\n              }\n            })\n            try {\n              const txResult = await this.$store.dispatch('irismod.nft/sendMsgTransfernft', {\n                value,\n                fee: this.transfer.fees,\n                memo: this.transfer.memo,\n              })\n              if (txResult && !txResult.code) {\n                this.resetTransaction()\n              }\n            } catch (e) {\n              console.error(e)\n            } finally {\n              this.inFlight = false\n            }\n            await this.$store.dispatch('irismod.nft/QueryOwner', {\n              query: { owner: this.bankAddress, denomId:\"gws\" },\n //             options: { all: true, subscribe: false },\n            })\n          } else {\n            this.inFlight = true\n            this.transfer.fees.forEach((x) => {\n              if (x.amount == '') {\n                x.amount = '0'\n              }\n            })\n            try {\n              const txResult = await this.$store.dispatch('ibc.applications.transfer.v1/sendMsgTransfer', {\n                value: {\n                  sourcePort: 'transfer',\n                  sourceChannel: this.transfer.channel,\n                  sender: this.bankAddress,\n                  receiver: this.transfer.recipient,\n                  timeoutHeight: 0,\n                  timeoutTimestamp: long.fromNumber(new Date().getTime() + 60000 ).multiply(1000000),\n                  token: this.transfer.amount[0],\n                },\n                fee: this.transfer.fees,\n                memo: this.transfer.memo,\n              })\n              if (txResult && !txResult.code) {\n                this.resetTransaction()\n              }\n            } catch (e) {\n              console.error(e)\n            } finally {\n              this.inFlight = false\n            }\n            await this.$store.dispatch('irismod.nft/QueryOwner', {\n              query: { owner: this.bankAddress, denomId:\"gws\" },\n//              options: { all: true, subscribe: false },\n            })\n          }\n        }\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}